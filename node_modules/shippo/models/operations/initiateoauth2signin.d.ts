import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type InitiateOauth2SigninGlobals = {
    /**
     * Optional string used to pick a non-default API version to use. See our <a href="https://docs.goshippo.com/docs/api_concepts/apiversioning/">API version</a> guide.
     */
    shippoApiVersion?: string | undefined;
};
export type InitiateOauth2SigninRequest = {
    /**
     * The carrier account ID (UUID) to start a signin process.
     */
    carrierAccountObjectId: string;
    /**
     * Callback URL. The URL that tells the authorization server where to send the user back to after they approve the request.
     */
    redirectUri: string;
    /**
     * A random string generated by the consuming application and included in the request to prevent CSRF attacks. The consuming application checks that the same value is returned after the user authorizes Shippo.
     */
    state?: string | undefined;
};
export type InitiateOauth2SigninResponse = {
    headers: {
        [k: string]: Array<string>;
    };
};
/** @internal */
export declare const InitiateOauth2SigninGlobals$inboundSchema: z.ZodType<InitiateOauth2SigninGlobals, z.ZodTypeDef, unknown>;
/** @internal */
export type InitiateOauth2SigninGlobals$Outbound = {
    "SHIPPO-API-VERSION"?: string | undefined;
};
/** @internal */
export declare const InitiateOauth2SigninGlobals$outboundSchema: z.ZodType<InitiateOauth2SigninGlobals$Outbound, z.ZodTypeDef, InitiateOauth2SigninGlobals>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace InitiateOauth2SigninGlobals$ {
    /** @deprecated use `InitiateOauth2SigninGlobals$inboundSchema` instead. */
    const inboundSchema: z.ZodType<InitiateOauth2SigninGlobals, z.ZodTypeDef, unknown>;
    /** @deprecated use `InitiateOauth2SigninGlobals$outboundSchema` instead. */
    const outboundSchema: z.ZodType<InitiateOauth2SigninGlobals$Outbound, z.ZodTypeDef, InitiateOauth2SigninGlobals>;
    /** @deprecated use `InitiateOauth2SigninGlobals$Outbound` instead. */
    type Outbound = InitiateOauth2SigninGlobals$Outbound;
}
export declare function initiateOauth2SigninGlobalsToJSON(initiateOauth2SigninGlobals: InitiateOauth2SigninGlobals): string;
export declare function initiateOauth2SigninGlobalsFromJSON(jsonString: string): SafeParseResult<InitiateOauth2SigninGlobals, SDKValidationError>;
/** @internal */
export declare const InitiateOauth2SigninRequest$inboundSchema: z.ZodType<InitiateOauth2SigninRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type InitiateOauth2SigninRequest$Outbound = {
    CarrierAccountObjectId: string;
    redirect_uri: string;
    state?: string | undefined;
};
/** @internal */
export declare const InitiateOauth2SigninRequest$outboundSchema: z.ZodType<InitiateOauth2SigninRequest$Outbound, z.ZodTypeDef, InitiateOauth2SigninRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace InitiateOauth2SigninRequest$ {
    /** @deprecated use `InitiateOauth2SigninRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<InitiateOauth2SigninRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `InitiateOauth2SigninRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<InitiateOauth2SigninRequest$Outbound, z.ZodTypeDef, InitiateOauth2SigninRequest>;
    /** @deprecated use `InitiateOauth2SigninRequest$Outbound` instead. */
    type Outbound = InitiateOauth2SigninRequest$Outbound;
}
export declare function initiateOauth2SigninRequestToJSON(initiateOauth2SigninRequest: InitiateOauth2SigninRequest): string;
export declare function initiateOauth2SigninRequestFromJSON(jsonString: string): SafeParseResult<InitiateOauth2SigninRequest, SDKValidationError>;
/** @internal */
export declare const InitiateOauth2SigninResponse$inboundSchema: z.ZodType<InitiateOauth2SigninResponse, z.ZodTypeDef, unknown>;
/** @internal */
export type InitiateOauth2SigninResponse$Outbound = {
    Headers: {
        [k: string]: Array<string>;
    };
};
/** @internal */
export declare const InitiateOauth2SigninResponse$outboundSchema: z.ZodType<InitiateOauth2SigninResponse$Outbound, z.ZodTypeDef, InitiateOauth2SigninResponse>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace InitiateOauth2SigninResponse$ {
    /** @deprecated use `InitiateOauth2SigninResponse$inboundSchema` instead. */
    const inboundSchema: z.ZodType<InitiateOauth2SigninResponse, z.ZodTypeDef, unknown>;
    /** @deprecated use `InitiateOauth2SigninResponse$outboundSchema` instead. */
    const outboundSchema: z.ZodType<InitiateOauth2SigninResponse$Outbound, z.ZodTypeDef, InitiateOauth2SigninResponse>;
    /** @deprecated use `InitiateOauth2SigninResponse$Outbound` instead. */
    type Outbound = InitiateOauth2SigninResponse$Outbound;
}
export declare function initiateOauth2SigninResponseToJSON(initiateOauth2SigninResponse: InitiateOauth2SigninResponse): string;
export declare function initiateOauth2SigninResponseFromJSON(jsonString: string): SafeParseResult<InitiateOauth2SigninResponse, SDKValidationError>;
//# sourceMappingURL=initiateoauth2signin.d.ts.map