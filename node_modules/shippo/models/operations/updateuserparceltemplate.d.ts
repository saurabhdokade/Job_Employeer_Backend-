import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type UpdateUserParcelTemplateGlobals = {
    /**
     * Optional string used to pick a non-default API version to use. See our <a href="https://docs.goshippo.com/docs/api_concepts/apiversioning/">API version</a> guide.
     */
    shippoApiVersion?: string | undefined;
};
export type UpdateUserParcelTemplateRequest = {
    /**
     * Object ID of the user parcel template
     */
    userParcelTemplateObjectId: string;
    userParcelTemplateUpdateRequest?: components.UserParcelTemplateUpdateRequest | undefined;
};
/** @internal */
export declare const UpdateUserParcelTemplateGlobals$inboundSchema: z.ZodType<UpdateUserParcelTemplateGlobals, z.ZodTypeDef, unknown>;
/** @internal */
export type UpdateUserParcelTemplateGlobals$Outbound = {
    "SHIPPO-API-VERSION"?: string | undefined;
};
/** @internal */
export declare const UpdateUserParcelTemplateGlobals$outboundSchema: z.ZodType<UpdateUserParcelTemplateGlobals$Outbound, z.ZodTypeDef, UpdateUserParcelTemplateGlobals>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UpdateUserParcelTemplateGlobals$ {
    /** @deprecated use `UpdateUserParcelTemplateGlobals$inboundSchema` instead. */
    const inboundSchema: z.ZodType<UpdateUserParcelTemplateGlobals, z.ZodTypeDef, unknown>;
    /** @deprecated use `UpdateUserParcelTemplateGlobals$outboundSchema` instead. */
    const outboundSchema: z.ZodType<UpdateUserParcelTemplateGlobals$Outbound, z.ZodTypeDef, UpdateUserParcelTemplateGlobals>;
    /** @deprecated use `UpdateUserParcelTemplateGlobals$Outbound` instead. */
    type Outbound = UpdateUserParcelTemplateGlobals$Outbound;
}
export declare function updateUserParcelTemplateGlobalsToJSON(updateUserParcelTemplateGlobals: UpdateUserParcelTemplateGlobals): string;
export declare function updateUserParcelTemplateGlobalsFromJSON(jsonString: string): SafeParseResult<UpdateUserParcelTemplateGlobals, SDKValidationError>;
/** @internal */
export declare const UpdateUserParcelTemplateRequest$inboundSchema: z.ZodType<UpdateUserParcelTemplateRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type UpdateUserParcelTemplateRequest$Outbound = {
    UserParcelTemplateObjectId: string;
    UserParcelTemplateUpdateRequest?: components.UserParcelTemplateUpdateRequest$Outbound | undefined;
};
/** @internal */
export declare const UpdateUserParcelTemplateRequest$outboundSchema: z.ZodType<UpdateUserParcelTemplateRequest$Outbound, z.ZodTypeDef, UpdateUserParcelTemplateRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UpdateUserParcelTemplateRequest$ {
    /** @deprecated use `UpdateUserParcelTemplateRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<UpdateUserParcelTemplateRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `UpdateUserParcelTemplateRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<UpdateUserParcelTemplateRequest$Outbound, z.ZodTypeDef, UpdateUserParcelTemplateRequest>;
    /** @deprecated use `UpdateUserParcelTemplateRequest$Outbound` instead. */
    type Outbound = UpdateUserParcelTemplateRequest$Outbound;
}
export declare function updateUserParcelTemplateRequestToJSON(updateUserParcelTemplateRequest: UpdateUserParcelTemplateRequest): string;
export declare function updateUserParcelTemplateRequestFromJSON(jsonString: string): SafeParseResult<UpdateUserParcelTemplateRequest, SDKValidationError>;
//# sourceMappingURL=updateuserparceltemplate.d.ts.map