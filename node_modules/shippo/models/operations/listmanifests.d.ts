import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type ListManifestsGlobals = {
    /**
     * Optional string used to pick a non-default API version to use. See our <a href="https://docs.goshippo.com/docs/api_concepts/apiversioning/">API version</a> guide.
     */
    shippoApiVersion?: string | undefined;
};
export type ListManifestsRequest = {
    /**
     * The page number you want to select
     */
    page?: number | undefined;
    /**
     * The number of results to return per page (max 100, default 5)
     */
    results?: number | undefined;
};
/** @internal */
export declare const ListManifestsGlobals$inboundSchema: z.ZodType<ListManifestsGlobals, z.ZodTypeDef, unknown>;
/** @internal */
export type ListManifestsGlobals$Outbound = {
    "SHIPPO-API-VERSION"?: string | undefined;
};
/** @internal */
export declare const ListManifestsGlobals$outboundSchema: z.ZodType<ListManifestsGlobals$Outbound, z.ZodTypeDef, ListManifestsGlobals>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ListManifestsGlobals$ {
    /** @deprecated use `ListManifestsGlobals$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ListManifestsGlobals, z.ZodTypeDef, unknown>;
    /** @deprecated use `ListManifestsGlobals$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ListManifestsGlobals$Outbound, z.ZodTypeDef, ListManifestsGlobals>;
    /** @deprecated use `ListManifestsGlobals$Outbound` instead. */
    type Outbound = ListManifestsGlobals$Outbound;
}
export declare function listManifestsGlobalsToJSON(listManifestsGlobals: ListManifestsGlobals): string;
export declare function listManifestsGlobalsFromJSON(jsonString: string): SafeParseResult<ListManifestsGlobals, SDKValidationError>;
/** @internal */
export declare const ListManifestsRequest$inboundSchema: z.ZodType<ListManifestsRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type ListManifestsRequest$Outbound = {
    page: number;
    results: number;
};
/** @internal */
export declare const ListManifestsRequest$outboundSchema: z.ZodType<ListManifestsRequest$Outbound, z.ZodTypeDef, ListManifestsRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ListManifestsRequest$ {
    /** @deprecated use `ListManifestsRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ListManifestsRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `ListManifestsRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ListManifestsRequest$Outbound, z.ZodTypeDef, ListManifestsRequest>;
    /** @deprecated use `ListManifestsRequest$Outbound` instead. */
    type Outbound = ListManifestsRequest$Outbound;
}
export declare function listManifestsRequestToJSON(listManifestsRequest: ListManifestsRequest): string;
export declare function listManifestsRequestFromJSON(jsonString: string): SafeParseResult<ListManifestsRequest, SDKValidationError>;
//# sourceMappingURL=listmanifests.d.ts.map