import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type GetBatchGlobals = {
    /**
     * Optional string used to pick a non-default API version to use. See our <a href="https://docs.goshippo.com/docs/api_concepts/apiversioning/">API version</a> guide.
     */
    shippoApiVersion?: string | undefined;
};
export type GetBatchRequest = {
    /**
     * Object ID of the batch
     */
    batchId: string;
    /**
     * The page number you want to select
     */
    page?: number | undefined;
    /**
     * The number of results to return per page (max 100, default 5)
     */
    results?: number | undefined;
};
/** @internal */
export declare const GetBatchGlobals$inboundSchema: z.ZodType<GetBatchGlobals, z.ZodTypeDef, unknown>;
/** @internal */
export type GetBatchGlobals$Outbound = {
    "SHIPPO-API-VERSION"?: string | undefined;
};
/** @internal */
export declare const GetBatchGlobals$outboundSchema: z.ZodType<GetBatchGlobals$Outbound, z.ZodTypeDef, GetBatchGlobals>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetBatchGlobals$ {
    /** @deprecated use `GetBatchGlobals$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetBatchGlobals, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetBatchGlobals$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetBatchGlobals$Outbound, z.ZodTypeDef, GetBatchGlobals>;
    /** @deprecated use `GetBatchGlobals$Outbound` instead. */
    type Outbound = GetBatchGlobals$Outbound;
}
export declare function getBatchGlobalsToJSON(getBatchGlobals: GetBatchGlobals): string;
export declare function getBatchGlobalsFromJSON(jsonString: string): SafeParseResult<GetBatchGlobals, SDKValidationError>;
/** @internal */
export declare const GetBatchRequest$inboundSchema: z.ZodType<GetBatchRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type GetBatchRequest$Outbound = {
    BatchId: string;
    page: number;
    results: number;
};
/** @internal */
export declare const GetBatchRequest$outboundSchema: z.ZodType<GetBatchRequest$Outbound, z.ZodTypeDef, GetBatchRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetBatchRequest$ {
    /** @deprecated use `GetBatchRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetBatchRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetBatchRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetBatchRequest$Outbound, z.ZodTypeDef, GetBatchRequest>;
    /** @deprecated use `GetBatchRequest$Outbound` instead. */
    type Outbound = GetBatchRequest$Outbound;
}
export declare function getBatchRequestToJSON(getBatchRequest: GetBatchRequest): string;
export declare function getBatchRequestFromJSON(jsonString: string): SafeParseResult<GetBatchRequest, SDKValidationError>;
//# sourceMappingURL=getbatch.d.ts.map