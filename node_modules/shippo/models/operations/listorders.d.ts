import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type ListOrdersGlobals = {
    /**
     * Optional string used to pick a non-default API version to use. See our <a href="https://docs.goshippo.com/docs/api_concepts/apiversioning/">API version</a> guide.
     */
    shippoApiVersion?: string | undefined;
};
export type ListOrdersRequest = {
    /**
     * The page number you want to select
     */
    page?: number | undefined;
    /**
     * The number of results to return per page (max 100)
     */
    results?: number | undefined;
    /**
     * Filter orders by order status
     */
    orderStatus?: Array<components.OrderStatusEnum> | undefined;
    /**
     * Filter orders by shop app
     */
    shopApp?: components.OrderShopAppEnum | undefined;
    /**
     * Filter orders created after the input date and time (ISO 8601 UTC format).  This is based on the
     *
     * @remarks
     * `placed_at` field, meaning when the order has been placed, not when the order object was created.
     */
    startDate?: string | undefined;
    /**
     * Filter orders created before the input date and time (ISO 8601 UTC format).  This is based on the
     *
     * @remarks
     * `placed_at` field, meaning when the order has been placed, not when the order object was created.
     */
    endDate?: string | undefined;
};
/** @internal */
export declare const ListOrdersGlobals$inboundSchema: z.ZodType<ListOrdersGlobals, z.ZodTypeDef, unknown>;
/** @internal */
export type ListOrdersGlobals$Outbound = {
    "SHIPPO-API-VERSION"?: string | undefined;
};
/** @internal */
export declare const ListOrdersGlobals$outboundSchema: z.ZodType<ListOrdersGlobals$Outbound, z.ZodTypeDef, ListOrdersGlobals>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ListOrdersGlobals$ {
    /** @deprecated use `ListOrdersGlobals$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ListOrdersGlobals, z.ZodTypeDef, unknown>;
    /** @deprecated use `ListOrdersGlobals$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ListOrdersGlobals$Outbound, z.ZodTypeDef, ListOrdersGlobals>;
    /** @deprecated use `ListOrdersGlobals$Outbound` instead. */
    type Outbound = ListOrdersGlobals$Outbound;
}
export declare function listOrdersGlobalsToJSON(listOrdersGlobals: ListOrdersGlobals): string;
export declare function listOrdersGlobalsFromJSON(jsonString: string): SafeParseResult<ListOrdersGlobals, SDKValidationError>;
/** @internal */
export declare const ListOrdersRequest$inboundSchema: z.ZodType<ListOrdersRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type ListOrdersRequest$Outbound = {
    page: number;
    results: number;
    "order_status[]"?: Array<string> | undefined;
    shop_app?: string | undefined;
    start_date?: string | undefined;
    end_date?: string | undefined;
};
/** @internal */
export declare const ListOrdersRequest$outboundSchema: z.ZodType<ListOrdersRequest$Outbound, z.ZodTypeDef, ListOrdersRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ListOrdersRequest$ {
    /** @deprecated use `ListOrdersRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ListOrdersRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `ListOrdersRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ListOrdersRequest$Outbound, z.ZodTypeDef, ListOrdersRequest>;
    /** @deprecated use `ListOrdersRequest$Outbound` instead. */
    type Outbound = ListOrdersRequest$Outbound;
}
export declare function listOrdersRequestToJSON(listOrdersRequest: ListOrdersRequest): string;
export declare function listOrdersRequestFromJSON(jsonString: string): SafeParseResult<ListOrdersRequest, SDKValidationError>;
//# sourceMappingURL=listorders.d.ts.map