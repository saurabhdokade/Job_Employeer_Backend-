"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.listCarrierParcelTemplatesRequestFromJSON = exports.listCarrierParcelTemplatesRequestToJSON = exports.ListCarrierParcelTemplatesRequest$ = exports.ListCarrierParcelTemplatesRequest$outboundSchema = exports.ListCarrierParcelTemplatesRequest$inboundSchema = exports.Include$ = exports.Include$outboundSchema = exports.Include$inboundSchema = exports.listCarrierParcelTemplatesGlobalsFromJSON = exports.listCarrierParcelTemplatesGlobalsToJSON = exports.ListCarrierParcelTemplatesGlobals$ = exports.ListCarrierParcelTemplatesGlobals$outboundSchema = exports.ListCarrierParcelTemplatesGlobals$inboundSchema = exports.Include = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const schemas_js_1 = require("../../lib/schemas.js");
/**
 * filter by user or enabled
 */
exports.Include = {
    All: "all",
    User: "user",
    Enabled: "enabled",
};
/** @internal */
exports.ListCarrierParcelTemplatesGlobals$inboundSchema = z.object({
    "SHIPPO-API-VERSION": z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "SHIPPO-API-VERSION": "shippoApiVersion",
    });
});
/** @internal */
exports.ListCarrierParcelTemplatesGlobals$outboundSchema = z.object({
    shippoApiVersion: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        shippoApiVersion: "SHIPPO-API-VERSION",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var ListCarrierParcelTemplatesGlobals$;
(function (ListCarrierParcelTemplatesGlobals$) {
    /** @deprecated use `ListCarrierParcelTemplatesGlobals$inboundSchema` instead. */
    ListCarrierParcelTemplatesGlobals$.inboundSchema = exports.ListCarrierParcelTemplatesGlobals$inboundSchema;
    /** @deprecated use `ListCarrierParcelTemplatesGlobals$outboundSchema` instead. */
    ListCarrierParcelTemplatesGlobals$.outboundSchema = exports.ListCarrierParcelTemplatesGlobals$outboundSchema;
})(ListCarrierParcelTemplatesGlobals$ || (exports.ListCarrierParcelTemplatesGlobals$ = ListCarrierParcelTemplatesGlobals$ = {}));
function listCarrierParcelTemplatesGlobalsToJSON(listCarrierParcelTemplatesGlobals) {
    return JSON.stringify(exports.ListCarrierParcelTemplatesGlobals$outboundSchema.parse(listCarrierParcelTemplatesGlobals));
}
exports.listCarrierParcelTemplatesGlobalsToJSON = listCarrierParcelTemplatesGlobalsToJSON;
function listCarrierParcelTemplatesGlobalsFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.ListCarrierParcelTemplatesGlobals$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListCarrierParcelTemplatesGlobals' from JSON`);
}
exports.listCarrierParcelTemplatesGlobalsFromJSON = listCarrierParcelTemplatesGlobalsFromJSON;
/** @internal */
exports.Include$inboundSchema = z
    .nativeEnum(exports.Include);
/** @internal */
exports.Include$outboundSchema = exports.Include$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var Include$;
(function (Include$) {
    /** @deprecated use `Include$inboundSchema` instead. */
    Include$.inboundSchema = exports.Include$inboundSchema;
    /** @deprecated use `Include$outboundSchema` instead. */
    Include$.outboundSchema = exports.Include$outboundSchema;
})(Include$ || (exports.Include$ = Include$ = {}));
/** @internal */
exports.ListCarrierParcelTemplatesRequest$inboundSchema = z.object({
    include: exports.Include$inboundSchema.optional(),
    carrier: z.string().optional(),
});
/** @internal */
exports.ListCarrierParcelTemplatesRequest$outboundSchema = z.object({
    include: exports.Include$outboundSchema.optional(),
    carrier: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var ListCarrierParcelTemplatesRequest$;
(function (ListCarrierParcelTemplatesRequest$) {
    /** @deprecated use `ListCarrierParcelTemplatesRequest$inboundSchema` instead. */
    ListCarrierParcelTemplatesRequest$.inboundSchema = exports.ListCarrierParcelTemplatesRequest$inboundSchema;
    /** @deprecated use `ListCarrierParcelTemplatesRequest$outboundSchema` instead. */
    ListCarrierParcelTemplatesRequest$.outboundSchema = exports.ListCarrierParcelTemplatesRequest$outboundSchema;
})(ListCarrierParcelTemplatesRequest$ || (exports.ListCarrierParcelTemplatesRequest$ = ListCarrierParcelTemplatesRequest$ = {}));
function listCarrierParcelTemplatesRequestToJSON(listCarrierParcelTemplatesRequest) {
    return JSON.stringify(exports.ListCarrierParcelTemplatesRequest$outboundSchema.parse(listCarrierParcelTemplatesRequest));
}
exports.listCarrierParcelTemplatesRequestToJSON = listCarrierParcelTemplatesRequestToJSON;
function listCarrierParcelTemplatesRequestFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.ListCarrierParcelTemplatesRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListCarrierParcelTemplatesRequest' from JSON`);
}
exports.listCarrierParcelTemplatesRequestFromJSON = listCarrierParcelTemplatesRequestFromJSON;
//# sourceMappingURL=listcarrierparceltemplates.js.map