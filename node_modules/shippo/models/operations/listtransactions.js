"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.listTransactionsRequestFromJSON = exports.listTransactionsRequestToJSON = exports.ListTransactionsRequest$ = exports.ListTransactionsRequest$outboundSchema = exports.ListTransactionsRequest$inboundSchema = exports.listTransactionsGlobalsFromJSON = exports.listTransactionsGlobalsToJSON = exports.ListTransactionsGlobals$ = exports.ListTransactionsGlobals$outboundSchema = exports.ListTransactionsGlobals$inboundSchema = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const schemas_js_1 = require("../../lib/schemas.js");
const components = __importStar(require("../components/index.js"));
/** @internal */
exports.ListTransactionsGlobals$inboundSchema = z.object({
    "SHIPPO-API-VERSION": z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "SHIPPO-API-VERSION": "shippoApiVersion",
    });
});
/** @internal */
exports.ListTransactionsGlobals$outboundSchema = z.object({
    shippoApiVersion: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        shippoApiVersion: "SHIPPO-API-VERSION",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var ListTransactionsGlobals$;
(function (ListTransactionsGlobals$) {
    /** @deprecated use `ListTransactionsGlobals$inboundSchema` instead. */
    ListTransactionsGlobals$.inboundSchema = exports.ListTransactionsGlobals$inboundSchema;
    /** @deprecated use `ListTransactionsGlobals$outboundSchema` instead. */
    ListTransactionsGlobals$.outboundSchema = exports.ListTransactionsGlobals$outboundSchema;
})(ListTransactionsGlobals$ || (exports.ListTransactionsGlobals$ = ListTransactionsGlobals$ = {}));
function listTransactionsGlobalsToJSON(listTransactionsGlobals) {
    return JSON.stringify(exports.ListTransactionsGlobals$outboundSchema.parse(listTransactionsGlobals));
}
exports.listTransactionsGlobalsToJSON = listTransactionsGlobalsToJSON;
function listTransactionsGlobalsFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.ListTransactionsGlobals$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListTransactionsGlobals' from JSON`);
}
exports.listTransactionsGlobalsFromJSON = listTransactionsGlobalsFromJSON;
/** @internal */
exports.ListTransactionsRequest$inboundSchema = z.object({
    rate: z.string().optional(),
    object_status: components.TransactionStatusEnum$inboundSchema.optional(),
    tracking_status: components.TrackingStatusEnum$inboundSchema.optional(),
    page: z.number().int().default(1),
    results: z.number().int().default(25),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "object_status": "objectStatus",
        "tracking_status": "trackingStatus",
    });
});
/** @internal */
exports.ListTransactionsRequest$outboundSchema = z.object({
    rate: z.string().optional(),
    objectStatus: components.TransactionStatusEnum$outboundSchema.optional(),
    trackingStatus: components.TrackingStatusEnum$outboundSchema.optional(),
    page: z.number().int().default(1),
    results: z.number().int().default(25),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        objectStatus: "object_status",
        trackingStatus: "tracking_status",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var ListTransactionsRequest$;
(function (ListTransactionsRequest$) {
    /** @deprecated use `ListTransactionsRequest$inboundSchema` instead. */
    ListTransactionsRequest$.inboundSchema = exports.ListTransactionsRequest$inboundSchema;
    /** @deprecated use `ListTransactionsRequest$outboundSchema` instead. */
    ListTransactionsRequest$.outboundSchema = exports.ListTransactionsRequest$outboundSchema;
})(ListTransactionsRequest$ || (exports.ListTransactionsRequest$ = ListTransactionsRequest$ = {}));
function listTransactionsRequestToJSON(listTransactionsRequest) {
    return JSON.stringify(exports.ListTransactionsRequest$outboundSchema.parse(listTransactionsRequest));
}
exports.listTransactionsRequestToJSON = listTransactionsRequestToJSON;
function listTransactionsRequestFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.ListTransactionsRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListTransactionsRequest' from JSON`);
}
exports.listTransactionsRequestFromJSON = listTransactionsRequestFromJSON;
//# sourceMappingURL=listtransactions.js.map