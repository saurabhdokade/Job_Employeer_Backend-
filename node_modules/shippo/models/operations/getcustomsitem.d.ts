import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type GetCustomsItemGlobals = {
    /**
     * Optional string used to pick a non-default API version to use. See our <a href="https://docs.goshippo.com/docs/api_concepts/apiversioning/">API version</a> guide.
     */
    shippoApiVersion?: string | undefined;
};
export type GetCustomsItemRequest = {
    /**
     * Object ID of the customs item
     */
    customsItemId: string;
    /**
     * The page number you want to select
     */
    page?: number | undefined;
};
/** @internal */
export declare const GetCustomsItemGlobals$inboundSchema: z.ZodType<GetCustomsItemGlobals, z.ZodTypeDef, unknown>;
/** @internal */
export type GetCustomsItemGlobals$Outbound = {
    "SHIPPO-API-VERSION"?: string | undefined;
};
/** @internal */
export declare const GetCustomsItemGlobals$outboundSchema: z.ZodType<GetCustomsItemGlobals$Outbound, z.ZodTypeDef, GetCustomsItemGlobals>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetCustomsItemGlobals$ {
    /** @deprecated use `GetCustomsItemGlobals$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetCustomsItemGlobals, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetCustomsItemGlobals$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetCustomsItemGlobals$Outbound, z.ZodTypeDef, GetCustomsItemGlobals>;
    /** @deprecated use `GetCustomsItemGlobals$Outbound` instead. */
    type Outbound = GetCustomsItemGlobals$Outbound;
}
export declare function getCustomsItemGlobalsToJSON(getCustomsItemGlobals: GetCustomsItemGlobals): string;
export declare function getCustomsItemGlobalsFromJSON(jsonString: string): SafeParseResult<GetCustomsItemGlobals, SDKValidationError>;
/** @internal */
export declare const GetCustomsItemRequest$inboundSchema: z.ZodType<GetCustomsItemRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type GetCustomsItemRequest$Outbound = {
    CustomsItemId: string;
    page: number;
};
/** @internal */
export declare const GetCustomsItemRequest$outboundSchema: z.ZodType<GetCustomsItemRequest$Outbound, z.ZodTypeDef, GetCustomsItemRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetCustomsItemRequest$ {
    /** @deprecated use `GetCustomsItemRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetCustomsItemRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetCustomsItemRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetCustomsItemRequest$Outbound, z.ZodTypeDef, GetCustomsItemRequest>;
    /** @deprecated use `GetCustomsItemRequest$Outbound` instead. */
    type Outbound = GetCustomsItemRequest$Outbound;
}
export declare function getCustomsItemRequestToJSON(getCustomsItemRequest: GetCustomsItemRequest): string;
export declare function getCustomsItemRequestFromJSON(jsonString: string): SafeParseResult<GetCustomsItemRequest, SDKValidationError>;
//# sourceMappingURL=getcustomsitem.d.ts.map