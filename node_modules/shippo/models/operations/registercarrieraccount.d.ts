import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type RegisterCarrierAccountGlobals = {
    /**
     * Optional string used to pick a non-default API version to use. See our <a href="https://docs.goshippo.com/docs/api_concepts/apiversioning/">API version</a> guide.
     */
    shippoApiVersion?: string | undefined;
};
/**
 * The body of the request.
 */
export type RegisterCarrierAccountRequestBody = (components.CarrierAccountCanadaPostCreateRequest & {
    carrier: "canada_post";
}) | (components.CarrierAccountChronopostCreateRequest & {
    carrier: "chronopost";
}) | (components.CarrierAccountColissimoCreateRequest & {
    carrier: "colissimo";
}) | (components.CarrierAccountCorreosCreateRequest & {
    carrier: "correos";
}) | (components.CarrierAccountDeutschePostCreateRequest & {
    carrier: "deutsche_post";
}) | (components.CarrierAccountDHLExpressCreateRequest & {
    carrier: "dhl_express";
}) | (components.CarrierAccountDpdDeCreateRequest & {
    carrier: "dpd_de";
}) | (components.CarrierAccountDPDUKCreateRequest & {
    carrier: "dpd_uk";
}) | (components.CarrierAccountFedExCreateRequest & {
    carrier: "fedex";
}) | (components.CarrierAccountHermesUKCreateRequest & {
    carrier: "hermes_uk";
}) | (components.CarrierAccountMondialRelayCreateRequest & {
    carrier: "mondial_relay";
}) | (components.CarrierAccountPosteItalianeCreateRequest & {
    carrier: "poste_italiane";
}) | (components.CarrierAccountUPSCreateRequest & {
    carrier: "ups";
}) | (components.CarrierAccountUSPSCreateRequest & {
    carrier: "usps";
}) | (components.CarrierAccountSendleCreateRequest & {
    carrier: "sendle";
});
/** @internal */
export declare const RegisterCarrierAccountGlobals$inboundSchema: z.ZodType<RegisterCarrierAccountGlobals, z.ZodTypeDef, unknown>;
/** @internal */
export type RegisterCarrierAccountGlobals$Outbound = {
    "SHIPPO-API-VERSION"?: string | undefined;
};
/** @internal */
export declare const RegisterCarrierAccountGlobals$outboundSchema: z.ZodType<RegisterCarrierAccountGlobals$Outbound, z.ZodTypeDef, RegisterCarrierAccountGlobals>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace RegisterCarrierAccountGlobals$ {
    /** @deprecated use `RegisterCarrierAccountGlobals$inboundSchema` instead. */
    const inboundSchema: z.ZodType<RegisterCarrierAccountGlobals, z.ZodTypeDef, unknown>;
    /** @deprecated use `RegisterCarrierAccountGlobals$outboundSchema` instead. */
    const outboundSchema: z.ZodType<RegisterCarrierAccountGlobals$Outbound, z.ZodTypeDef, RegisterCarrierAccountGlobals>;
    /** @deprecated use `RegisterCarrierAccountGlobals$Outbound` instead. */
    type Outbound = RegisterCarrierAccountGlobals$Outbound;
}
export declare function registerCarrierAccountGlobalsToJSON(registerCarrierAccountGlobals: RegisterCarrierAccountGlobals): string;
export declare function registerCarrierAccountGlobalsFromJSON(jsonString: string): SafeParseResult<RegisterCarrierAccountGlobals, SDKValidationError>;
/** @internal */
export declare const RegisterCarrierAccountRequestBody$inboundSchema: z.ZodType<RegisterCarrierAccountRequestBody, z.ZodTypeDef, unknown>;
/** @internal */
export type RegisterCarrierAccountRequestBody$Outbound = (components.CarrierAccountCanadaPostCreateRequest$Outbound & {
    carrier: "canada_post";
}) | (components.CarrierAccountChronopostCreateRequest$Outbound & {
    carrier: "chronopost";
}) | (components.CarrierAccountColissimoCreateRequest$Outbound & {
    carrier: "colissimo";
}) | (components.CarrierAccountCorreosCreateRequest$Outbound & {
    carrier: "correos";
}) | (components.CarrierAccountDeutschePostCreateRequest$Outbound & {
    carrier: "deutsche_post";
}) | (components.CarrierAccountDHLExpressCreateRequest$Outbound & {
    carrier: "dhl_express";
}) | (components.CarrierAccountDpdDeCreateRequest$Outbound & {
    carrier: "dpd_de";
}) | (components.CarrierAccountDPDUKCreateRequest$Outbound & {
    carrier: "dpd_uk";
}) | (components.CarrierAccountFedExCreateRequest$Outbound & {
    carrier: "fedex";
}) | (components.CarrierAccountHermesUKCreateRequest$Outbound & {
    carrier: "hermes_uk";
}) | (components.CarrierAccountMondialRelayCreateRequest$Outbound & {
    carrier: "mondial_relay";
}) | (components.CarrierAccountPosteItalianeCreateRequest$Outbound & {
    carrier: "poste_italiane";
}) | (components.CarrierAccountUPSCreateRequest$Outbound & {
    carrier: "ups";
}) | (components.CarrierAccountUSPSCreateRequest$Outbound & {
    carrier: "usps";
}) | (components.CarrierAccountSendleCreateRequest$Outbound & {
    carrier: "sendle";
});
/** @internal */
export declare const RegisterCarrierAccountRequestBody$outboundSchema: z.ZodType<RegisterCarrierAccountRequestBody$Outbound, z.ZodTypeDef, RegisterCarrierAccountRequestBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace RegisterCarrierAccountRequestBody$ {
    /** @deprecated use `RegisterCarrierAccountRequestBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<RegisterCarrierAccountRequestBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `RegisterCarrierAccountRequestBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<RegisterCarrierAccountRequestBody$Outbound, z.ZodTypeDef, RegisterCarrierAccountRequestBody>;
    /** @deprecated use `RegisterCarrierAccountRequestBody$Outbound` instead. */
    type Outbound = RegisterCarrierAccountRequestBody$Outbound;
}
export declare function registerCarrierAccountRequestBodyToJSON(registerCarrierAccountRequestBody: RegisterCarrierAccountRequestBody): string;
export declare function registerCarrierAccountRequestBodyFromJSON(jsonString: string): SafeParseResult<RegisterCarrierAccountRequestBody, SDKValidationError>;
//# sourceMappingURL=registercarrieraccount.d.ts.map