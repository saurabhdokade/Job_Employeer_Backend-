import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type UpdateCarrierAccountGlobals = {
    /**
     * Optional string used to pick a non-default API version to use. See our <a href="https://docs.goshippo.com/docs/api_concepts/apiversioning/">API version</a> guide.
     */
    shippoApiVersion?: string | undefined;
};
export type UpdateCarrierAccountRequest = {
    /**
     * Object ID of the carrier account
     */
    carrierAccountId: string;
    /**
     * Examples.
     */
    carrierAccountBase?: components.CarrierAccountBase | undefined;
};
/** @internal */
export declare const UpdateCarrierAccountGlobals$inboundSchema: z.ZodType<UpdateCarrierAccountGlobals, z.ZodTypeDef, unknown>;
/** @internal */
export type UpdateCarrierAccountGlobals$Outbound = {
    "SHIPPO-API-VERSION"?: string | undefined;
};
/** @internal */
export declare const UpdateCarrierAccountGlobals$outboundSchema: z.ZodType<UpdateCarrierAccountGlobals$Outbound, z.ZodTypeDef, UpdateCarrierAccountGlobals>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UpdateCarrierAccountGlobals$ {
    /** @deprecated use `UpdateCarrierAccountGlobals$inboundSchema` instead. */
    const inboundSchema: z.ZodType<UpdateCarrierAccountGlobals, z.ZodTypeDef, unknown>;
    /** @deprecated use `UpdateCarrierAccountGlobals$outboundSchema` instead. */
    const outboundSchema: z.ZodType<UpdateCarrierAccountGlobals$Outbound, z.ZodTypeDef, UpdateCarrierAccountGlobals>;
    /** @deprecated use `UpdateCarrierAccountGlobals$Outbound` instead. */
    type Outbound = UpdateCarrierAccountGlobals$Outbound;
}
export declare function updateCarrierAccountGlobalsToJSON(updateCarrierAccountGlobals: UpdateCarrierAccountGlobals): string;
export declare function updateCarrierAccountGlobalsFromJSON(jsonString: string): SafeParseResult<UpdateCarrierAccountGlobals, SDKValidationError>;
/** @internal */
export declare const UpdateCarrierAccountRequest$inboundSchema: z.ZodType<UpdateCarrierAccountRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type UpdateCarrierAccountRequest$Outbound = {
    CarrierAccountId: string;
    CarrierAccountBase?: components.CarrierAccountBase$Outbound | undefined;
};
/** @internal */
export declare const UpdateCarrierAccountRequest$outboundSchema: z.ZodType<UpdateCarrierAccountRequest$Outbound, z.ZodTypeDef, UpdateCarrierAccountRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UpdateCarrierAccountRequest$ {
    /** @deprecated use `UpdateCarrierAccountRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<UpdateCarrierAccountRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `UpdateCarrierAccountRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<UpdateCarrierAccountRequest$Outbound, z.ZodTypeDef, UpdateCarrierAccountRequest>;
    /** @deprecated use `UpdateCarrierAccountRequest$Outbound` instead. */
    type Outbound = UpdateCarrierAccountRequest$Outbound;
}
export declare function updateCarrierAccountRequestToJSON(updateCarrierAccountRequest: UpdateCarrierAccountRequest): string;
export declare function updateCarrierAccountRequestFromJSON(jsonString: string): SafeParseResult<UpdateCarrierAccountRequest, SDKValidationError>;
//# sourceMappingURL=updatecarrieraccount.d.ts.map