import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type ListUserParcelTemplatesGlobals = {
    /**
     * Optional string used to pick a non-default API version to use. See our <a href="https://docs.goshippo.com/docs/api_concepts/apiversioning/">API version</a> guide.
     */
    shippoApiVersion?: string | undefined;
};
export type ListUserParcelTemplatesRequest = {};
/** @internal */
export declare const ListUserParcelTemplatesGlobals$inboundSchema: z.ZodType<ListUserParcelTemplatesGlobals, z.ZodTypeDef, unknown>;
/** @internal */
export type ListUserParcelTemplatesGlobals$Outbound = {
    "SHIPPO-API-VERSION"?: string | undefined;
};
/** @internal */
export declare const ListUserParcelTemplatesGlobals$outboundSchema: z.ZodType<ListUserParcelTemplatesGlobals$Outbound, z.ZodTypeDef, ListUserParcelTemplatesGlobals>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ListUserParcelTemplatesGlobals$ {
    /** @deprecated use `ListUserParcelTemplatesGlobals$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ListUserParcelTemplatesGlobals, z.ZodTypeDef, unknown>;
    /** @deprecated use `ListUserParcelTemplatesGlobals$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ListUserParcelTemplatesGlobals$Outbound, z.ZodTypeDef, ListUserParcelTemplatesGlobals>;
    /** @deprecated use `ListUserParcelTemplatesGlobals$Outbound` instead. */
    type Outbound = ListUserParcelTemplatesGlobals$Outbound;
}
export declare function listUserParcelTemplatesGlobalsToJSON(listUserParcelTemplatesGlobals: ListUserParcelTemplatesGlobals): string;
export declare function listUserParcelTemplatesGlobalsFromJSON(jsonString: string): SafeParseResult<ListUserParcelTemplatesGlobals, SDKValidationError>;
/** @internal */
export declare const ListUserParcelTemplatesRequest$inboundSchema: z.ZodType<ListUserParcelTemplatesRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type ListUserParcelTemplatesRequest$Outbound = {};
/** @internal */
export declare const ListUserParcelTemplatesRequest$outboundSchema: z.ZodType<ListUserParcelTemplatesRequest$Outbound, z.ZodTypeDef, ListUserParcelTemplatesRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ListUserParcelTemplatesRequest$ {
    /** @deprecated use `ListUserParcelTemplatesRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ListUserParcelTemplatesRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `ListUserParcelTemplatesRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ListUserParcelTemplatesRequest$Outbound, z.ZodTypeDef, ListUserParcelTemplatesRequest>;
    /** @deprecated use `ListUserParcelTemplatesRequest$Outbound` instead. */
    type Outbound = ListUserParcelTemplatesRequest$Outbound;
}
export declare function listUserParcelTemplatesRequestToJSON(listUserParcelTemplatesRequest: ListUserParcelTemplatesRequest): string;
export declare function listUserParcelTemplatesRequestFromJSON(jsonString: string): SafeParseResult<ListUserParcelTemplatesRequest, SDKValidationError>;
//# sourceMappingURL=listuserparceltemplates.d.ts.map