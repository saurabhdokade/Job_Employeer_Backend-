"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getShipmentRequestFromJSON = exports.getShipmentRequestToJSON = exports.GetShipmentRequest$ = exports.GetShipmentRequest$outboundSchema = exports.GetShipmentRequest$inboundSchema = exports.getShipmentGlobalsFromJSON = exports.getShipmentGlobalsToJSON = exports.GetShipmentGlobals$ = exports.GetShipmentGlobals$outboundSchema = exports.GetShipmentGlobals$inboundSchema = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const schemas_js_1 = require("../../lib/schemas.js");
/** @internal */
exports.GetShipmentGlobals$inboundSchema = z.object({
    "SHIPPO-API-VERSION": z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "SHIPPO-API-VERSION": "shippoApiVersion",
    });
});
/** @internal */
exports.GetShipmentGlobals$outboundSchema = z.object({
    shippoApiVersion: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        shippoApiVersion: "SHIPPO-API-VERSION",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var GetShipmentGlobals$;
(function (GetShipmentGlobals$) {
    /** @deprecated use `GetShipmentGlobals$inboundSchema` instead. */
    GetShipmentGlobals$.inboundSchema = exports.GetShipmentGlobals$inboundSchema;
    /** @deprecated use `GetShipmentGlobals$outboundSchema` instead. */
    GetShipmentGlobals$.outboundSchema = exports.GetShipmentGlobals$outboundSchema;
})(GetShipmentGlobals$ || (exports.GetShipmentGlobals$ = GetShipmentGlobals$ = {}));
function getShipmentGlobalsToJSON(getShipmentGlobals) {
    return JSON.stringify(exports.GetShipmentGlobals$outboundSchema.parse(getShipmentGlobals));
}
exports.getShipmentGlobalsToJSON = getShipmentGlobalsToJSON;
function getShipmentGlobalsFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.GetShipmentGlobals$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetShipmentGlobals' from JSON`);
}
exports.getShipmentGlobalsFromJSON = getShipmentGlobalsFromJSON;
/** @internal */
exports.GetShipmentRequest$inboundSchema = z.object({
    ShipmentId: z.string(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "ShipmentId": "shipmentId",
    });
});
/** @internal */
exports.GetShipmentRequest$outboundSchema = z.object({
    shipmentId: z.string(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        shipmentId: "ShipmentId",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var GetShipmentRequest$;
(function (GetShipmentRequest$) {
    /** @deprecated use `GetShipmentRequest$inboundSchema` instead. */
    GetShipmentRequest$.inboundSchema = exports.GetShipmentRequest$inboundSchema;
    /** @deprecated use `GetShipmentRequest$outboundSchema` instead. */
    GetShipmentRequest$.outboundSchema = exports.GetShipmentRequest$outboundSchema;
})(GetShipmentRequest$ || (exports.GetShipmentRequest$ = GetShipmentRequest$ = {}));
function getShipmentRequestToJSON(getShipmentRequest) {
    return JSON.stringify(exports.GetShipmentRequest$outboundSchema.parse(getShipmentRequest));
}
exports.getShipmentRequestToJSON = getShipmentRequestToJSON;
function getShipmentRequestFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.GetShipmentRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetShipmentRequest' from JSON`);
}
exports.getShipmentRequestFromJSON = getShipmentRequestFromJSON;
//# sourceMappingURL=getshipment.js.map