import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type ValidateAddressGlobals = {
    /**
     * Optional string used to pick a non-default API version to use. See our <a href="https://docs.goshippo.com/docs/api_concepts/apiversioning/">API version</a> guide.
     */
    shippoApiVersion?: string | undefined;
};
export type ValidateAddressRequest = {
    /**
     * Object ID of the address
     */
    addressId: string;
};
/** @internal */
export declare const ValidateAddressGlobals$inboundSchema: z.ZodType<ValidateAddressGlobals, z.ZodTypeDef, unknown>;
/** @internal */
export type ValidateAddressGlobals$Outbound = {
    "SHIPPO-API-VERSION"?: string | undefined;
};
/** @internal */
export declare const ValidateAddressGlobals$outboundSchema: z.ZodType<ValidateAddressGlobals$Outbound, z.ZodTypeDef, ValidateAddressGlobals>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ValidateAddressGlobals$ {
    /** @deprecated use `ValidateAddressGlobals$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ValidateAddressGlobals, z.ZodTypeDef, unknown>;
    /** @deprecated use `ValidateAddressGlobals$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ValidateAddressGlobals$Outbound, z.ZodTypeDef, ValidateAddressGlobals>;
    /** @deprecated use `ValidateAddressGlobals$Outbound` instead. */
    type Outbound = ValidateAddressGlobals$Outbound;
}
export declare function validateAddressGlobalsToJSON(validateAddressGlobals: ValidateAddressGlobals): string;
export declare function validateAddressGlobalsFromJSON(jsonString: string): SafeParseResult<ValidateAddressGlobals, SDKValidationError>;
/** @internal */
export declare const ValidateAddressRequest$inboundSchema: z.ZodType<ValidateAddressRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type ValidateAddressRequest$Outbound = {
    AddressId: string;
};
/** @internal */
export declare const ValidateAddressRequest$outboundSchema: z.ZodType<ValidateAddressRequest$Outbound, z.ZodTypeDef, ValidateAddressRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ValidateAddressRequest$ {
    /** @deprecated use `ValidateAddressRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ValidateAddressRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `ValidateAddressRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ValidateAddressRequest$Outbound, z.ZodTypeDef, ValidateAddressRequest>;
    /** @deprecated use `ValidateAddressRequest$Outbound` instead. */
    type Outbound = ValidateAddressRequest$Outbound;
}
export declare function validateAddressRequestToJSON(validateAddressRequest: ValidateAddressRequest): string;
export declare function validateAddressRequestFromJSON(jsonString: string): SafeParseResult<ValidateAddressRequest, SDKValidationError>;
//# sourceMappingURL=validateaddress.d.ts.map