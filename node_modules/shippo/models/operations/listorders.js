"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.listOrdersRequestFromJSON = exports.listOrdersRequestToJSON = exports.ListOrdersRequest$ = exports.ListOrdersRequest$outboundSchema = exports.ListOrdersRequest$inboundSchema = exports.listOrdersGlobalsFromJSON = exports.listOrdersGlobalsToJSON = exports.ListOrdersGlobals$ = exports.ListOrdersGlobals$outboundSchema = exports.ListOrdersGlobals$inboundSchema = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const schemas_js_1 = require("../../lib/schemas.js");
const components = __importStar(require("../components/index.js"));
/** @internal */
exports.ListOrdersGlobals$inboundSchema = z.object({
    "SHIPPO-API-VERSION": z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "SHIPPO-API-VERSION": "shippoApiVersion",
    });
});
/** @internal */
exports.ListOrdersGlobals$outboundSchema = z.object({
    shippoApiVersion: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        shippoApiVersion: "SHIPPO-API-VERSION",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var ListOrdersGlobals$;
(function (ListOrdersGlobals$) {
    /** @deprecated use `ListOrdersGlobals$inboundSchema` instead. */
    ListOrdersGlobals$.inboundSchema = exports.ListOrdersGlobals$inboundSchema;
    /** @deprecated use `ListOrdersGlobals$outboundSchema` instead. */
    ListOrdersGlobals$.outboundSchema = exports.ListOrdersGlobals$outboundSchema;
})(ListOrdersGlobals$ || (exports.ListOrdersGlobals$ = ListOrdersGlobals$ = {}));
function listOrdersGlobalsToJSON(listOrdersGlobals) {
    return JSON.stringify(exports.ListOrdersGlobals$outboundSchema.parse(listOrdersGlobals));
}
exports.listOrdersGlobalsToJSON = listOrdersGlobalsToJSON;
function listOrdersGlobalsFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.ListOrdersGlobals$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListOrdersGlobals' from JSON`);
}
exports.listOrdersGlobalsFromJSON = listOrdersGlobalsFromJSON;
/** @internal */
exports.ListOrdersRequest$inboundSchema = z.object({
    page: z.number().int().default(1),
    results: z.number().int().default(25),
    "order_status[]": z.array(components.OrderStatusEnum$inboundSchema)
        .optional(),
    shop_app: components.OrderShopAppEnum$inboundSchema.optional(),
    start_date: z.string().optional(),
    end_date: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "order_status[]": "orderStatus",
        "shop_app": "shopApp",
        "start_date": "startDate",
        "end_date": "endDate",
    });
});
/** @internal */
exports.ListOrdersRequest$outboundSchema = z.object({
    page: z.number().int().default(1),
    results: z.number().int().default(25),
    orderStatus: z.array(components.OrderStatusEnum$outboundSchema).optional(),
    shopApp: components.OrderShopAppEnum$outboundSchema.optional(),
    startDate: z.string().optional(),
    endDate: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        orderStatus: "order_status[]",
        shopApp: "shop_app",
        startDate: "start_date",
        endDate: "end_date",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var ListOrdersRequest$;
(function (ListOrdersRequest$) {
    /** @deprecated use `ListOrdersRequest$inboundSchema` instead. */
    ListOrdersRequest$.inboundSchema = exports.ListOrdersRequest$inboundSchema;
    /** @deprecated use `ListOrdersRequest$outboundSchema` instead. */
    ListOrdersRequest$.outboundSchema = exports.ListOrdersRequest$outboundSchema;
})(ListOrdersRequest$ || (exports.ListOrdersRequest$ = ListOrdersRequest$ = {}));
function listOrdersRequestToJSON(listOrdersRequest) {
    return JSON.stringify(exports.ListOrdersRequest$outboundSchema.parse(listOrdersRequest));
}
exports.listOrdersRequestToJSON = listOrdersRequestToJSON;
function listOrdersRequestFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.ListOrdersRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListOrdersRequest' from JSON`);
}
exports.listOrdersRequestFromJSON = listOrdersRequestFromJSON;
//# sourceMappingURL=listorders.js.map