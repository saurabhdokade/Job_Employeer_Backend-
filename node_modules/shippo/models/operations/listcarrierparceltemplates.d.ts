import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type ListCarrierParcelTemplatesGlobals = {
    /**
     * Optional string used to pick a non-default API version to use. See our <a href="https://docs.goshippo.com/docs/api_concepts/apiversioning/">API version</a> guide.
     */
    shippoApiVersion?: string | undefined;
};
/**
 * filter by user or enabled
 */
export declare const Include: {
    readonly All: "all";
    readonly User: "user";
    readonly Enabled: "enabled";
};
/**
 * filter by user or enabled
 */
export type Include = ClosedEnum<typeof Include>;
export type ListCarrierParcelTemplatesRequest = {
    /**
     * filter by user or enabled
     */
    include?: Include | undefined;
    /**
     * filter by specific carrier
     */
    carrier?: string | undefined;
};
/** @internal */
export declare const ListCarrierParcelTemplatesGlobals$inboundSchema: z.ZodType<ListCarrierParcelTemplatesGlobals, z.ZodTypeDef, unknown>;
/** @internal */
export type ListCarrierParcelTemplatesGlobals$Outbound = {
    "SHIPPO-API-VERSION"?: string | undefined;
};
/** @internal */
export declare const ListCarrierParcelTemplatesGlobals$outboundSchema: z.ZodType<ListCarrierParcelTemplatesGlobals$Outbound, z.ZodTypeDef, ListCarrierParcelTemplatesGlobals>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ListCarrierParcelTemplatesGlobals$ {
    /** @deprecated use `ListCarrierParcelTemplatesGlobals$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ListCarrierParcelTemplatesGlobals, z.ZodTypeDef, unknown>;
    /** @deprecated use `ListCarrierParcelTemplatesGlobals$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ListCarrierParcelTemplatesGlobals$Outbound, z.ZodTypeDef, ListCarrierParcelTemplatesGlobals>;
    /** @deprecated use `ListCarrierParcelTemplatesGlobals$Outbound` instead. */
    type Outbound = ListCarrierParcelTemplatesGlobals$Outbound;
}
export declare function listCarrierParcelTemplatesGlobalsToJSON(listCarrierParcelTemplatesGlobals: ListCarrierParcelTemplatesGlobals): string;
export declare function listCarrierParcelTemplatesGlobalsFromJSON(jsonString: string): SafeParseResult<ListCarrierParcelTemplatesGlobals, SDKValidationError>;
/** @internal */
export declare const Include$inboundSchema: z.ZodNativeEnum<typeof Include>;
/** @internal */
export declare const Include$outboundSchema: z.ZodNativeEnum<typeof Include>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Include$ {
    /** @deprecated use `Include$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly All: "all";
        readonly User: "user";
        readonly Enabled: "enabled";
    }>;
    /** @deprecated use `Include$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly All: "all";
        readonly User: "user";
        readonly Enabled: "enabled";
    }>;
}
/** @internal */
export declare const ListCarrierParcelTemplatesRequest$inboundSchema: z.ZodType<ListCarrierParcelTemplatesRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type ListCarrierParcelTemplatesRequest$Outbound = {
    include?: string | undefined;
    carrier?: string | undefined;
};
/** @internal */
export declare const ListCarrierParcelTemplatesRequest$outboundSchema: z.ZodType<ListCarrierParcelTemplatesRequest$Outbound, z.ZodTypeDef, ListCarrierParcelTemplatesRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ListCarrierParcelTemplatesRequest$ {
    /** @deprecated use `ListCarrierParcelTemplatesRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ListCarrierParcelTemplatesRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `ListCarrierParcelTemplatesRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ListCarrierParcelTemplatesRequest$Outbound, z.ZodTypeDef, ListCarrierParcelTemplatesRequest>;
    /** @deprecated use `ListCarrierParcelTemplatesRequest$Outbound` instead. */
    type Outbound = ListCarrierParcelTemplatesRequest$Outbound;
}
export declare function listCarrierParcelTemplatesRequestToJSON(listCarrierParcelTemplatesRequest: ListCarrierParcelTemplatesRequest): string;
export declare function listCarrierParcelTemplatesRequestFromJSON(jsonString: string): SafeParseResult<ListCarrierParcelTemplatesRequest, SDKValidationError>;
//# sourceMappingURL=listcarrierparceltemplates.d.ts.map