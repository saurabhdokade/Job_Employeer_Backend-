import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type PurchaseBatchGlobals = {
    /**
     * Optional string used to pick a non-default API version to use. See our <a href="https://docs.goshippo.com/docs/api_concepts/apiversioning/">API version</a> guide.
     */
    shippoApiVersion?: string | undefined;
};
export type PurchaseBatchRequest = {
    /**
     * Object ID of the batch
     */
    batchId: string;
};
/** @internal */
export declare const PurchaseBatchGlobals$inboundSchema: z.ZodType<PurchaseBatchGlobals, z.ZodTypeDef, unknown>;
/** @internal */
export type PurchaseBatchGlobals$Outbound = {
    "SHIPPO-API-VERSION"?: string | undefined;
};
/** @internal */
export declare const PurchaseBatchGlobals$outboundSchema: z.ZodType<PurchaseBatchGlobals$Outbound, z.ZodTypeDef, PurchaseBatchGlobals>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PurchaseBatchGlobals$ {
    /** @deprecated use `PurchaseBatchGlobals$inboundSchema` instead. */
    const inboundSchema: z.ZodType<PurchaseBatchGlobals, z.ZodTypeDef, unknown>;
    /** @deprecated use `PurchaseBatchGlobals$outboundSchema` instead. */
    const outboundSchema: z.ZodType<PurchaseBatchGlobals$Outbound, z.ZodTypeDef, PurchaseBatchGlobals>;
    /** @deprecated use `PurchaseBatchGlobals$Outbound` instead. */
    type Outbound = PurchaseBatchGlobals$Outbound;
}
export declare function purchaseBatchGlobalsToJSON(purchaseBatchGlobals: PurchaseBatchGlobals): string;
export declare function purchaseBatchGlobalsFromJSON(jsonString: string): SafeParseResult<PurchaseBatchGlobals, SDKValidationError>;
/** @internal */
export declare const PurchaseBatchRequest$inboundSchema: z.ZodType<PurchaseBatchRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type PurchaseBatchRequest$Outbound = {
    BatchId: string;
};
/** @internal */
export declare const PurchaseBatchRequest$outboundSchema: z.ZodType<PurchaseBatchRequest$Outbound, z.ZodTypeDef, PurchaseBatchRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PurchaseBatchRequest$ {
    /** @deprecated use `PurchaseBatchRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<PurchaseBatchRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `PurchaseBatchRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<PurchaseBatchRequest$Outbound, z.ZodTypeDef, PurchaseBatchRequest>;
    /** @deprecated use `PurchaseBatchRequest$Outbound` instead. */
    type Outbound = PurchaseBatchRequest$Outbound;
}
export declare function purchaseBatchRequestToJSON(purchaseBatchRequest: PurchaseBatchRequest): string;
export declare function purchaseBatchRequestFromJSON(jsonString: string): SafeParseResult<PurchaseBatchRequest, SDKValidationError>;
//# sourceMappingURL=purchasebatch.d.ts.map