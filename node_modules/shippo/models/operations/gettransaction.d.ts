import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type GetTransactionGlobals = {
    /**
     * Optional string used to pick a non-default API version to use. See our <a href="https://docs.goshippo.com/docs/api_concepts/apiversioning/">API version</a> guide.
     */
    shippoApiVersion?: string | undefined;
};
export type GetTransactionRequest = {
    /**
     * Object ID of the transaction to update
     */
    transactionId: string;
};
/** @internal */
export declare const GetTransactionGlobals$inboundSchema: z.ZodType<GetTransactionGlobals, z.ZodTypeDef, unknown>;
/** @internal */
export type GetTransactionGlobals$Outbound = {
    "SHIPPO-API-VERSION"?: string | undefined;
};
/** @internal */
export declare const GetTransactionGlobals$outboundSchema: z.ZodType<GetTransactionGlobals$Outbound, z.ZodTypeDef, GetTransactionGlobals>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetTransactionGlobals$ {
    /** @deprecated use `GetTransactionGlobals$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetTransactionGlobals, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetTransactionGlobals$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetTransactionGlobals$Outbound, z.ZodTypeDef, GetTransactionGlobals>;
    /** @deprecated use `GetTransactionGlobals$Outbound` instead. */
    type Outbound = GetTransactionGlobals$Outbound;
}
export declare function getTransactionGlobalsToJSON(getTransactionGlobals: GetTransactionGlobals): string;
export declare function getTransactionGlobalsFromJSON(jsonString: string): SafeParseResult<GetTransactionGlobals, SDKValidationError>;
/** @internal */
export declare const GetTransactionRequest$inboundSchema: z.ZodType<GetTransactionRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type GetTransactionRequest$Outbound = {
    TransactionId: string;
};
/** @internal */
export declare const GetTransactionRequest$outboundSchema: z.ZodType<GetTransactionRequest$Outbound, z.ZodTypeDef, GetTransactionRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetTransactionRequest$ {
    /** @deprecated use `GetTransactionRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetTransactionRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetTransactionRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetTransactionRequest$Outbound, z.ZodTypeDef, GetTransactionRequest>;
    /** @deprecated use `GetTransactionRequest$Outbound` instead. */
    type Outbound = GetTransactionRequest$Outbound;
}
export declare function getTransactionRequestToJSON(getTransactionRequest: GetTransactionRequest): string;
export declare function getTransactionRequestFromJSON(jsonString: string): SafeParseResult<GetTransactionRequest, SDKValidationError>;
//# sourceMappingURL=gettransaction.d.ts.map