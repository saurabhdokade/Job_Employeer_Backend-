import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type ListAddressesGlobals = {
    /**
     * Optional string used to pick a non-default API version to use. See our <a href="https://docs.goshippo.com/docs/api_concepts/apiversioning/">API version</a> guide.
     */
    shippoApiVersion?: string | undefined;
};
export type ListAddressesRequest = {
    /**
     * The page number you want to select
     */
    page?: number | undefined;
    /**
     * The number of results to return per page (max 100, default 5)
     */
    results?: number | undefined;
};
/** @internal */
export declare const ListAddressesGlobals$inboundSchema: z.ZodType<ListAddressesGlobals, z.ZodTypeDef, unknown>;
/** @internal */
export type ListAddressesGlobals$Outbound = {
    "SHIPPO-API-VERSION"?: string | undefined;
};
/** @internal */
export declare const ListAddressesGlobals$outboundSchema: z.ZodType<ListAddressesGlobals$Outbound, z.ZodTypeDef, ListAddressesGlobals>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ListAddressesGlobals$ {
    /** @deprecated use `ListAddressesGlobals$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ListAddressesGlobals, z.ZodTypeDef, unknown>;
    /** @deprecated use `ListAddressesGlobals$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ListAddressesGlobals$Outbound, z.ZodTypeDef, ListAddressesGlobals>;
    /** @deprecated use `ListAddressesGlobals$Outbound` instead. */
    type Outbound = ListAddressesGlobals$Outbound;
}
export declare function listAddressesGlobalsToJSON(listAddressesGlobals: ListAddressesGlobals): string;
export declare function listAddressesGlobalsFromJSON(jsonString: string): SafeParseResult<ListAddressesGlobals, SDKValidationError>;
/** @internal */
export declare const ListAddressesRequest$inboundSchema: z.ZodType<ListAddressesRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type ListAddressesRequest$Outbound = {
    page: number;
    results: number;
};
/** @internal */
export declare const ListAddressesRequest$outboundSchema: z.ZodType<ListAddressesRequest$Outbound, z.ZodTypeDef, ListAddressesRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ListAddressesRequest$ {
    /** @deprecated use `ListAddressesRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ListAddressesRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `ListAddressesRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ListAddressesRequest$Outbound, z.ZodTypeDef, ListAddressesRequest>;
    /** @deprecated use `ListAddressesRequest$Outbound` instead. */
    type Outbound = ListAddressesRequest$Outbound;
}
export declare function listAddressesRequestToJSON(listAddressesRequest: ListAddressesRequest): string;
export declare function listAddressesRequestFromJSON(jsonString: string): SafeParseResult<ListAddressesRequest, SDKValidationError>;
//# sourceMappingURL=listaddresses.d.ts.map