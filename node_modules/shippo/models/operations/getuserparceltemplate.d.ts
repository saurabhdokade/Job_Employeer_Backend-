import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type GetUserParcelTemplateGlobals = {
    /**
     * Optional string used to pick a non-default API version to use. See our <a href="https://docs.goshippo.com/docs/api_concepts/apiversioning/">API version</a> guide.
     */
    shippoApiVersion?: string | undefined;
};
export type GetUserParcelTemplateRequest = {
    /**
     * Object ID of the user parcel template
     */
    userParcelTemplateObjectId: string;
};
/** @internal */
export declare const GetUserParcelTemplateGlobals$inboundSchema: z.ZodType<GetUserParcelTemplateGlobals, z.ZodTypeDef, unknown>;
/** @internal */
export type GetUserParcelTemplateGlobals$Outbound = {
    "SHIPPO-API-VERSION"?: string | undefined;
};
/** @internal */
export declare const GetUserParcelTemplateGlobals$outboundSchema: z.ZodType<GetUserParcelTemplateGlobals$Outbound, z.ZodTypeDef, GetUserParcelTemplateGlobals>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetUserParcelTemplateGlobals$ {
    /** @deprecated use `GetUserParcelTemplateGlobals$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetUserParcelTemplateGlobals, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetUserParcelTemplateGlobals$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetUserParcelTemplateGlobals$Outbound, z.ZodTypeDef, GetUserParcelTemplateGlobals>;
    /** @deprecated use `GetUserParcelTemplateGlobals$Outbound` instead. */
    type Outbound = GetUserParcelTemplateGlobals$Outbound;
}
export declare function getUserParcelTemplateGlobalsToJSON(getUserParcelTemplateGlobals: GetUserParcelTemplateGlobals): string;
export declare function getUserParcelTemplateGlobalsFromJSON(jsonString: string): SafeParseResult<GetUserParcelTemplateGlobals, SDKValidationError>;
/** @internal */
export declare const GetUserParcelTemplateRequest$inboundSchema: z.ZodType<GetUserParcelTemplateRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type GetUserParcelTemplateRequest$Outbound = {
    UserParcelTemplateObjectId: string;
};
/** @internal */
export declare const GetUserParcelTemplateRequest$outboundSchema: z.ZodType<GetUserParcelTemplateRequest$Outbound, z.ZodTypeDef, GetUserParcelTemplateRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetUserParcelTemplateRequest$ {
    /** @deprecated use `GetUserParcelTemplateRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetUserParcelTemplateRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetUserParcelTemplateRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetUserParcelTemplateRequest$Outbound, z.ZodTypeDef, GetUserParcelTemplateRequest>;
    /** @deprecated use `GetUserParcelTemplateRequest$Outbound` instead. */
    type Outbound = GetUserParcelTemplateRequest$Outbound;
}
export declare function getUserParcelTemplateRequestToJSON(getUserParcelTemplateRequest: GetUserParcelTemplateRequest): string;
export declare function getUserParcelTemplateRequestFromJSON(jsonString: string): SafeParseResult<GetUserParcelTemplateRequest, SDKValidationError>;
//# sourceMappingURL=getuserparceltemplate.d.ts.map