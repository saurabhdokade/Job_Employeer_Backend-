import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type ListCustomsDeclarationsGlobals = {
    /**
     * Optional string used to pick a non-default API version to use. See our <a href="https://docs.goshippo.com/docs/api_concepts/apiversioning/">API version</a> guide.
     */
    shippoApiVersion?: string | undefined;
};
export type ListCustomsDeclarationsRequest = {
    /**
     * The page number you want to select
     */
    page?: number | undefined;
    /**
     * The number of results to return per page (max 100, default 5)
     */
    results?: number | undefined;
};
/** @internal */
export declare const ListCustomsDeclarationsGlobals$inboundSchema: z.ZodType<ListCustomsDeclarationsGlobals, z.ZodTypeDef, unknown>;
/** @internal */
export type ListCustomsDeclarationsGlobals$Outbound = {
    "SHIPPO-API-VERSION"?: string | undefined;
};
/** @internal */
export declare const ListCustomsDeclarationsGlobals$outboundSchema: z.ZodType<ListCustomsDeclarationsGlobals$Outbound, z.ZodTypeDef, ListCustomsDeclarationsGlobals>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ListCustomsDeclarationsGlobals$ {
    /** @deprecated use `ListCustomsDeclarationsGlobals$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ListCustomsDeclarationsGlobals, z.ZodTypeDef, unknown>;
    /** @deprecated use `ListCustomsDeclarationsGlobals$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ListCustomsDeclarationsGlobals$Outbound, z.ZodTypeDef, ListCustomsDeclarationsGlobals>;
    /** @deprecated use `ListCustomsDeclarationsGlobals$Outbound` instead. */
    type Outbound = ListCustomsDeclarationsGlobals$Outbound;
}
export declare function listCustomsDeclarationsGlobalsToJSON(listCustomsDeclarationsGlobals: ListCustomsDeclarationsGlobals): string;
export declare function listCustomsDeclarationsGlobalsFromJSON(jsonString: string): SafeParseResult<ListCustomsDeclarationsGlobals, SDKValidationError>;
/** @internal */
export declare const ListCustomsDeclarationsRequest$inboundSchema: z.ZodType<ListCustomsDeclarationsRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type ListCustomsDeclarationsRequest$Outbound = {
    page: number;
    results: number;
};
/** @internal */
export declare const ListCustomsDeclarationsRequest$outboundSchema: z.ZodType<ListCustomsDeclarationsRequest$Outbound, z.ZodTypeDef, ListCustomsDeclarationsRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ListCustomsDeclarationsRequest$ {
    /** @deprecated use `ListCustomsDeclarationsRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ListCustomsDeclarationsRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `ListCustomsDeclarationsRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ListCustomsDeclarationsRequest$Outbound, z.ZodTypeDef, ListCustomsDeclarationsRequest>;
    /** @deprecated use `ListCustomsDeclarationsRequest$Outbound` instead. */
    type Outbound = ListCustomsDeclarationsRequest$Outbound;
}
export declare function listCustomsDeclarationsRequestToJSON(listCustomsDeclarationsRequest: ListCustomsDeclarationsRequest): string;
export declare function listCustomsDeclarationsRequestFromJSON(jsonString: string): SafeParseResult<ListCustomsDeclarationsRequest, SDKValidationError>;
//# sourceMappingURL=listcustomsdeclarations.d.ts.map