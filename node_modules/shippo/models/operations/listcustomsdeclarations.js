"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.listCustomsDeclarationsRequestFromJSON = exports.listCustomsDeclarationsRequestToJSON = exports.ListCustomsDeclarationsRequest$ = exports.ListCustomsDeclarationsRequest$outboundSchema = exports.ListCustomsDeclarationsRequest$inboundSchema = exports.listCustomsDeclarationsGlobalsFromJSON = exports.listCustomsDeclarationsGlobalsToJSON = exports.ListCustomsDeclarationsGlobals$ = exports.ListCustomsDeclarationsGlobals$outboundSchema = exports.ListCustomsDeclarationsGlobals$inboundSchema = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const schemas_js_1 = require("../../lib/schemas.js");
/** @internal */
exports.ListCustomsDeclarationsGlobals$inboundSchema = z.object({
    "SHIPPO-API-VERSION": z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "SHIPPO-API-VERSION": "shippoApiVersion",
    });
});
/** @internal */
exports.ListCustomsDeclarationsGlobals$outboundSchema = z.object({
    shippoApiVersion: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        shippoApiVersion: "SHIPPO-API-VERSION",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var ListCustomsDeclarationsGlobals$;
(function (ListCustomsDeclarationsGlobals$) {
    /** @deprecated use `ListCustomsDeclarationsGlobals$inboundSchema` instead. */
    ListCustomsDeclarationsGlobals$.inboundSchema = exports.ListCustomsDeclarationsGlobals$inboundSchema;
    /** @deprecated use `ListCustomsDeclarationsGlobals$outboundSchema` instead. */
    ListCustomsDeclarationsGlobals$.outboundSchema = exports.ListCustomsDeclarationsGlobals$outboundSchema;
})(ListCustomsDeclarationsGlobals$ || (exports.ListCustomsDeclarationsGlobals$ = ListCustomsDeclarationsGlobals$ = {}));
function listCustomsDeclarationsGlobalsToJSON(listCustomsDeclarationsGlobals) {
    return JSON.stringify(exports.ListCustomsDeclarationsGlobals$outboundSchema.parse(listCustomsDeclarationsGlobals));
}
exports.listCustomsDeclarationsGlobalsToJSON = listCustomsDeclarationsGlobalsToJSON;
function listCustomsDeclarationsGlobalsFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.ListCustomsDeclarationsGlobals$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListCustomsDeclarationsGlobals' from JSON`);
}
exports.listCustomsDeclarationsGlobalsFromJSON = listCustomsDeclarationsGlobalsFromJSON;
/** @internal */
exports.ListCustomsDeclarationsRequest$inboundSchema = z.object({
    page: z.number().int().default(1),
    results: z.number().int().default(5),
});
/** @internal */
exports.ListCustomsDeclarationsRequest$outboundSchema = z.object({
    page: z.number().int().default(1),
    results: z.number().int().default(5),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var ListCustomsDeclarationsRequest$;
(function (ListCustomsDeclarationsRequest$) {
    /** @deprecated use `ListCustomsDeclarationsRequest$inboundSchema` instead. */
    ListCustomsDeclarationsRequest$.inboundSchema = exports.ListCustomsDeclarationsRequest$inboundSchema;
    /** @deprecated use `ListCustomsDeclarationsRequest$outboundSchema` instead. */
    ListCustomsDeclarationsRequest$.outboundSchema = exports.ListCustomsDeclarationsRequest$outboundSchema;
})(ListCustomsDeclarationsRequest$ || (exports.ListCustomsDeclarationsRequest$ = ListCustomsDeclarationsRequest$ = {}));
function listCustomsDeclarationsRequestToJSON(listCustomsDeclarationsRequest) {
    return JSON.stringify(exports.ListCustomsDeclarationsRequest$outboundSchema.parse(listCustomsDeclarationsRequest));
}
exports.listCustomsDeclarationsRequestToJSON = listCustomsDeclarationsRequestToJSON;
function listCustomsDeclarationsRequestFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.ListCustomsDeclarationsRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListCustomsDeclarationsRequest' from JSON`);
}
exports.listCustomsDeclarationsRequestFromJSON = listCustomsDeclarationsRequestFromJSON;
//# sourceMappingURL=listcustomsdeclarations.js.map