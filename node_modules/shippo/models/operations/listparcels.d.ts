import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type ListParcelsGlobals = {
    /**
     * Optional string used to pick a non-default API version to use. See our <a href="https://docs.goshippo.com/docs/api_concepts/apiversioning/">API version</a> guide.
     */
    shippoApiVersion?: string | undefined;
};
export type ListParcelsRequest = {
    /**
     * The page number you want to select
     */
    page?: number | undefined;
    /**
     * The number of results to return per page (max 100)
     */
    results?: number | undefined;
};
/** @internal */
export declare const ListParcelsGlobals$inboundSchema: z.ZodType<ListParcelsGlobals, z.ZodTypeDef, unknown>;
/** @internal */
export type ListParcelsGlobals$Outbound = {
    "SHIPPO-API-VERSION"?: string | undefined;
};
/** @internal */
export declare const ListParcelsGlobals$outboundSchema: z.ZodType<ListParcelsGlobals$Outbound, z.ZodTypeDef, ListParcelsGlobals>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ListParcelsGlobals$ {
    /** @deprecated use `ListParcelsGlobals$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ListParcelsGlobals, z.ZodTypeDef, unknown>;
    /** @deprecated use `ListParcelsGlobals$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ListParcelsGlobals$Outbound, z.ZodTypeDef, ListParcelsGlobals>;
    /** @deprecated use `ListParcelsGlobals$Outbound` instead. */
    type Outbound = ListParcelsGlobals$Outbound;
}
export declare function listParcelsGlobalsToJSON(listParcelsGlobals: ListParcelsGlobals): string;
export declare function listParcelsGlobalsFromJSON(jsonString: string): SafeParseResult<ListParcelsGlobals, SDKValidationError>;
/** @internal */
export declare const ListParcelsRequest$inboundSchema: z.ZodType<ListParcelsRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type ListParcelsRequest$Outbound = {
    page: number;
    results: number;
};
/** @internal */
export declare const ListParcelsRequest$outboundSchema: z.ZodType<ListParcelsRequest$Outbound, z.ZodTypeDef, ListParcelsRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ListParcelsRequest$ {
    /** @deprecated use `ListParcelsRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ListParcelsRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `ListParcelsRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ListParcelsRequest$Outbound, z.ZodTypeDef, ListParcelsRequest>;
    /** @deprecated use `ListParcelsRequest$Outbound` instead. */
    type Outbound = ListParcelsRequest$Outbound;
}
export declare function listParcelsRequestToJSON(listParcelsRequest: ListParcelsRequest): string;
export declare function listParcelsRequestFromJSON(jsonString: string): SafeParseResult<ListParcelsRequest, SDKValidationError>;
//# sourceMappingURL=listparcels.d.ts.map