"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.initiateOauth2SigninResponseFromJSON = exports.initiateOauth2SigninResponseToJSON = exports.InitiateOauth2SigninResponse$ = exports.InitiateOauth2SigninResponse$outboundSchema = exports.InitiateOauth2SigninResponse$inboundSchema = exports.initiateOauth2SigninRequestFromJSON = exports.initiateOauth2SigninRequestToJSON = exports.InitiateOauth2SigninRequest$ = exports.InitiateOauth2SigninRequest$outboundSchema = exports.InitiateOauth2SigninRequest$inboundSchema = exports.initiateOauth2SigninGlobalsFromJSON = exports.initiateOauth2SigninGlobalsToJSON = exports.InitiateOauth2SigninGlobals$ = exports.InitiateOauth2SigninGlobals$outboundSchema = exports.InitiateOauth2SigninGlobals$inboundSchema = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const schemas_js_1 = require("../../lib/schemas.js");
/** @internal */
exports.InitiateOauth2SigninGlobals$inboundSchema = z.object({
    "SHIPPO-API-VERSION": z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "SHIPPO-API-VERSION": "shippoApiVersion",
    });
});
/** @internal */
exports.InitiateOauth2SigninGlobals$outboundSchema = z.object({
    shippoApiVersion: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        shippoApiVersion: "SHIPPO-API-VERSION",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var InitiateOauth2SigninGlobals$;
(function (InitiateOauth2SigninGlobals$) {
    /** @deprecated use `InitiateOauth2SigninGlobals$inboundSchema` instead. */
    InitiateOauth2SigninGlobals$.inboundSchema = exports.InitiateOauth2SigninGlobals$inboundSchema;
    /** @deprecated use `InitiateOauth2SigninGlobals$outboundSchema` instead. */
    InitiateOauth2SigninGlobals$.outboundSchema = exports.InitiateOauth2SigninGlobals$outboundSchema;
})(InitiateOauth2SigninGlobals$ || (exports.InitiateOauth2SigninGlobals$ = InitiateOauth2SigninGlobals$ = {}));
function initiateOauth2SigninGlobalsToJSON(initiateOauth2SigninGlobals) {
    return JSON.stringify(exports.InitiateOauth2SigninGlobals$outboundSchema.parse(initiateOauth2SigninGlobals));
}
exports.initiateOauth2SigninGlobalsToJSON = initiateOauth2SigninGlobalsToJSON;
function initiateOauth2SigninGlobalsFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.InitiateOauth2SigninGlobals$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'InitiateOauth2SigninGlobals' from JSON`);
}
exports.initiateOauth2SigninGlobalsFromJSON = initiateOauth2SigninGlobalsFromJSON;
/** @internal */
exports.InitiateOauth2SigninRequest$inboundSchema = z.object({
    CarrierAccountObjectId: z.string(),
    redirect_uri: z.string(),
    state: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "CarrierAccountObjectId": "carrierAccountObjectId",
        "redirect_uri": "redirectUri",
    });
});
/** @internal */
exports.InitiateOauth2SigninRequest$outboundSchema = z.object({
    carrierAccountObjectId: z.string(),
    redirectUri: z.string(),
    state: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        carrierAccountObjectId: "CarrierAccountObjectId",
        redirectUri: "redirect_uri",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var InitiateOauth2SigninRequest$;
(function (InitiateOauth2SigninRequest$) {
    /** @deprecated use `InitiateOauth2SigninRequest$inboundSchema` instead. */
    InitiateOauth2SigninRequest$.inboundSchema = exports.InitiateOauth2SigninRequest$inboundSchema;
    /** @deprecated use `InitiateOauth2SigninRequest$outboundSchema` instead. */
    InitiateOauth2SigninRequest$.outboundSchema = exports.InitiateOauth2SigninRequest$outboundSchema;
})(InitiateOauth2SigninRequest$ || (exports.InitiateOauth2SigninRequest$ = InitiateOauth2SigninRequest$ = {}));
function initiateOauth2SigninRequestToJSON(initiateOauth2SigninRequest) {
    return JSON.stringify(exports.InitiateOauth2SigninRequest$outboundSchema.parse(initiateOauth2SigninRequest));
}
exports.initiateOauth2SigninRequestToJSON = initiateOauth2SigninRequestToJSON;
function initiateOauth2SigninRequestFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.InitiateOauth2SigninRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'InitiateOauth2SigninRequest' from JSON`);
}
exports.initiateOauth2SigninRequestFromJSON = initiateOauth2SigninRequestFromJSON;
/** @internal */
exports.InitiateOauth2SigninResponse$inboundSchema = z.object({
    Headers: z.record(z.array(z.string())),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "Headers": "headers",
    });
});
/** @internal */
exports.InitiateOauth2SigninResponse$outboundSchema = z.object({
    headers: z.record(z.array(z.string())),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        headers: "Headers",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var InitiateOauth2SigninResponse$;
(function (InitiateOauth2SigninResponse$) {
    /** @deprecated use `InitiateOauth2SigninResponse$inboundSchema` instead. */
    InitiateOauth2SigninResponse$.inboundSchema = exports.InitiateOauth2SigninResponse$inboundSchema;
    /** @deprecated use `InitiateOauth2SigninResponse$outboundSchema` instead. */
    InitiateOauth2SigninResponse$.outboundSchema = exports.InitiateOauth2SigninResponse$outboundSchema;
})(InitiateOauth2SigninResponse$ || (exports.InitiateOauth2SigninResponse$ = InitiateOauth2SigninResponse$ = {}));
function initiateOauth2SigninResponseToJSON(initiateOauth2SigninResponse) {
    return JSON.stringify(exports.InitiateOauth2SigninResponse$outboundSchema.parse(initiateOauth2SigninResponse));
}
exports.initiateOauth2SigninResponseToJSON = initiateOauth2SigninResponseToJSON;
function initiateOauth2SigninResponseFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.InitiateOauth2SigninResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'InitiateOauth2SigninResponse' from JSON`);
}
exports.initiateOauth2SigninResponseFromJSON = initiateOauth2SigninResponseFromJSON;
//# sourceMappingURL=initiateoauth2signin.js.map