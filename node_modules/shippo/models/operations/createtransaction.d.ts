import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type CreateTransactionGlobals = {
    /**
     * Optional string used to pick a non-default API version to use. See our <a href="https://docs.goshippo.com/docs/api_concepts/apiversioning/">API version</a> guide.
     */
    shippoApiVersion?: string | undefined;
};
/**
 * Examples.
 */
export type CreateTransactionRequestBody = components.TransactionCreateRequest | components.InstantTransactionCreateRequest;
/** @internal */
export declare const CreateTransactionGlobals$inboundSchema: z.ZodType<CreateTransactionGlobals, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateTransactionGlobals$Outbound = {
    "SHIPPO-API-VERSION"?: string | undefined;
};
/** @internal */
export declare const CreateTransactionGlobals$outboundSchema: z.ZodType<CreateTransactionGlobals$Outbound, z.ZodTypeDef, CreateTransactionGlobals>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateTransactionGlobals$ {
    /** @deprecated use `CreateTransactionGlobals$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateTransactionGlobals, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateTransactionGlobals$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateTransactionGlobals$Outbound, z.ZodTypeDef, CreateTransactionGlobals>;
    /** @deprecated use `CreateTransactionGlobals$Outbound` instead. */
    type Outbound = CreateTransactionGlobals$Outbound;
}
export declare function createTransactionGlobalsToJSON(createTransactionGlobals: CreateTransactionGlobals): string;
export declare function createTransactionGlobalsFromJSON(jsonString: string): SafeParseResult<CreateTransactionGlobals, SDKValidationError>;
/** @internal */
export declare const CreateTransactionRequestBody$inboundSchema: z.ZodType<CreateTransactionRequestBody, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateTransactionRequestBody$Outbound = components.TransactionCreateRequest$Outbound | components.InstantTransactionCreateRequest$Outbound;
/** @internal */
export declare const CreateTransactionRequestBody$outboundSchema: z.ZodType<CreateTransactionRequestBody$Outbound, z.ZodTypeDef, CreateTransactionRequestBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateTransactionRequestBody$ {
    /** @deprecated use `CreateTransactionRequestBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateTransactionRequestBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateTransactionRequestBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateTransactionRequestBody$Outbound, z.ZodTypeDef, CreateTransactionRequestBody>;
    /** @deprecated use `CreateTransactionRequestBody$Outbound` instead. */
    type Outbound = CreateTransactionRequestBody$Outbound;
}
export declare function createTransactionRequestBodyToJSON(createTransactionRequestBody: CreateTransactionRequestBody): string;
export declare function createTransactionRequestBodyFromJSON(jsonString: string): SafeParseResult<CreateTransactionRequestBody, SDKValidationError>;
//# sourceMappingURL=createtransaction.d.ts.map