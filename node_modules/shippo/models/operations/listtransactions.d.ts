import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type ListTransactionsGlobals = {
    /**
     * Optional string used to pick a non-default API version to use. See our <a href="https://docs.goshippo.com/docs/api_concepts/apiversioning/">API version</a> guide.
     */
    shippoApiVersion?: string | undefined;
};
export type ListTransactionsRequest = {
    /**
     * Filter by rate ID
     */
    rate?: string | undefined;
    /**
     * Filter by object status
     */
    objectStatus?: components.TransactionStatusEnum | undefined;
    /**
     * Filter by tracking status
     */
    trackingStatus?: components.TrackingStatusEnum | undefined;
    /**
     * The page number you want to select
     */
    page?: number | undefined;
    /**
     * The number of results to return per page (max 100)
     */
    results?: number | undefined;
};
/** @internal */
export declare const ListTransactionsGlobals$inboundSchema: z.ZodType<ListTransactionsGlobals, z.ZodTypeDef, unknown>;
/** @internal */
export type ListTransactionsGlobals$Outbound = {
    "SHIPPO-API-VERSION"?: string | undefined;
};
/** @internal */
export declare const ListTransactionsGlobals$outboundSchema: z.ZodType<ListTransactionsGlobals$Outbound, z.ZodTypeDef, ListTransactionsGlobals>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ListTransactionsGlobals$ {
    /** @deprecated use `ListTransactionsGlobals$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ListTransactionsGlobals, z.ZodTypeDef, unknown>;
    /** @deprecated use `ListTransactionsGlobals$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ListTransactionsGlobals$Outbound, z.ZodTypeDef, ListTransactionsGlobals>;
    /** @deprecated use `ListTransactionsGlobals$Outbound` instead. */
    type Outbound = ListTransactionsGlobals$Outbound;
}
export declare function listTransactionsGlobalsToJSON(listTransactionsGlobals: ListTransactionsGlobals): string;
export declare function listTransactionsGlobalsFromJSON(jsonString: string): SafeParseResult<ListTransactionsGlobals, SDKValidationError>;
/** @internal */
export declare const ListTransactionsRequest$inboundSchema: z.ZodType<ListTransactionsRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type ListTransactionsRequest$Outbound = {
    rate?: string | undefined;
    object_status?: string | undefined;
    tracking_status?: string | undefined;
    page: number;
    results: number;
};
/** @internal */
export declare const ListTransactionsRequest$outboundSchema: z.ZodType<ListTransactionsRequest$Outbound, z.ZodTypeDef, ListTransactionsRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ListTransactionsRequest$ {
    /** @deprecated use `ListTransactionsRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ListTransactionsRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `ListTransactionsRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ListTransactionsRequest$Outbound, z.ZodTypeDef, ListTransactionsRequest>;
    /** @deprecated use `ListTransactionsRequest$Outbound` instead. */
    type Outbound = ListTransactionsRequest$Outbound;
}
export declare function listTransactionsRequestToJSON(listTransactionsRequest: ListTransactionsRequest): string;
export declare function listTransactionsRequestFromJSON(jsonString: string): SafeParseResult<ListTransactionsRequest, SDKValidationError>;
//# sourceMappingURL=listtransactions.d.ts.map