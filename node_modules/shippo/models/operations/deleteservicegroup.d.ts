import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type DeleteServiceGroupGlobals = {
    /**
     * Optional string used to pick a non-default API version to use. See our <a href="https://docs.goshippo.com/docs/api_concepts/apiversioning/">API version</a> guide.
     */
    shippoApiVersion?: string | undefined;
};
export type DeleteServiceGroupRequest = {
    /**
     * Object ID of the service group
     */
    serviceGroupId: string;
};
/** @internal */
export declare const DeleteServiceGroupGlobals$inboundSchema: z.ZodType<DeleteServiceGroupGlobals, z.ZodTypeDef, unknown>;
/** @internal */
export type DeleteServiceGroupGlobals$Outbound = {
    "SHIPPO-API-VERSION"?: string | undefined;
};
/** @internal */
export declare const DeleteServiceGroupGlobals$outboundSchema: z.ZodType<DeleteServiceGroupGlobals$Outbound, z.ZodTypeDef, DeleteServiceGroupGlobals>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace DeleteServiceGroupGlobals$ {
    /** @deprecated use `DeleteServiceGroupGlobals$inboundSchema` instead. */
    const inboundSchema: z.ZodType<DeleteServiceGroupGlobals, z.ZodTypeDef, unknown>;
    /** @deprecated use `DeleteServiceGroupGlobals$outboundSchema` instead. */
    const outboundSchema: z.ZodType<DeleteServiceGroupGlobals$Outbound, z.ZodTypeDef, DeleteServiceGroupGlobals>;
    /** @deprecated use `DeleteServiceGroupGlobals$Outbound` instead. */
    type Outbound = DeleteServiceGroupGlobals$Outbound;
}
export declare function deleteServiceGroupGlobalsToJSON(deleteServiceGroupGlobals: DeleteServiceGroupGlobals): string;
export declare function deleteServiceGroupGlobalsFromJSON(jsonString: string): SafeParseResult<DeleteServiceGroupGlobals, SDKValidationError>;
/** @internal */
export declare const DeleteServiceGroupRequest$inboundSchema: z.ZodType<DeleteServiceGroupRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type DeleteServiceGroupRequest$Outbound = {
    ServiceGroupId: string;
};
/** @internal */
export declare const DeleteServiceGroupRequest$outboundSchema: z.ZodType<DeleteServiceGroupRequest$Outbound, z.ZodTypeDef, DeleteServiceGroupRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace DeleteServiceGroupRequest$ {
    /** @deprecated use `DeleteServiceGroupRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<DeleteServiceGroupRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `DeleteServiceGroupRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<DeleteServiceGroupRequest$Outbound, z.ZodTypeDef, DeleteServiceGroupRequest>;
    /** @deprecated use `DeleteServiceGroupRequest$Outbound` instead. */
    type Outbound = DeleteServiceGroupRequest$Outbound;
}
export declare function deleteServiceGroupRequestToJSON(deleteServiceGroupRequest: DeleteServiceGroupRequest): string;
export declare function deleteServiceGroupRequestFromJSON(jsonString: string): SafeParseResult<DeleteServiceGroupRequest, SDKValidationError>;
//# sourceMappingURL=deleteservicegroup.d.ts.map