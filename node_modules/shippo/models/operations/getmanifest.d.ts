import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type GetManifestGlobals = {
    /**
     * Optional string used to pick a non-default API version to use. See our <a href="https://docs.goshippo.com/docs/api_concepts/apiversioning/">API version</a> guide.
     */
    shippoApiVersion?: string | undefined;
};
export type GetManifestRequest = {
    /**
     * Object ID of the manifest to update
     */
    manifestId: string;
};
/** @internal */
export declare const GetManifestGlobals$inboundSchema: z.ZodType<GetManifestGlobals, z.ZodTypeDef, unknown>;
/** @internal */
export type GetManifestGlobals$Outbound = {
    "SHIPPO-API-VERSION"?: string | undefined;
};
/** @internal */
export declare const GetManifestGlobals$outboundSchema: z.ZodType<GetManifestGlobals$Outbound, z.ZodTypeDef, GetManifestGlobals>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetManifestGlobals$ {
    /** @deprecated use `GetManifestGlobals$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetManifestGlobals, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetManifestGlobals$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetManifestGlobals$Outbound, z.ZodTypeDef, GetManifestGlobals>;
    /** @deprecated use `GetManifestGlobals$Outbound` instead. */
    type Outbound = GetManifestGlobals$Outbound;
}
export declare function getManifestGlobalsToJSON(getManifestGlobals: GetManifestGlobals): string;
export declare function getManifestGlobalsFromJSON(jsonString: string): SafeParseResult<GetManifestGlobals, SDKValidationError>;
/** @internal */
export declare const GetManifestRequest$inboundSchema: z.ZodType<GetManifestRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type GetManifestRequest$Outbound = {
    ManifestId: string;
};
/** @internal */
export declare const GetManifestRequest$outboundSchema: z.ZodType<GetManifestRequest$Outbound, z.ZodTypeDef, GetManifestRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetManifestRequest$ {
    /** @deprecated use `GetManifestRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetManifestRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetManifestRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetManifestRequest$Outbound, z.ZodTypeDef, GetManifestRequest>;
    /** @deprecated use `GetManifestRequest$Outbound` instead. */
    type Outbound = GetManifestRequest$Outbound;
}
export declare function getManifestRequestToJSON(getManifestRequest: GetManifestRequest): string;
export declare function getManifestRequestFromJSON(jsonString: string): SafeParseResult<GetManifestRequest, SDKValidationError>;
//# sourceMappingURL=getmanifest.d.ts.map