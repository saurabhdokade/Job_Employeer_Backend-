import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { Location, Location$Outbound } from "./location.js";
export type PickupBase = {
    /**
     * The object ID of your USPS or DHL Express carrier account.
     *
     * @remarks
     * You can retrieve this from your Rate requests or our <a href="#tag/Carrier-Accounts/">Carrier Accounts</a> endpoint.
     */
    carrierAccount: string;
    /**
     * Location where the parcel(s) will be picked up.
     */
    location: Location;
    /**
     * A string of up to 100 characters that can be filled with any additional information you
     *
     * @remarks
     * want to attach to the object.
     */
    metadata?: string | undefined;
    /**
     * The latest that you requested your parcels to be available for pickup.
     *
     * @remarks
     * Expressed in the timezone specified in the response.
     */
    requestedEndTime: Date;
    /**
     * The earliest that you requested your parcels to be ready for pickup.
     *
     * @remarks
     * Expressed in the timezone specified in the response.
     */
    requestedStartTime: Date;
    /**
     * The transaction(s) object ID(s) for the parcel(s) that need to be picked up.
     */
    transactions: Array<string>;
};
/** @internal */
export declare const PickupBase$inboundSchema: z.ZodType<PickupBase, z.ZodTypeDef, unknown>;
/** @internal */
export type PickupBase$Outbound = {
    carrier_account: string;
    location: Location$Outbound;
    metadata?: string | undefined;
    requested_end_time: string;
    requested_start_time: string;
    transactions: Array<string>;
};
/** @internal */
export declare const PickupBase$outboundSchema: z.ZodType<PickupBase$Outbound, z.ZodTypeDef, PickupBase>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PickupBase$ {
    /** @deprecated use `PickupBase$inboundSchema` instead. */
    const inboundSchema: z.ZodType<PickupBase, z.ZodTypeDef, unknown>;
    /** @deprecated use `PickupBase$outboundSchema` instead. */
    const outboundSchema: z.ZodType<PickupBase$Outbound, z.ZodTypeDef, PickupBase>;
    /** @deprecated use `PickupBase$Outbound` instead. */
    type Outbound = PickupBase$Outbound;
}
export declare function pickupBaseToJSON(pickupBase: PickupBase): string;
export declare function pickupBaseFromJSON(jsonString: string): SafeParseResult<PickupBase, SDKValidationError>;
//# sourceMappingURL=pickupbase.d.ts.map