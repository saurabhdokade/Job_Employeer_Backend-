import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { AddressCreateRequest, AddressCreateRequest$Outbound } from "./addresscreaterequest.js";
import { CustomsDeclarationCreateRequest, CustomsDeclarationCreateRequest$Outbound } from "./customsdeclarationcreaterequest.js";
import { ParcelCreateFromTemplateRequest, ParcelCreateFromTemplateRequest$Outbound } from "./parcelcreatefromtemplaterequest.js";
import { ParcelCreateRequest, ParcelCreateRequest$Outbound } from "./parcelcreaterequest.js";
import { ShipmentExtra, ShipmentExtra$Outbound } from "./shipmentextra.js";
export type AddressFrom = AddressCreateRequest | string;
export type AddressReturn = AddressCreateRequest | string;
export type AddressTo = AddressCreateRequest | string;
export type ShipmentCreateRequestCustomsDeclaration = CustomsDeclarationCreateRequest | string;
export type Parcels = ParcelCreateFromTemplateRequest | ParcelCreateRequest | string;
export type ShipmentCreateRequest = {
    /**
     * An object holding optional extra services to be requested.
     */
    extra?: ShipmentExtra | undefined;
    /**
     * A string of up to 100 characters that can be filled with any additional information you want to attach to the object.
     */
    metadata?: string | undefined;
    /**
     * Date the shipment will be tendered to the carrier. Must be in the format `2014-01-18T00:35:03.463Z`.
     *
     * @remarks
     * Defaults to current date and time if no value is provided. Please note that some carriers require this value to
     * be in the future, on a working day, or similar.
     */
    shipmentDate?: string | undefined;
    addressFrom: AddressCreateRequest | string;
    addressReturn?: AddressCreateRequest | string | undefined;
    addressTo: AddressCreateRequest | string;
    customsDeclaration?: CustomsDeclarationCreateRequest | string | undefined;
    async?: boolean | undefined;
    /**
     * List of <a href="#tag/Carrier-Accounts/">Carrier Accounts</a> `object_id`s used to filter
     *
     * @remarks
     * the returned rates.  If set, only rates from these carriers will be returned.
     */
    carrierAccounts?: Array<string> | undefined;
    parcels: Array<ParcelCreateFromTemplateRequest | ParcelCreateRequest | string>;
};
/** @internal */
export declare const AddressFrom$inboundSchema: z.ZodType<AddressFrom, z.ZodTypeDef, unknown>;
/** @internal */
export type AddressFrom$Outbound = AddressCreateRequest$Outbound | string;
/** @internal */
export declare const AddressFrom$outboundSchema: z.ZodType<AddressFrom$Outbound, z.ZodTypeDef, AddressFrom>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace AddressFrom$ {
    /** @deprecated use `AddressFrom$inboundSchema` instead. */
    const inboundSchema: z.ZodType<AddressFrom, z.ZodTypeDef, unknown>;
    /** @deprecated use `AddressFrom$outboundSchema` instead. */
    const outboundSchema: z.ZodType<AddressFrom$Outbound, z.ZodTypeDef, AddressFrom>;
    /** @deprecated use `AddressFrom$Outbound` instead. */
    type Outbound = AddressFrom$Outbound;
}
export declare function addressFromToJSON(addressFrom: AddressFrom): string;
export declare function addressFromFromJSON(jsonString: string): SafeParseResult<AddressFrom, SDKValidationError>;
/** @internal */
export declare const AddressReturn$inboundSchema: z.ZodType<AddressReturn, z.ZodTypeDef, unknown>;
/** @internal */
export type AddressReturn$Outbound = AddressCreateRequest$Outbound | string;
/** @internal */
export declare const AddressReturn$outboundSchema: z.ZodType<AddressReturn$Outbound, z.ZodTypeDef, AddressReturn>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace AddressReturn$ {
    /** @deprecated use `AddressReturn$inboundSchema` instead. */
    const inboundSchema: z.ZodType<AddressReturn, z.ZodTypeDef, unknown>;
    /** @deprecated use `AddressReturn$outboundSchema` instead. */
    const outboundSchema: z.ZodType<AddressReturn$Outbound, z.ZodTypeDef, AddressReturn>;
    /** @deprecated use `AddressReturn$Outbound` instead. */
    type Outbound = AddressReturn$Outbound;
}
export declare function addressReturnToJSON(addressReturn: AddressReturn): string;
export declare function addressReturnFromJSON(jsonString: string): SafeParseResult<AddressReturn, SDKValidationError>;
/** @internal */
export declare const AddressTo$inboundSchema: z.ZodType<AddressTo, z.ZodTypeDef, unknown>;
/** @internal */
export type AddressTo$Outbound = AddressCreateRequest$Outbound | string;
/** @internal */
export declare const AddressTo$outboundSchema: z.ZodType<AddressTo$Outbound, z.ZodTypeDef, AddressTo>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace AddressTo$ {
    /** @deprecated use `AddressTo$inboundSchema` instead. */
    const inboundSchema: z.ZodType<AddressTo, z.ZodTypeDef, unknown>;
    /** @deprecated use `AddressTo$outboundSchema` instead. */
    const outboundSchema: z.ZodType<AddressTo$Outbound, z.ZodTypeDef, AddressTo>;
    /** @deprecated use `AddressTo$Outbound` instead. */
    type Outbound = AddressTo$Outbound;
}
export declare function addressToToJSON(addressTo: AddressTo): string;
export declare function addressToFromJSON(jsonString: string): SafeParseResult<AddressTo, SDKValidationError>;
/** @internal */
export declare const ShipmentCreateRequestCustomsDeclaration$inboundSchema: z.ZodType<ShipmentCreateRequestCustomsDeclaration, z.ZodTypeDef, unknown>;
/** @internal */
export type ShipmentCreateRequestCustomsDeclaration$Outbound = CustomsDeclarationCreateRequest$Outbound | string;
/** @internal */
export declare const ShipmentCreateRequestCustomsDeclaration$outboundSchema: z.ZodType<ShipmentCreateRequestCustomsDeclaration$Outbound, z.ZodTypeDef, ShipmentCreateRequestCustomsDeclaration>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ShipmentCreateRequestCustomsDeclaration$ {
    /** @deprecated use `ShipmentCreateRequestCustomsDeclaration$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ShipmentCreateRequestCustomsDeclaration, z.ZodTypeDef, unknown>;
    /** @deprecated use `ShipmentCreateRequestCustomsDeclaration$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ShipmentCreateRequestCustomsDeclaration$Outbound, z.ZodTypeDef, ShipmentCreateRequestCustomsDeclaration>;
    /** @deprecated use `ShipmentCreateRequestCustomsDeclaration$Outbound` instead. */
    type Outbound = ShipmentCreateRequestCustomsDeclaration$Outbound;
}
export declare function shipmentCreateRequestCustomsDeclarationToJSON(shipmentCreateRequestCustomsDeclaration: ShipmentCreateRequestCustomsDeclaration): string;
export declare function shipmentCreateRequestCustomsDeclarationFromJSON(jsonString: string): SafeParseResult<ShipmentCreateRequestCustomsDeclaration, SDKValidationError>;
/** @internal */
export declare const Parcels$inboundSchema: z.ZodType<Parcels, z.ZodTypeDef, unknown>;
/** @internal */
export type Parcels$Outbound = ParcelCreateFromTemplateRequest$Outbound | ParcelCreateRequest$Outbound | string;
/** @internal */
export declare const Parcels$outboundSchema: z.ZodType<Parcels$Outbound, z.ZodTypeDef, Parcels>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Parcels$ {
    /** @deprecated use `Parcels$inboundSchema` instead. */
    const inboundSchema: z.ZodType<Parcels, z.ZodTypeDef, unknown>;
    /** @deprecated use `Parcels$outboundSchema` instead. */
    const outboundSchema: z.ZodType<Parcels$Outbound, z.ZodTypeDef, Parcels>;
    /** @deprecated use `Parcels$Outbound` instead. */
    type Outbound = Parcels$Outbound;
}
export declare function parcelsToJSON(parcels: Parcels): string;
export declare function parcelsFromJSON(jsonString: string): SafeParseResult<Parcels, SDKValidationError>;
/** @internal */
export declare const ShipmentCreateRequest$inboundSchema: z.ZodType<ShipmentCreateRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type ShipmentCreateRequest$Outbound = {
    extra?: ShipmentExtra$Outbound | undefined;
    metadata?: string | undefined;
    shipment_date?: string | undefined;
    address_from: AddressCreateRequest$Outbound | string;
    address_return?: AddressCreateRequest$Outbound | string | undefined;
    address_to: AddressCreateRequest$Outbound | string;
    customs_declaration?: CustomsDeclarationCreateRequest$Outbound | string | undefined;
    async?: boolean | undefined;
    carrier_accounts?: Array<string> | undefined;
    parcels: Array<ParcelCreateFromTemplateRequest$Outbound | ParcelCreateRequest$Outbound | string>;
};
/** @internal */
export declare const ShipmentCreateRequest$outboundSchema: z.ZodType<ShipmentCreateRequest$Outbound, z.ZodTypeDef, ShipmentCreateRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ShipmentCreateRequest$ {
    /** @deprecated use `ShipmentCreateRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ShipmentCreateRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `ShipmentCreateRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ShipmentCreateRequest$Outbound, z.ZodTypeDef, ShipmentCreateRequest>;
    /** @deprecated use `ShipmentCreateRequest$Outbound` instead. */
    type Outbound = ShipmentCreateRequest$Outbound;
}
export declare function shipmentCreateRequestToJSON(shipmentCreateRequest: ShipmentCreateRequest): string;
export declare function shipmentCreateRequestFromJSON(jsonString: string): SafeParseResult<ShipmentCreateRequest, SDKValidationError>;
//# sourceMappingURL=shipmentcreaterequest.d.ts.map