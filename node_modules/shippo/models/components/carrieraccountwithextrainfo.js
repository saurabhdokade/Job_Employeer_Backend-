"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.carrierAccountWithExtraInfoFromJSON = exports.carrierAccountWithExtraInfoToJSON = exports.CarrierAccountWithExtraInfo$ = exports.CarrierAccountWithExtraInfo$outboundSchema = exports.CarrierAccountWithExtraInfo$inboundSchema = exports.objectInfoFromJSON = exports.objectInfoToJSON = exports.ObjectInfo$ = exports.ObjectInfo$outboundSchema = exports.ObjectInfo$inboundSchema = exports.authenticationFromJSON = exports.authenticationToJSON = exports.Authentication$ = exports.Authentication$outboundSchema = exports.Authentication$inboundSchema = exports.CarrierAccountWithExtraInfoStatus$ = exports.CarrierAccountWithExtraInfoStatus$outboundSchema = exports.CarrierAccountWithExtraInfoStatus$inboundSchema = exports.CarrierAccountWithExtraInfoType$ = exports.CarrierAccountWithExtraInfoType$outboundSchema = exports.CarrierAccountWithExtraInfoType$inboundSchema = exports.parametersFromJSON = exports.parametersToJSON = exports.ParametersT$ = exports.ParametersT$outboundSchema = exports.ParametersT$inboundSchema = exports.CarrierAccountWithExtraInfoStatus = exports.CarrierAccountWithExtraInfoType = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const schemas_js_1 = require("../../lib/schemas.js");
const carrieraccountservicelevel_js_1 = require("./carrieraccountservicelevel.js");
const fedexconnectexistingownaccountparameters_js_1 = require("./fedexconnectexistingownaccountparameters.js");
const upsconnectexistingownaccountparameters_js_1 = require("./upsconnectexistingownaccountparameters.js");
/**
 * Authentication method used by this account.
 */
exports.CarrierAccountWithExtraInfoType = {
    Default: "default",
    Oauth: "oauth",
};
/**
 * Current authentication status. Possible values: 'disconnected' (authorization lost, reconnect needed), 'connected' (authorized and active), 'authorization_pending' (awaiting initial authorization flow).
 */
exports.CarrierAccountWithExtraInfoStatus = {
    Disconnected: "disconnected",
    Connected: "connected",
    AuthorizationPending: "authorization_pending",
};
/** @internal */
exports.ParametersT$inboundSchema = z.union([
    fedexconnectexistingownaccountparameters_js_1.FedExConnectExistingOwnAccountParameters$inboundSchema,
    upsconnectexistingownaccountparameters_js_1.UPSConnectExistingOwnAccountParameters$inboundSchema,
    z.record(z.any()),
]);
/** @internal */
exports.ParametersT$outboundSchema = z.union([
    fedexconnectexistingownaccountparameters_js_1.FedExConnectExistingOwnAccountParameters$outboundSchema,
    upsconnectexistingownaccountparameters_js_1.UPSConnectExistingOwnAccountParameters$outboundSchema,
    z.record(z.any()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var ParametersT$;
(function (ParametersT$) {
    /** @deprecated use `ParametersT$inboundSchema` instead. */
    ParametersT$.inboundSchema = exports.ParametersT$inboundSchema;
    /** @deprecated use `ParametersT$outboundSchema` instead. */
    ParametersT$.outboundSchema = exports.ParametersT$outboundSchema;
})(ParametersT$ || (exports.ParametersT$ = ParametersT$ = {}));
function parametersToJSON(parametersT) {
    return JSON.stringify(exports.ParametersT$outboundSchema.parse(parametersT));
}
exports.parametersToJSON = parametersToJSON;
function parametersFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.ParametersT$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ParametersT' from JSON`);
}
exports.parametersFromJSON = parametersFromJSON;
/** @internal */
exports.CarrierAccountWithExtraInfoType$inboundSchema = z.nativeEnum(exports.CarrierAccountWithExtraInfoType);
/** @internal */
exports.CarrierAccountWithExtraInfoType$outboundSchema = exports.CarrierAccountWithExtraInfoType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CarrierAccountWithExtraInfoType$;
(function (CarrierAccountWithExtraInfoType$) {
    /** @deprecated use `CarrierAccountWithExtraInfoType$inboundSchema` instead. */
    CarrierAccountWithExtraInfoType$.inboundSchema = exports.CarrierAccountWithExtraInfoType$inboundSchema;
    /** @deprecated use `CarrierAccountWithExtraInfoType$outboundSchema` instead. */
    CarrierAccountWithExtraInfoType$.outboundSchema = exports.CarrierAccountWithExtraInfoType$outboundSchema;
})(CarrierAccountWithExtraInfoType$ || (exports.CarrierAccountWithExtraInfoType$ = CarrierAccountWithExtraInfoType$ = {}));
/** @internal */
exports.CarrierAccountWithExtraInfoStatus$inboundSchema = z.nativeEnum(exports.CarrierAccountWithExtraInfoStatus);
/** @internal */
exports.CarrierAccountWithExtraInfoStatus$outboundSchema = exports.CarrierAccountWithExtraInfoStatus$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CarrierAccountWithExtraInfoStatus$;
(function (CarrierAccountWithExtraInfoStatus$) {
    /** @deprecated use `CarrierAccountWithExtraInfoStatus$inboundSchema` instead. */
    CarrierAccountWithExtraInfoStatus$.inboundSchema = exports.CarrierAccountWithExtraInfoStatus$inboundSchema;
    /** @deprecated use `CarrierAccountWithExtraInfoStatus$outboundSchema` instead. */
    CarrierAccountWithExtraInfoStatus$.outboundSchema = exports.CarrierAccountWithExtraInfoStatus$outboundSchema;
})(CarrierAccountWithExtraInfoStatus$ || (exports.CarrierAccountWithExtraInfoStatus$ = CarrierAccountWithExtraInfoStatus$ = {}));
/** @internal */
exports.Authentication$inboundSchema = z.object({
    type: exports.CarrierAccountWithExtraInfoType$inboundSchema.optional(),
    status: exports.CarrierAccountWithExtraInfoStatus$inboundSchema.optional(),
});
/** @internal */
exports.Authentication$outboundSchema = z.object({
    type: exports.CarrierAccountWithExtraInfoType$outboundSchema.optional(),
    status: exports.CarrierAccountWithExtraInfoStatus$outboundSchema.optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var Authentication$;
(function (Authentication$) {
    /** @deprecated use `Authentication$inboundSchema` instead. */
    Authentication$.inboundSchema = exports.Authentication$inboundSchema;
    /** @deprecated use `Authentication$outboundSchema` instead. */
    Authentication$.outboundSchema = exports.Authentication$outboundSchema;
})(Authentication$ || (exports.Authentication$ = Authentication$ = {}));
function authenticationToJSON(authentication) {
    return JSON.stringify(exports.Authentication$outboundSchema.parse(authentication));
}
exports.authenticationToJSON = authenticationToJSON;
function authenticationFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.Authentication$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'Authentication' from JSON`);
}
exports.authenticationFromJSON = authenticationFromJSON;
/** @internal */
exports.ObjectInfo$inboundSchema = z.object({
    authentication: z.lazy(() => exports.Authentication$inboundSchema).optional(),
});
/** @internal */
exports.ObjectInfo$outboundSchema = z.object({
    authentication: z.lazy(() => exports.Authentication$outboundSchema).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var ObjectInfo$;
(function (ObjectInfo$) {
    /** @deprecated use `ObjectInfo$inboundSchema` instead. */
    ObjectInfo$.inboundSchema = exports.ObjectInfo$inboundSchema;
    /** @deprecated use `ObjectInfo$outboundSchema` instead. */
    ObjectInfo$.outboundSchema = exports.ObjectInfo$outboundSchema;
})(ObjectInfo$ || (exports.ObjectInfo$ = ObjectInfo$ = {}));
function objectInfoToJSON(objectInfo) {
    return JSON.stringify(exports.ObjectInfo$outboundSchema.parse(objectInfo));
}
exports.objectInfoToJSON = objectInfoToJSON;
function objectInfoFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.ObjectInfo$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ObjectInfo' from JSON`);
}
exports.objectInfoFromJSON = objectInfoFromJSON;
/** @internal */
exports.CarrierAccountWithExtraInfo$inboundSchema = z.object({
    account_id: z.string(),
    active: z.boolean().optional(),
    carrier: z.string(),
    parameters: z.union([
        fedexconnectexistingownaccountparameters_js_1.FedExConnectExistingOwnAccountParameters$inboundSchema,
        upsconnectexistingownaccountparameters_js_1.UPSConnectExistingOwnAccountParameters$inboundSchema,
        z.record(z.any()),
    ]).optional(),
    carrier_name: z.any().optional(),
    is_shippo_account: z.boolean().optional(),
    metadata: z.string().optional(),
    object_id: z.string().optional(),
    object_owner: z.string().optional(),
    service_levels: z.array(carrieraccountservicelevel_js_1.CarrierAccountServiceLevel$inboundSchema).optional(),
    test: z.boolean().optional(),
    object_info: z.lazy(() => exports.ObjectInfo$inboundSchema).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "account_id": "accountId",
        "carrier_name": "carrierName",
        "is_shippo_account": "isShippoAccount",
        "object_id": "objectId",
        "object_owner": "objectOwner",
        "service_levels": "serviceLevels",
        "object_info": "objectInfo",
    });
});
/** @internal */
exports.CarrierAccountWithExtraInfo$outboundSchema = z.object({
    accountId: z.string(),
    active: z.boolean().optional(),
    carrier: z.string(),
    parameters: z.union([
        fedexconnectexistingownaccountparameters_js_1.FedExConnectExistingOwnAccountParameters$outboundSchema,
        upsconnectexistingownaccountparameters_js_1.UPSConnectExistingOwnAccountParameters$outboundSchema,
        z.record(z.any()),
    ]).optional(),
    carrierName: z.any().optional(),
    isShippoAccount: z.boolean().optional(),
    metadata: z.string().optional(),
    objectId: z.string().optional(),
    objectOwner: z.string().optional(),
    serviceLevels: z.array(carrieraccountservicelevel_js_1.CarrierAccountServiceLevel$outboundSchema).optional(),
    test: z.boolean().optional(),
    objectInfo: z.lazy(() => exports.ObjectInfo$outboundSchema).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        accountId: "account_id",
        carrierName: "carrier_name",
        isShippoAccount: "is_shippo_account",
        objectId: "object_id",
        objectOwner: "object_owner",
        serviceLevels: "service_levels",
        objectInfo: "object_info",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CarrierAccountWithExtraInfo$;
(function (CarrierAccountWithExtraInfo$) {
    /** @deprecated use `CarrierAccountWithExtraInfo$inboundSchema` instead. */
    CarrierAccountWithExtraInfo$.inboundSchema = exports.CarrierAccountWithExtraInfo$inboundSchema;
    /** @deprecated use `CarrierAccountWithExtraInfo$outboundSchema` instead. */
    CarrierAccountWithExtraInfo$.outboundSchema = exports.CarrierAccountWithExtraInfo$outboundSchema;
})(CarrierAccountWithExtraInfo$ || (exports.CarrierAccountWithExtraInfo$ = CarrierAccountWithExtraInfo$ = {}));
function carrierAccountWithExtraInfoToJSON(carrierAccountWithExtraInfo) {
    return JSON.stringify(exports.CarrierAccountWithExtraInfo$outboundSchema.parse(carrierAccountWithExtraInfo));
}
exports.carrierAccountWithExtraInfoToJSON = carrierAccountWithExtraInfoToJSON;
function carrierAccountWithExtraInfoFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CarrierAccountWithExtraInfo$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CarrierAccountWithExtraInfo' from JSON`);
}
exports.carrierAccountWithExtraInfoFromJSON = carrierAccountWithExtraInfoFromJSON;
//# sourceMappingURL=carrieraccountwithextrainfo.js.map