"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.transactionFromJSON = exports.transactionToJSON = exports.Transaction$ = exports.Transaction$outboundSchema = exports.Transaction$inboundSchema = exports.transactionRateFromJSON = exports.transactionRateToJSON = exports.TransactionRate$ = exports.TransactionRate$outboundSchema = exports.TransactionRate$inboundSchema = exports.createdByFromJSON = exports.createdByToJSON = exports.CreatedBy$ = exports.CreatedBy$outboundSchema = exports.CreatedBy$inboundSchema = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const schemas_js_1 = require("../../lib/schemas.js");
const corerate_js_1 = require("./corerate.js");
const labelfiletypeenum_js_1 = require("./labelfiletypeenum.js");
const objectstateenum_js_1 = require("./objectstateenum.js");
const responsemessage_js_1 = require("./responsemessage.js");
const trackingstatusenum_js_1 = require("./trackingstatusenum.js");
const transactionstatusenum_js_1 = require("./transactionstatusenum.js");
/** @internal */
exports.CreatedBy$inboundSchema = z.object({
    first_name: z.string().optional(),
    last_name: z.string().optional(),
    username: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "first_name": "firstName",
        "last_name": "lastName",
    });
});
/** @internal */
exports.CreatedBy$outboundSchema = z.object({
    firstName: z.string().optional(),
    lastName: z.string().optional(),
    username: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        firstName: "first_name",
        lastName: "last_name",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CreatedBy$;
(function (CreatedBy$) {
    /** @deprecated use `CreatedBy$inboundSchema` instead. */
    CreatedBy$.inboundSchema = exports.CreatedBy$inboundSchema;
    /** @deprecated use `CreatedBy$outboundSchema` instead. */
    CreatedBy$.outboundSchema = exports.CreatedBy$outboundSchema;
})(CreatedBy$ || (exports.CreatedBy$ = CreatedBy$ = {}));
function createdByToJSON(createdBy) {
    return JSON.stringify(exports.CreatedBy$outboundSchema.parse(createdBy));
}
exports.createdByToJSON = createdByToJSON;
function createdByFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CreatedBy$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreatedBy' from JSON`);
}
exports.createdByFromJSON = createdByFromJSON;
/** @internal */
exports.TransactionRate$inboundSchema = z.union([corerate_js_1.CoreRate$inboundSchema, z.string()]);
/** @internal */
exports.TransactionRate$outboundSchema = z.union([corerate_js_1.CoreRate$outboundSchema, z.string()]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var TransactionRate$;
(function (TransactionRate$) {
    /** @deprecated use `TransactionRate$inboundSchema` instead. */
    TransactionRate$.inboundSchema = exports.TransactionRate$inboundSchema;
    /** @deprecated use `TransactionRate$outboundSchema` instead. */
    TransactionRate$.outboundSchema = exports.TransactionRate$outboundSchema;
})(TransactionRate$ || (exports.TransactionRate$ = TransactionRate$ = {}));
function transactionRateToJSON(transactionRate) {
    return JSON.stringify(exports.TransactionRate$outboundSchema.parse(transactionRate));
}
exports.transactionRateToJSON = transactionRateToJSON;
function transactionRateFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.TransactionRate$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'TransactionRate' from JSON`);
}
exports.transactionRateFromJSON = transactionRateFromJSON;
/** @internal */
exports.Transaction$inboundSchema = z.object({
    commercial_invoice_url: z.string().optional(),
    created_by: z.nullable(z.lazy(() => exports.CreatedBy$inboundSchema)).optional(),
    eta: z.string().optional(),
    label_file_type: labelfiletypeenum_js_1.LabelFileTypeEnum$inboundSchema.optional(),
    label_url: z.string().optional(),
    messages: z.array(responsemessage_js_1.ResponseMessage$inboundSchema).optional(),
    metadata: z.string().optional(),
    object_created: z.string().datetime({ offset: true }).transform(v => new Date(v)).optional(),
    object_id: z.string().optional(),
    object_owner: z.string().optional(),
    object_state: objectstateenum_js_1.ObjectStateEnum$inboundSchema.optional(),
    object_updated: z.string().datetime({ offset: true }).transform(v => new Date(v)).optional(),
    parcel: z.string().optional(),
    qr_code_url: z.string().optional(),
    rate: z.union([corerate_js_1.CoreRate$inboundSchema, z.string()]).optional(),
    status: transactionstatusenum_js_1.TransactionStatusEnum$inboundSchema.optional(),
    test: z.boolean().optional(),
    tracking_number: z.string().optional(),
    tracking_status: trackingstatusenum_js_1.TrackingStatusEnum$inboundSchema.optional(),
    tracking_url_provider: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "commercial_invoice_url": "commercialInvoiceUrl",
        "created_by": "createdBy",
        "label_file_type": "labelFileType",
        "label_url": "labelUrl",
        "object_created": "objectCreated",
        "object_id": "objectId",
        "object_owner": "objectOwner",
        "object_state": "objectState",
        "object_updated": "objectUpdated",
        "qr_code_url": "qrCodeUrl",
        "tracking_number": "trackingNumber",
        "tracking_status": "trackingStatus",
        "tracking_url_provider": "trackingUrlProvider",
    });
});
/** @internal */
exports.Transaction$outboundSchema = z.object({
    commercialInvoiceUrl: z.string().optional(),
    createdBy: z.nullable(z.lazy(() => exports.CreatedBy$outboundSchema)).optional(),
    eta: z.string().optional(),
    labelFileType: labelfiletypeenum_js_1.LabelFileTypeEnum$outboundSchema.optional(),
    labelUrl: z.string().optional(),
    messages: z.array(responsemessage_js_1.ResponseMessage$outboundSchema).optional(),
    metadata: z.string().optional(),
    objectCreated: z.date().transform(v => v.toISOString()).optional(),
    objectId: z.string().optional(),
    objectOwner: z.string().optional(),
    objectState: objectstateenum_js_1.ObjectStateEnum$outboundSchema.optional(),
    objectUpdated: z.date().transform(v => v.toISOString()).optional(),
    parcel: z.string().optional(),
    qrCodeUrl: z.string().optional(),
    rate: z.union([corerate_js_1.CoreRate$outboundSchema, z.string()]).optional(),
    status: transactionstatusenum_js_1.TransactionStatusEnum$outboundSchema.optional(),
    test: z.boolean().optional(),
    trackingNumber: z.string().optional(),
    trackingStatus: trackingstatusenum_js_1.TrackingStatusEnum$outboundSchema.optional(),
    trackingUrlProvider: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        commercialInvoiceUrl: "commercial_invoice_url",
        createdBy: "created_by",
        labelFileType: "label_file_type",
        labelUrl: "label_url",
        objectCreated: "object_created",
        objectId: "object_id",
        objectOwner: "object_owner",
        objectState: "object_state",
        objectUpdated: "object_updated",
        qrCodeUrl: "qr_code_url",
        trackingNumber: "tracking_number",
        trackingStatus: "tracking_status",
        trackingUrlProvider: "tracking_url_provider",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var Transaction$;
(function (Transaction$) {
    /** @deprecated use `Transaction$inboundSchema` instead. */
    Transaction$.inboundSchema = exports.Transaction$inboundSchema;
    /** @deprecated use `Transaction$outboundSchema` instead. */
    Transaction$.outboundSchema = exports.Transaction$outboundSchema;
})(Transaction$ || (exports.Transaction$ = Transaction$ = {}));
function transactionToJSON(transaction) {
    return JSON.stringify(exports.Transaction$outboundSchema.parse(transaction));
}
exports.transactionToJSON = transactionToJSON;
function transactionFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.Transaction$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'Transaction' from JSON`);
}
exports.transactionFromJSON = transactionFromJSON;
//# sourceMappingURL=transaction.js.map