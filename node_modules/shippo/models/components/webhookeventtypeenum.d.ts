import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
/**
 * Type of event that triggered the webhook.
 */
export declare const WebhookEventTypeEnum: {
    readonly TransactionCreated: "transaction_created";
    readonly TransactionUpdated: "transaction_updated";
    readonly TrackUpdated: "track_updated";
    readonly BatchCreated: "batch_created";
    readonly BatchPurchased: "batch_purchased";
    readonly All: "all";
};
/**
 * Type of event that triggered the webhook.
 */
export type WebhookEventTypeEnum = ClosedEnum<typeof WebhookEventTypeEnum>;
/** @internal */
export declare const WebhookEventTypeEnum$inboundSchema: z.ZodNativeEnum<typeof WebhookEventTypeEnum>;
/** @internal */
export declare const WebhookEventTypeEnum$outboundSchema: z.ZodNativeEnum<typeof WebhookEventTypeEnum>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace WebhookEventTypeEnum$ {
    /** @deprecated use `WebhookEventTypeEnum$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly TransactionCreated: "transaction_created";
        readonly TransactionUpdated: "transaction_updated";
        readonly TrackUpdated: "track_updated";
        readonly BatchCreated: "batch_created";
        readonly BatchPurchased: "batch_purchased";
        readonly All: "all";
    }>;
    /** @deprecated use `WebhookEventTypeEnum$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly TransactionCreated: "transaction_created";
        readonly TransactionUpdated: "transaction_updated";
        readonly TrackUpdated: "track_updated";
        readonly BatchCreated: "batch_created";
        readonly BatchPurchased: "batch_purchased";
        readonly All: "all";
    }>;
}
//# sourceMappingURL=webhookeventtypeenum.d.ts.map