import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { UserParcelTemplate, UserParcelTemplate$Outbound } from "./userparceltemplate.js";
export type DefaultParcelTemplate = {
    result?: UserParcelTemplate | undefined;
};
/** @internal */
export declare const DefaultParcelTemplate$inboundSchema: z.ZodType<DefaultParcelTemplate, z.ZodTypeDef, unknown>;
/** @internal */
export type DefaultParcelTemplate$Outbound = {
    result?: UserParcelTemplate$Outbound | undefined;
};
/** @internal */
export declare const DefaultParcelTemplate$outboundSchema: z.ZodType<DefaultParcelTemplate$Outbound, z.ZodTypeDef, DefaultParcelTemplate>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace DefaultParcelTemplate$ {
    /** @deprecated use `DefaultParcelTemplate$inboundSchema` instead. */
    const inboundSchema: z.ZodType<DefaultParcelTemplate, z.ZodTypeDef, unknown>;
    /** @deprecated use `DefaultParcelTemplate$outboundSchema` instead. */
    const outboundSchema: z.ZodType<DefaultParcelTemplate$Outbound, z.ZodTypeDef, DefaultParcelTemplate>;
    /** @deprecated use `DefaultParcelTemplate$Outbound` instead. */
    type Outbound = DefaultParcelTemplate$Outbound;
}
export declare function defaultParcelTemplateToJSON(defaultParcelTemplate: DefaultParcelTemplate): string;
export declare function defaultParcelTemplateFromJSON(jsonString: string): SafeParseResult<DefaultParcelTemplate, SDKValidationError>;
//# sourceMappingURL=defaultparceltemplate.d.ts.map