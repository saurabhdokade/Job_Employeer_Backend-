"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.alcoholFromJSON = exports.alcoholToJSON = exports.Alcohol$ = exports.Alcohol$outboundSchema = exports.Alcohol$inboundSchema = exports.RecipientType$ = exports.RecipientType$outboundSchema = exports.RecipientType$inboundSchema = exports.RecipientType = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const schemas_js_1 = require("../../lib/schemas.js");
/**
 * Mandatory for Fedex only. License type of the recipient of the Alcohol Package.
 */
exports.RecipientType = {
    Licensee: "licensee",
    Consumer: "consumer",
};
/** @internal */
exports.RecipientType$inboundSchema = z.nativeEnum(exports.RecipientType);
/** @internal */
exports.RecipientType$outboundSchema = exports.RecipientType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RecipientType$;
(function (RecipientType$) {
    /** @deprecated use `RecipientType$inboundSchema` instead. */
    RecipientType$.inboundSchema = exports.RecipientType$inboundSchema;
    /** @deprecated use `RecipientType$outboundSchema` instead. */
    RecipientType$.outboundSchema = exports.RecipientType$outboundSchema;
})(RecipientType$ || (exports.RecipientType$ = RecipientType$ = {}));
/** @internal */
exports.Alcohol$inboundSchema = z.object({
    contains_alcohol: z.boolean().optional(),
    recipient_type: exports.RecipientType$inboundSchema.optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "contains_alcohol": "containsAlcohol",
        "recipient_type": "recipientType",
    });
});
/** @internal */
exports.Alcohol$outboundSchema = z.object({
    containsAlcohol: z.boolean().optional(),
    recipientType: exports.RecipientType$outboundSchema.optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        containsAlcohol: "contains_alcohol",
        recipientType: "recipient_type",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var Alcohol$;
(function (Alcohol$) {
    /** @deprecated use `Alcohol$inboundSchema` instead. */
    Alcohol$.inboundSchema = exports.Alcohol$inboundSchema;
    /** @deprecated use `Alcohol$outboundSchema` instead. */
    Alcohol$.outboundSchema = exports.Alcohol$outboundSchema;
})(Alcohol$ || (exports.Alcohol$ = Alcohol$ = {}));
function alcoholToJSON(alcohol) {
    return JSON.stringify(exports.Alcohol$outboundSchema.parse(alcohol));
}
exports.alcoholToJSON = alcoholToJSON;
function alcoholFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.Alcohol$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'Alcohol' from JSON`);
}
exports.alcoholFromJSON = alcoholFromJSON;
//# sourceMappingURL=alcohol.js.map