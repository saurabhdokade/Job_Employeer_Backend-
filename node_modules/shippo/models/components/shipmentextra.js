"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.shipmentExtraFromJSON = exports.shipmentExtraToJSON = exports.ShipmentExtra$ = exports.ShipmentExtra$outboundSchema = exports.ShipmentExtra$inboundSchema = exports.SignatureConfirmation$ = exports.SignatureConfirmation$outboundSchema = exports.SignatureConfirmation$inboundSchema = exports.returnServiceTypeFromJSON = exports.returnServiceTypeToJSON = exports.ReturnServiceType$ = exports.ReturnServiceType$outboundSchema = exports.ReturnServiceType$inboundSchema = exports.PreferredDeliveryTimeframe$ = exports.PreferredDeliveryTimeframe$outboundSchema = exports.PreferredDeliveryTimeframe$inboundSchema = exports.DangerousGoodsCode$ = exports.DangerousGoodsCode$outboundSchema = exports.DangerousGoodsCode$inboundSchema = exports.AncillaryEndorsement$ = exports.AncillaryEndorsement$outboundSchema = exports.AncillaryEndorsement$inboundSchema = exports.SignatureConfirmation = exports.PreferredDeliveryTimeframe = exports.DangerousGoodsCode = exports.AncillaryEndorsement = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const schemas_js_1 = require("../../lib/schemas.js");
const alcohol_js_1 = require("./alcohol.js");
const billing_js_1 = require("./billing.js");
const cod_js_1 = require("./cod.js");
const customerreference_js_1 = require("./customerreference.js");
const dangerousgoodsobject_js_1 = require("./dangerousgoodsobject.js");
const departmentnumber_js_1 = require("./departmentnumber.js");
const dryice_js_1 = require("./dryice.js");
const insurance_js_1 = require("./insurance.js");
const invoicenumber_js_1 = require("./invoicenumber.js");
const ponumber_js_1 = require("./ponumber.js");
const rmanumber_js_1 = require("./rmanumber.js");
const shipmentextralasershipattributesenum_js_1 = require("./shipmentextralasershipattributesenum.js");
const shipmentextrareturnservicetypelasershipenum_js_1 = require("./shipmentextrareturnservicetypelasershipenum.js");
const shipmentextrareturnservicetypeupsenum_js_1 = require("./shipmentextrareturnservicetypeupsenum.js");
const upsreferencefields_js_1 = require("./upsreferencefields.js");
/**
 * Specify an ancillary service endorsement to provide the USPS with instructions on how to handle undeliverable-as-addressed pieces (DHL eCommerce only).
 */
exports.AncillaryEndorsement = {
    ForwardingServiceRequested: "FORWARDING_SERVICE_REQUESTED",
    ReturnServiceRequested: "RETURN_SERVICE_REQUESTED",
};
/**
 * Dangerous Goods Code (DHL eCommerce only). See <a href="https://api-legacy.dhlecs.com/docs/v2/appendix.html#dangerous-goods">Category Codes</a>
 */
exports.DangerousGoodsCode = {
    One: "01",
    Two: "02",
    Three: "03",
    Four: "04",
    Five: "05",
    Six: "06",
    Seven: "07",
    Eight: "08",
    Nine: "09",
};
/**
 * Required for DHL Germany Paket Sameday. Designates a desired timeframe for delivery. Format is `HHMMHHMM`
 */
exports.PreferredDeliveryTimeframe = {
    TenMillionOneThousandTwoHundred: "10001200",
    TwelveMillionOneThousandFourHundred: "12001400",
    FourteenMillionOneThousandSixHundred: "14001600",
    SixteenMillionOneThousandEightHundred: "16001800",
    EighteenMillionTwoThousand: "18002000",
    NineteenMillionTwoThousandOneHundred: "19002100",
};
/**
 * Request standard or adult signature confirmation. You can alternatively request Certified Mail (USPS only)
 *
 * @remarks
 * or Indirect signature (FedEx only) or Carrier Confirmation (Deutsche Post only).
 */
exports.SignatureConfirmation = {
    Standard: "STANDARD",
    Adult: "ADULT",
    Certified: "CERTIFIED",
    Indirect: "INDIRECT",
    CarrierConfirmation: "CARRIER_CONFIRMATION",
};
/** @internal */
exports.AncillaryEndorsement$inboundSchema = z.nativeEnum(exports.AncillaryEndorsement);
/** @internal */
exports.AncillaryEndorsement$outboundSchema = exports.AncillaryEndorsement$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var AncillaryEndorsement$;
(function (AncillaryEndorsement$) {
    /** @deprecated use `AncillaryEndorsement$inboundSchema` instead. */
    AncillaryEndorsement$.inboundSchema = exports.AncillaryEndorsement$inboundSchema;
    /** @deprecated use `AncillaryEndorsement$outboundSchema` instead. */
    AncillaryEndorsement$.outboundSchema = exports.AncillaryEndorsement$outboundSchema;
})(AncillaryEndorsement$ || (exports.AncillaryEndorsement$ = AncillaryEndorsement$ = {}));
/** @internal */
exports.DangerousGoodsCode$inboundSchema = z.nativeEnum(exports.DangerousGoodsCode);
/** @internal */
exports.DangerousGoodsCode$outboundSchema = exports.DangerousGoodsCode$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var DangerousGoodsCode$;
(function (DangerousGoodsCode$) {
    /** @deprecated use `DangerousGoodsCode$inboundSchema` instead. */
    DangerousGoodsCode$.inboundSchema = exports.DangerousGoodsCode$inboundSchema;
    /** @deprecated use `DangerousGoodsCode$outboundSchema` instead. */
    DangerousGoodsCode$.outboundSchema = exports.DangerousGoodsCode$outboundSchema;
})(DangerousGoodsCode$ || (exports.DangerousGoodsCode$ = DangerousGoodsCode$ = {}));
/** @internal */
exports.PreferredDeliveryTimeframe$inboundSchema = z.nativeEnum(exports.PreferredDeliveryTimeframe);
/** @internal */
exports.PreferredDeliveryTimeframe$outboundSchema = exports.PreferredDeliveryTimeframe$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var PreferredDeliveryTimeframe$;
(function (PreferredDeliveryTimeframe$) {
    /** @deprecated use `PreferredDeliveryTimeframe$inboundSchema` instead. */
    PreferredDeliveryTimeframe$.inboundSchema = exports.PreferredDeliveryTimeframe$inboundSchema;
    /** @deprecated use `PreferredDeliveryTimeframe$outboundSchema` instead. */
    PreferredDeliveryTimeframe$.outboundSchema = exports.PreferredDeliveryTimeframe$outboundSchema;
})(PreferredDeliveryTimeframe$ || (exports.PreferredDeliveryTimeframe$ = PreferredDeliveryTimeframe$ = {}));
/** @internal */
exports.ReturnServiceType$inboundSchema = z.union([
    shipmentextrareturnservicetypeupsenum_js_1.ShipmentExtraReturnServiceTypeUPSEnum$inboundSchema,
    shipmentextrareturnservicetypelasershipenum_js_1.ShipmentExtraReturnServiceTypeLasershipEnum$inboundSchema,
]);
/** @internal */
exports.ReturnServiceType$outboundSchema = z.union([
    shipmentextrareturnservicetypeupsenum_js_1.ShipmentExtraReturnServiceTypeUPSEnum$outboundSchema,
    shipmentextrareturnservicetypelasershipenum_js_1.ShipmentExtraReturnServiceTypeLasershipEnum$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var ReturnServiceType$;
(function (ReturnServiceType$) {
    /** @deprecated use `ReturnServiceType$inboundSchema` instead. */
    ReturnServiceType$.inboundSchema = exports.ReturnServiceType$inboundSchema;
    /** @deprecated use `ReturnServiceType$outboundSchema` instead. */
    ReturnServiceType$.outboundSchema = exports.ReturnServiceType$outboundSchema;
})(ReturnServiceType$ || (exports.ReturnServiceType$ = ReturnServiceType$ = {}));
function returnServiceTypeToJSON(returnServiceType) {
    return JSON.stringify(exports.ReturnServiceType$outboundSchema.parse(returnServiceType));
}
exports.returnServiceTypeToJSON = returnServiceTypeToJSON;
function returnServiceTypeFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.ReturnServiceType$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ReturnServiceType' from JSON`);
}
exports.returnServiceTypeFromJSON = returnServiceTypeFromJSON;
/** @internal */
exports.SignatureConfirmation$inboundSchema = z.nativeEnum(exports.SignatureConfirmation);
/** @internal */
exports.SignatureConfirmation$outboundSchema = exports.SignatureConfirmation$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var SignatureConfirmation$;
(function (SignatureConfirmation$) {
    /** @deprecated use `SignatureConfirmation$inboundSchema` instead. */
    SignatureConfirmation$.inboundSchema = exports.SignatureConfirmation$inboundSchema;
    /** @deprecated use `SignatureConfirmation$outboundSchema` instead. */
    SignatureConfirmation$.outboundSchema = exports.SignatureConfirmation$outboundSchema;
})(SignatureConfirmation$ || (exports.SignatureConfirmation$ = SignatureConfirmation$ = {}));
/** @internal */
exports.ShipmentExtra$inboundSchema = z.object({
    accounts_receivable_customer_account: upsreferencefields_js_1.UPSReferenceFields$inboundSchema
        .optional(),
    alcohol: alcohol_js_1.Alcohol$inboundSchema.optional(),
    ancillary_endorsement: exports.AncillaryEndorsement$inboundSchema.optional(),
    appropriation_number: upsreferencefields_js_1.UPSReferenceFields$inboundSchema.optional(),
    authority_to_leave: z.boolean().optional(),
    bill_of_lading_number: upsreferencefields_js_1.UPSReferenceFields$inboundSchema.optional(),
    billing: billing_js_1.Billing$inboundSchema.optional(),
    bypass_address_validation: z.boolean().optional(),
    carbon_neutral: z.boolean().optional(),
    carrier_hub_id: z.string().optional(),
    carrier_hub_travel_time: z.number().int().optional(),
    COD: cod_js_1.Cod$inboundSchema.optional(),
    cod_number: upsreferencefields_js_1.UPSReferenceFields$inboundSchema.optional(),
    container_type: z.string().optional(),
    critical_pull_time: z.string().optional(),
    customer_branch: z.string().optional(),
    customer_reference: customerreference_js_1.CustomerReference$inboundSchema.optional(),
    dangerous_goods: dangerousgoodsobject_js_1.DangerousGoodsObject$inboundSchema.optional(),
    dangerous_goods_code: exports.DangerousGoodsCode$inboundSchema.optional(),
    dealer_order_number: upsreferencefields_js_1.UPSReferenceFields$inboundSchema.optional(),
    delivery_instructions: z.string().optional(),
    dept_number: departmentnumber_js_1.DepartmentNumber$inboundSchema.optional(),
    dry_ice: dryice_js_1.DryIce$inboundSchema.optional(),
    fda_product_code: upsreferencefields_js_1.UPSReferenceFields$inboundSchema.optional(),
    fulfillment_center: z.string().optional(),
    insurance: insurance_js_1.Insurance$inboundSchema.optional(),
    invoice_number: invoicenumber_js_1.InvoiceNumber$inboundSchema.optional(),
    is_return: z.boolean().optional(),
    lasership_attrs: z.array(shipmentextralasershipattributesenum_js_1.ShipmentExtraLasershipAttributesEnum$inboundSchema)
        .optional(),
    lasership_declared_value: z.string().optional(),
    manifest_number: upsreferencefields_js_1.UPSReferenceFields$inboundSchema.optional(),
    model_number: upsreferencefields_js_1.UPSReferenceFields$inboundSchema.optional(),
    part_number: upsreferencefields_js_1.UPSReferenceFields$inboundSchema.optional(),
    po_number: ponumber_js_1.PoNumber$inboundSchema.optional(),
    preferred_delivery_timeframe: exports.PreferredDeliveryTimeframe$inboundSchema
        .optional(),
    premium: z.boolean().optional(),
    production_code: upsreferencefields_js_1.UPSReferenceFields$inboundSchema.optional(),
    purchase_request_number: upsreferencefields_js_1.UPSReferenceFields$inboundSchema.optional(),
    qr_code_requested: z.boolean().optional(),
    reference_1: z.string().optional(),
    reference_2: z.string().optional(),
    request_retail_rates: z.boolean().optional(),
    return_service_type: z.union([
        shipmentextrareturnservicetypeupsenum_js_1.ShipmentExtraReturnServiceTypeUPSEnum$inboundSchema,
        shipmentextrareturnservicetypelasershipenum_js_1.ShipmentExtraReturnServiceTypeLasershipEnum$inboundSchema,
    ]).optional(),
    rma_number: rmanumber_js_1.RmaNumber$inboundSchema.optional(),
    saturday_delivery: z.boolean().optional(),
    salesperson_number: upsreferencefields_js_1.UPSReferenceFields$inboundSchema.optional(),
    serial_number: upsreferencefields_js_1.UPSReferenceFields$inboundSchema.optional(),
    signature_confirmation: exports.SignatureConfirmation$inboundSchema.optional(),
    store_number: upsreferencefields_js_1.UPSReferenceFields$inboundSchema.optional(),
    transaction_reference_number: upsreferencefields_js_1.UPSReferenceFields$inboundSchema.optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "accounts_receivable_customer_account": "accountsReceivableCustomerAccount",
        "ancillary_endorsement": "ancillaryEndorsement",
        "appropriation_number": "appropriationNumber",
        "authority_to_leave": "authorityToLeave",
        "bill_of_lading_number": "billOfLadingNumber",
        "bypass_address_validation": "bypassAddressValidation",
        "carbon_neutral": "carbonNeutral",
        "carrier_hub_id": "carrierHubId",
        "carrier_hub_travel_time": "carrierHubTravelTime",
        "COD": "cod",
        "cod_number": "codNumber",
        "container_type": "containerType",
        "critical_pull_time": "criticalPullTime",
        "customer_branch": "customerBranch",
        "customer_reference": "customerReference",
        "dangerous_goods": "dangerousGoods",
        "dangerous_goods_code": "dangerousGoodsCode",
        "dealer_order_number": "dealerOrderNumber",
        "delivery_instructions": "deliveryInstructions",
        "dept_number": "deptNumber",
        "dry_ice": "dryIce",
        "fda_product_code": "fdaProductCode",
        "fulfillment_center": "fulfillmentCenter",
        "invoice_number": "invoiceNumber",
        "is_return": "isReturn",
        "lasership_attrs": "lasershipAttrs",
        "lasership_declared_value": "lasershipDeclaredValue",
        "manifest_number": "manifestNumber",
        "model_number": "modelNumber",
        "part_number": "partNumber",
        "po_number": "poNumber",
        "preferred_delivery_timeframe": "preferredDeliveryTimeframe",
        "production_code": "productionCode",
        "purchase_request_number": "purchaseRequestNumber",
        "qr_code_requested": "qrCodeRequested",
        "reference_1": "reference1",
        "reference_2": "reference2",
        "request_retail_rates": "requestRetailRates",
        "return_service_type": "returnServiceType",
        "rma_number": "rmaNumber",
        "saturday_delivery": "saturdayDelivery",
        "salesperson_number": "salespersonNumber",
        "serial_number": "serialNumber",
        "signature_confirmation": "signatureConfirmation",
        "store_number": "storeNumber",
        "transaction_reference_number": "transactionReferenceNumber",
    });
});
/** @internal */
exports.ShipmentExtra$outboundSchema = z.object({
    accountsReceivableCustomerAccount: upsreferencefields_js_1.UPSReferenceFields$outboundSchema
        .optional(),
    alcohol: alcohol_js_1.Alcohol$outboundSchema.optional(),
    ancillaryEndorsement: exports.AncillaryEndorsement$outboundSchema.optional(),
    appropriationNumber: upsreferencefields_js_1.UPSReferenceFields$outboundSchema.optional(),
    authorityToLeave: z.boolean().optional(),
    billOfLadingNumber: upsreferencefields_js_1.UPSReferenceFields$outboundSchema.optional(),
    billing: billing_js_1.Billing$outboundSchema.optional(),
    bypassAddressValidation: z.boolean().optional(),
    carbonNeutral: z.boolean().optional(),
    carrierHubId: z.string().optional(),
    carrierHubTravelTime: z.number().int().optional(),
    cod: cod_js_1.Cod$outboundSchema.optional(),
    codNumber: upsreferencefields_js_1.UPSReferenceFields$outboundSchema.optional(),
    containerType: z.string().optional(),
    criticalPullTime: z.string().optional(),
    customerBranch: z.string().optional(),
    customerReference: customerreference_js_1.CustomerReference$outboundSchema.optional(),
    dangerousGoods: dangerousgoodsobject_js_1.DangerousGoodsObject$outboundSchema.optional(),
    dangerousGoodsCode: exports.DangerousGoodsCode$outboundSchema.optional(),
    dealerOrderNumber: upsreferencefields_js_1.UPSReferenceFields$outboundSchema.optional(),
    deliveryInstructions: z.string().optional(),
    deptNumber: departmentnumber_js_1.DepartmentNumber$outboundSchema.optional(),
    dryIce: dryice_js_1.DryIce$outboundSchema.optional(),
    fdaProductCode: upsreferencefields_js_1.UPSReferenceFields$outboundSchema.optional(),
    fulfillmentCenter: z.string().optional(),
    insurance: insurance_js_1.Insurance$outboundSchema.optional(),
    invoiceNumber: invoicenumber_js_1.InvoiceNumber$outboundSchema.optional(),
    isReturn: z.boolean().optional(),
    lasershipAttrs: z.array(shipmentextralasershipattributesenum_js_1.ShipmentExtraLasershipAttributesEnum$outboundSchema)
        .optional(),
    lasershipDeclaredValue: z.string().optional(),
    manifestNumber: upsreferencefields_js_1.UPSReferenceFields$outboundSchema.optional(),
    modelNumber: upsreferencefields_js_1.UPSReferenceFields$outboundSchema.optional(),
    partNumber: upsreferencefields_js_1.UPSReferenceFields$outboundSchema.optional(),
    poNumber: ponumber_js_1.PoNumber$outboundSchema.optional(),
    preferredDeliveryTimeframe: exports.PreferredDeliveryTimeframe$outboundSchema
        .optional(),
    premium: z.boolean().optional(),
    productionCode: upsreferencefields_js_1.UPSReferenceFields$outboundSchema.optional(),
    purchaseRequestNumber: upsreferencefields_js_1.UPSReferenceFields$outboundSchema.optional(),
    qrCodeRequested: z.boolean().optional(),
    reference1: z.string().optional(),
    reference2: z.string().optional(),
    requestRetailRates: z.boolean().optional(),
    returnServiceType: z.union([
        shipmentextrareturnservicetypeupsenum_js_1.ShipmentExtraReturnServiceTypeUPSEnum$outboundSchema,
        shipmentextrareturnservicetypelasershipenum_js_1.ShipmentExtraReturnServiceTypeLasershipEnum$outboundSchema,
    ]).optional(),
    rmaNumber: rmanumber_js_1.RmaNumber$outboundSchema.optional(),
    saturdayDelivery: z.boolean().optional(),
    salespersonNumber: upsreferencefields_js_1.UPSReferenceFields$outboundSchema.optional(),
    serialNumber: upsreferencefields_js_1.UPSReferenceFields$outboundSchema.optional(),
    signatureConfirmation: exports.SignatureConfirmation$outboundSchema.optional(),
    storeNumber: upsreferencefields_js_1.UPSReferenceFields$outboundSchema.optional(),
    transactionReferenceNumber: upsreferencefields_js_1.UPSReferenceFields$outboundSchema.optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        accountsReceivableCustomerAccount: "accounts_receivable_customer_account",
        ancillaryEndorsement: "ancillary_endorsement",
        appropriationNumber: "appropriation_number",
        authorityToLeave: "authority_to_leave",
        billOfLadingNumber: "bill_of_lading_number",
        bypassAddressValidation: "bypass_address_validation",
        carbonNeutral: "carbon_neutral",
        carrierHubId: "carrier_hub_id",
        carrierHubTravelTime: "carrier_hub_travel_time",
        cod: "COD",
        codNumber: "cod_number",
        containerType: "container_type",
        criticalPullTime: "critical_pull_time",
        customerBranch: "customer_branch",
        customerReference: "customer_reference",
        dangerousGoods: "dangerous_goods",
        dangerousGoodsCode: "dangerous_goods_code",
        dealerOrderNumber: "dealer_order_number",
        deliveryInstructions: "delivery_instructions",
        deptNumber: "dept_number",
        dryIce: "dry_ice",
        fdaProductCode: "fda_product_code",
        fulfillmentCenter: "fulfillment_center",
        invoiceNumber: "invoice_number",
        isReturn: "is_return",
        lasershipAttrs: "lasership_attrs",
        lasershipDeclaredValue: "lasership_declared_value",
        manifestNumber: "manifest_number",
        modelNumber: "model_number",
        partNumber: "part_number",
        poNumber: "po_number",
        preferredDeliveryTimeframe: "preferred_delivery_timeframe",
        productionCode: "production_code",
        purchaseRequestNumber: "purchase_request_number",
        qrCodeRequested: "qr_code_requested",
        reference1: "reference_1",
        reference2: "reference_2",
        requestRetailRates: "request_retail_rates",
        returnServiceType: "return_service_type",
        rmaNumber: "rma_number",
        saturdayDelivery: "saturday_delivery",
        salespersonNumber: "salesperson_number",
        serialNumber: "serial_number",
        signatureConfirmation: "signature_confirmation",
        storeNumber: "store_number",
        transactionReferenceNumber: "transaction_reference_number",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var ShipmentExtra$;
(function (ShipmentExtra$) {
    /** @deprecated use `ShipmentExtra$inboundSchema` instead. */
    ShipmentExtra$.inboundSchema = exports.ShipmentExtra$inboundSchema;
    /** @deprecated use `ShipmentExtra$outboundSchema` instead. */
    ShipmentExtra$.outboundSchema = exports.ShipmentExtra$outboundSchema;
})(ShipmentExtra$ || (exports.ShipmentExtra$ = ShipmentExtra$ = {}));
function shipmentExtraToJSON(shipmentExtra) {
    return JSON.stringify(exports.ShipmentExtra$outboundSchema.parse(shipmentExtra));
}
exports.shipmentExtraToJSON = shipmentExtraToJSON;
function shipmentExtraFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.ShipmentExtra$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ShipmentExtra' from JSON`);
}
exports.shipmentExtraFromJSON = shipmentExtraFromJSON;
//# sourceMappingURL=shipmentextra.js.map