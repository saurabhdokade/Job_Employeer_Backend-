"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.carrierAccountFromJSON = exports.carrierAccountToJSON = exports.CarrierAccount$ = exports.CarrierAccount$outboundSchema = exports.CarrierAccount$inboundSchema = exports.carrierAccountParametersFromJSON = exports.carrierAccountParametersToJSON = exports.CarrierAccountParameters$ = exports.CarrierAccountParameters$outboundSchema = exports.CarrierAccountParameters$inboundSchema = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const schemas_js_1 = require("../../lib/schemas.js");
const carrieraccountservicelevel_js_1 = require("./carrieraccountservicelevel.js");
const fedexconnectexistingownaccountparameters_js_1 = require("./fedexconnectexistingownaccountparameters.js");
const upsconnectexistingownaccountparameters_js_1 = require("./upsconnectexistingownaccountparameters.js");
/** @internal */
exports.CarrierAccountParameters$inboundSchema = z.union([
    fedexconnectexistingownaccountparameters_js_1.FedExConnectExistingOwnAccountParameters$inboundSchema,
    upsconnectexistingownaccountparameters_js_1.UPSConnectExistingOwnAccountParameters$inboundSchema,
    z.record(z.any()),
]);
/** @internal */
exports.CarrierAccountParameters$outboundSchema = z.union([
    fedexconnectexistingownaccountparameters_js_1.FedExConnectExistingOwnAccountParameters$outboundSchema,
    upsconnectexistingownaccountparameters_js_1.UPSConnectExistingOwnAccountParameters$outboundSchema,
    z.record(z.any()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CarrierAccountParameters$;
(function (CarrierAccountParameters$) {
    /** @deprecated use `CarrierAccountParameters$inboundSchema` instead. */
    CarrierAccountParameters$.inboundSchema = exports.CarrierAccountParameters$inboundSchema;
    /** @deprecated use `CarrierAccountParameters$outboundSchema` instead. */
    CarrierAccountParameters$.outboundSchema = exports.CarrierAccountParameters$outboundSchema;
})(CarrierAccountParameters$ || (exports.CarrierAccountParameters$ = CarrierAccountParameters$ = {}));
function carrierAccountParametersToJSON(carrierAccountParameters) {
    return JSON.stringify(exports.CarrierAccountParameters$outboundSchema.parse(carrierAccountParameters));
}
exports.carrierAccountParametersToJSON = carrierAccountParametersToJSON;
function carrierAccountParametersFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CarrierAccountParameters$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CarrierAccountParameters' from JSON`);
}
exports.carrierAccountParametersFromJSON = carrierAccountParametersFromJSON;
/** @internal */
exports.CarrierAccount$inboundSchema = z.object({
    account_id: z.string(),
    active: z.boolean().optional(),
    carrier: z.string(),
    parameters: z.union([
        fedexconnectexistingownaccountparameters_js_1.FedExConnectExistingOwnAccountParameters$inboundSchema,
        upsconnectexistingownaccountparameters_js_1.UPSConnectExistingOwnAccountParameters$inboundSchema,
        z.record(z.any()),
    ]).optional(),
    carrier_name: z.any().optional(),
    is_shippo_account: z.boolean().optional(),
    metadata: z.string().optional(),
    object_id: z.string().optional(),
    object_owner: z.string().optional(),
    service_levels: z.array(carrieraccountservicelevel_js_1.CarrierAccountServiceLevel$inboundSchema).optional(),
    test: z.boolean().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "account_id": "accountId",
        "carrier_name": "carrierName",
        "is_shippo_account": "isShippoAccount",
        "object_id": "objectId",
        "object_owner": "objectOwner",
        "service_levels": "serviceLevels",
    });
});
/** @internal */
exports.CarrierAccount$outboundSchema = z.object({
    accountId: z.string(),
    active: z.boolean().optional(),
    carrier: z.string(),
    parameters: z.union([
        fedexconnectexistingownaccountparameters_js_1.FedExConnectExistingOwnAccountParameters$outboundSchema,
        upsconnectexistingownaccountparameters_js_1.UPSConnectExistingOwnAccountParameters$outboundSchema,
        z.record(z.any()),
    ]).optional(),
    carrierName: z.any().optional(),
    isShippoAccount: z.boolean().optional(),
    metadata: z.string().optional(),
    objectId: z.string().optional(),
    objectOwner: z.string().optional(),
    serviceLevels: z.array(carrieraccountservicelevel_js_1.CarrierAccountServiceLevel$outboundSchema).optional(),
    test: z.boolean().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        accountId: "account_id",
        carrierName: "carrier_name",
        isShippoAccount: "is_shippo_account",
        objectId: "object_id",
        objectOwner: "object_owner",
        serviceLevels: "service_levels",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CarrierAccount$;
(function (CarrierAccount$) {
    /** @deprecated use `CarrierAccount$inboundSchema` instead. */
    CarrierAccount$.inboundSchema = exports.CarrierAccount$inboundSchema;
    /** @deprecated use `CarrierAccount$outboundSchema` instead. */
    CarrierAccount$.outboundSchema = exports.CarrierAccount$outboundSchema;
})(CarrierAccount$ || (exports.CarrierAccount$ = CarrierAccount$ = {}));
function carrierAccountToJSON(carrierAccount) {
    return JSON.stringify(exports.CarrierAccount$outboundSchema.parse(carrierAccount));
}
exports.carrierAccountToJSON = carrierAccountToJSON;
function carrierAccountFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CarrierAccount$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CarrierAccount' from JSON`);
}
exports.carrierAccountFromJSON = carrierAccountFromJSON;
//# sourceMappingURL=carrieraccount.js.map