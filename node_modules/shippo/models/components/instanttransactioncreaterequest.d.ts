import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { ShipmentCreateRequest, ShipmentCreateRequest$Outbound } from "./shipmentcreaterequest.js";
export declare const LabelFileType: {
    readonly Png: "PNG";
    readonly PNG23x75: "PNG_2.3x7.5";
    readonly Pdf: "PDF";
    readonly PDF23x75: "PDF_2.3x7.5";
    readonly PDF4x6: "PDF_4x6";
    readonly PDF4x8: "PDF_4x8";
    readonly PdfA4: "PDF_A4";
    readonly PdfA6: "PDF_A6";
    readonly Zplii: "ZPLII";
};
export type LabelFileType = ClosedEnum<typeof LabelFileType>;
export type InstantTransactionCreateRequest = {
    async?: boolean | undefined;
    carrierAccount: string;
    labelFileType?: LabelFileType | undefined;
    metadata?: string | undefined;
    servicelevelToken: string;
    shipment: ShipmentCreateRequest;
    order?: string | undefined;
};
/** @internal */
export declare const LabelFileType$inboundSchema: z.ZodNativeEnum<typeof LabelFileType>;
/** @internal */
export declare const LabelFileType$outboundSchema: z.ZodNativeEnum<typeof LabelFileType>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace LabelFileType$ {
    /** @deprecated use `LabelFileType$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Png: "PNG";
        readonly PNG23x75: "PNG_2.3x7.5";
        readonly Pdf: "PDF";
        readonly PDF23x75: "PDF_2.3x7.5";
        readonly PDF4x6: "PDF_4x6";
        readonly PDF4x8: "PDF_4x8";
        readonly PdfA4: "PDF_A4";
        readonly PdfA6: "PDF_A6";
        readonly Zplii: "ZPLII";
    }>;
    /** @deprecated use `LabelFileType$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Png: "PNG";
        readonly PNG23x75: "PNG_2.3x7.5";
        readonly Pdf: "PDF";
        readonly PDF23x75: "PDF_2.3x7.5";
        readonly PDF4x6: "PDF_4x6";
        readonly PDF4x8: "PDF_4x8";
        readonly PdfA4: "PDF_A4";
        readonly PdfA6: "PDF_A6";
        readonly Zplii: "ZPLII";
    }>;
}
/** @internal */
export declare const InstantTransactionCreateRequest$inboundSchema: z.ZodType<InstantTransactionCreateRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type InstantTransactionCreateRequest$Outbound = {
    async: boolean;
    carrier_account: string;
    label_file_type?: string | undefined;
    metadata?: string | undefined;
    servicelevel_token: string;
    shipment: ShipmentCreateRequest$Outbound;
    order?: string | undefined;
};
/** @internal */
export declare const InstantTransactionCreateRequest$outboundSchema: z.ZodType<InstantTransactionCreateRequest$Outbound, z.ZodTypeDef, InstantTransactionCreateRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace InstantTransactionCreateRequest$ {
    /** @deprecated use `InstantTransactionCreateRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<InstantTransactionCreateRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `InstantTransactionCreateRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<InstantTransactionCreateRequest$Outbound, z.ZodTypeDef, InstantTransactionCreateRequest>;
    /** @deprecated use `InstantTransactionCreateRequest$Outbound` instead. */
    type Outbound = InstantTransactionCreateRequest$Outbound;
}
export declare function instantTransactionCreateRequestToJSON(instantTransactionCreateRequest: InstantTransactionCreateRequest): string;
export declare function instantTransactionCreateRequestFromJSON(jsonString: string): SafeParseResult<InstantTransactionCreateRequest, SDKValidationError>;
//# sourceMappingURL=instanttransactioncreaterequest.d.ts.map