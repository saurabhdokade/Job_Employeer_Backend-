"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.manifestFromJSON = exports.manifestToJSON = exports.Manifest$ = exports.Manifest$outboundSchema = exports.Manifest$inboundSchema = exports.ManifestStatus$ = exports.ManifestStatus$outboundSchema = exports.ManifestStatus$inboundSchema = exports.ManifestStatus = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const schemas_js_1 = require("../../lib/schemas.js");
/**
 * Indicates the status of the manifest.
 */
exports.ManifestStatus = {
    Queued: "QUEUED",
    Success: "SUCCESS",
    Error: "ERROR",
};
/** @internal */
exports.ManifestStatus$inboundSchema = z.nativeEnum(exports.ManifestStatus);
/** @internal */
exports.ManifestStatus$outboundSchema = exports.ManifestStatus$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var ManifestStatus$;
(function (ManifestStatus$) {
    /** @deprecated use `ManifestStatus$inboundSchema` instead. */
    ManifestStatus$.inboundSchema = exports.ManifestStatus$inboundSchema;
    /** @deprecated use `ManifestStatus$outboundSchema` instead. */
    ManifestStatus$.outboundSchema = exports.ManifestStatus$outboundSchema;
})(ManifestStatus$ || (exports.ManifestStatus$ = ManifestStatus$ = {}));
/** @internal */
exports.Manifest$inboundSchema = z.object({
    carrier_account: z.string(),
    shipment_date: z.string(),
    transactions: z.array(z.string()).optional(),
    address_from: z.string(),
    documents: z.array(z.string()),
    errors: z.array(z.string()).optional(),
    object_created: z.string().datetime({ offset: true }).transform(v => new Date(v)),
    object_id: z.string(),
    object_owner: z.string(),
    object_updated: z.string().datetime({ offset: true }).transform(v => new Date(v)),
    status: exports.ManifestStatus$inboundSchema,
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "carrier_account": "carrierAccount",
        "shipment_date": "shipmentDate",
        "address_from": "addressFrom",
        "object_created": "objectCreated",
        "object_id": "objectId",
        "object_owner": "objectOwner",
        "object_updated": "objectUpdated",
    });
});
/** @internal */
exports.Manifest$outboundSchema = z.object({
    carrierAccount: z.string(),
    shipmentDate: z.string(),
    transactions: z.array(z.string()).optional(),
    addressFrom: z.string(),
    documents: z.array(z.string()),
    errors: z.array(z.string()).optional(),
    objectCreated: z.date().transform(v => v.toISOString()),
    objectId: z.string(),
    objectOwner: z.string(),
    objectUpdated: z.date().transform(v => v.toISOString()),
    status: exports.ManifestStatus$outboundSchema,
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        carrierAccount: "carrier_account",
        shipmentDate: "shipment_date",
        addressFrom: "address_from",
        objectCreated: "object_created",
        objectId: "object_id",
        objectOwner: "object_owner",
        objectUpdated: "object_updated",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var Manifest$;
(function (Manifest$) {
    /** @deprecated use `Manifest$inboundSchema` instead. */
    Manifest$.inboundSchema = exports.Manifest$inboundSchema;
    /** @deprecated use `Manifest$outboundSchema` instead. */
    Manifest$.outboundSchema = exports.Manifest$outboundSchema;
})(Manifest$ || (exports.Manifest$ = Manifest$ = {}));
function manifestToJSON(manifest) {
    return JSON.stringify(exports.Manifest$outboundSchema.parse(manifest));
}
exports.manifestToJSON = manifestToJSON;
function manifestFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.Manifest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'Manifest' from JSON`);
}
exports.manifestFromJSON = manifestFromJSON;
//# sourceMappingURL=manifest.js.map