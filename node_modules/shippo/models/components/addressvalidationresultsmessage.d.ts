import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type AddressValidationResultsMessage = {
    /**
     * See <a href="#tag/Address-Validation-Codes">Address Validation Codes</a>
     */
    code?: string | undefined;
    /**
     * See <a href="#tag/Address-Validation-Source">Address Validation Source</a>
     */
    source?: string | undefined;
    text?: string | undefined;
    type?: string | undefined;
};
/** @internal */
export declare const AddressValidationResultsMessage$inboundSchema: z.ZodType<AddressValidationResultsMessage, z.ZodTypeDef, unknown>;
/** @internal */
export type AddressValidationResultsMessage$Outbound = {
    code?: string | undefined;
    source?: string | undefined;
    text?: string | undefined;
    type?: string | undefined;
};
/** @internal */
export declare const AddressValidationResultsMessage$outboundSchema: z.ZodType<AddressValidationResultsMessage$Outbound, z.ZodTypeDef, AddressValidationResultsMessage>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace AddressValidationResultsMessage$ {
    /** @deprecated use `AddressValidationResultsMessage$inboundSchema` instead. */
    const inboundSchema: z.ZodType<AddressValidationResultsMessage, z.ZodTypeDef, unknown>;
    /** @deprecated use `AddressValidationResultsMessage$outboundSchema` instead. */
    const outboundSchema: z.ZodType<AddressValidationResultsMessage$Outbound, z.ZodTypeDef, AddressValidationResultsMessage>;
    /** @deprecated use `AddressValidationResultsMessage$Outbound` instead. */
    type Outbound = AddressValidationResultsMessage$Outbound;
}
export declare function addressValidationResultsMessageToJSON(addressValidationResultsMessage: AddressValidationResultsMessage): string;
export declare function addressValidationResultsMessageFromJSON(jsonString: string): SafeParseResult<AddressValidationResultsMessage, SDKValidationError>;
//# sourceMappingURL=addressvalidationresultsmessage.d.ts.map