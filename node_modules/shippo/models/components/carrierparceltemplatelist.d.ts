import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { CarrierParcelTemplate, CarrierParcelTemplate$Outbound } from "./carrierparceltemplate.js";
export type CarrierParcelTemplateList = {
    results?: Array<CarrierParcelTemplate> | undefined;
};
/** @internal */
export declare const CarrierParcelTemplateList$inboundSchema: z.ZodType<CarrierParcelTemplateList, z.ZodTypeDef, unknown>;
/** @internal */
export type CarrierParcelTemplateList$Outbound = {
    results?: Array<CarrierParcelTemplate$Outbound> | undefined;
};
/** @internal */
export declare const CarrierParcelTemplateList$outboundSchema: z.ZodType<CarrierParcelTemplateList$Outbound, z.ZodTypeDef, CarrierParcelTemplateList>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CarrierParcelTemplateList$ {
    /** @deprecated use `CarrierParcelTemplateList$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CarrierParcelTemplateList, z.ZodTypeDef, unknown>;
    /** @deprecated use `CarrierParcelTemplateList$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CarrierParcelTemplateList$Outbound, z.ZodTypeDef, CarrierParcelTemplateList>;
    /** @deprecated use `CarrierParcelTemplateList$Outbound` instead. */
    type Outbound = CarrierParcelTemplateList$Outbound;
}
export declare function carrierParcelTemplateListToJSON(carrierParcelTemplateList: CarrierParcelTemplateList): string;
export declare function carrierParcelTemplateListFromJSON(jsonString: string): SafeParseResult<CarrierParcelTemplateList, SDKValidationError>;
//# sourceMappingURL=carrierparceltemplatelist.d.ts.map