import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
/**
 * Indicates the validity of the enclosing object
 */
export declare const ObjectStateEnum: {
    readonly Valid: "VALID";
    readonly Invalid: "INVALID";
};
/**
 * Indicates the validity of the enclosing object
 */
export type ObjectStateEnum = ClosedEnum<typeof ObjectStateEnum>;
/** @internal */
export declare const ObjectStateEnum$inboundSchema: z.ZodNativeEnum<typeof ObjectStateEnum>;
/** @internal */
export declare const ObjectStateEnum$outboundSchema: z.ZodNativeEnum<typeof ObjectStateEnum>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ObjectStateEnum$ {
    /** @deprecated use `ObjectStateEnum$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Valid: "VALID";
        readonly Invalid: "INVALID";
    }>;
    /** @deprecated use `ObjectStateEnum$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Valid: "VALID";
        readonly Invalid: "INVALID";
    }>;
}
//# sourceMappingURL=objectstateenum.d.ts.map