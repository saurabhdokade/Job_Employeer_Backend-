import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { BatchShipmentCreateRequest, BatchShipmentCreateRequest$Outbound } from "./batchshipmentcreaterequest.js";
import { LabelFileTypeEnum } from "./labelfiletypeenum.js";
export type BatchCreateRequest = {
    /**
     * ID of the Carrier Account object to use as the default for all shipments in this Batch.
     *
     * @remarks
     * The carrier account can be changed on a per-shipment basis by changing the carrier_account in the
     * corresponding BatchShipment object.
     */
    defaultCarrierAccount: string;
    /**
     * Token of the service level to use as the default for all shipments in this Batch.
     *
     * @remarks
     * The servicelevel can be changed on a per-shipment basis by changing the servicelevel_token in the
     * corresponding BatchShipment object. <a href="#tag/Service-Levels">Servicelevel tokens can be found here.</a>
     */
    defaultServicelevelToken: string;
    /**
     * Print format of the <a href="https://docs.goshippo.com/docs/shipments/shippinglabelsizes/">label</a>. If empty, will use the default format set from
     *
     * @remarks
     * <a href="https://apps.goshippo.com/settings/labels">the Shippo dashboard.</a>
     */
    labelFiletype?: LabelFileTypeEnum | undefined;
    /**
     * A string of up to 100 characters that can be filled with any additional information you want to attach to the object.
     */
    metadata?: string | undefined;
    /**
     * Array of BatchShipment objects. The response keeps the same order as in the request array.
     */
    batchShipments: Array<BatchShipmentCreateRequest>;
};
/** @internal */
export declare const BatchCreateRequest$inboundSchema: z.ZodType<BatchCreateRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type BatchCreateRequest$Outbound = {
    default_carrier_account: string;
    default_servicelevel_token: string;
    label_filetype?: string | undefined;
    metadata?: string | undefined;
    batch_shipments: Array<BatchShipmentCreateRequest$Outbound>;
};
/** @internal */
export declare const BatchCreateRequest$outboundSchema: z.ZodType<BatchCreateRequest$Outbound, z.ZodTypeDef, BatchCreateRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace BatchCreateRequest$ {
    /** @deprecated use `BatchCreateRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<BatchCreateRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `BatchCreateRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<BatchCreateRequest$Outbound, z.ZodTypeDef, BatchCreateRequest>;
    /** @deprecated use `BatchCreateRequest$Outbound` instead. */
    type Outbound = BatchCreateRequest$Outbound;
}
export declare function batchCreateRequestToJSON(batchCreateRequest: BatchCreateRequest): string;
export declare function batchCreateRequestFromJSON(jsonString: string): SafeParseResult<BatchCreateRequest, SDKValidationError>;
//# sourceMappingURL=batchcreaterequest.d.ts.map