import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { ParcelExtra, ParcelExtra$Outbound } from "./parcelextra.js";
import { ParcelTemplateEnumSet, ParcelTemplateEnumSet$Outbound } from "./parceltemplateenumset.js";
import { WeightUnitEnum } from "./weightunitenum.js";
export type ParcelCreateFromTemplateRequest = {
    /**
     * An object holding optional extra services to be requested for each parcel in a multi-piece shipment.
     *
     * @remarks
     * See the <a href="#section/Parcel-Extras">Parcel Extra table below</a> for all available services.
     */
    extra?: ParcelExtra | undefined;
    metadata?: string | undefined;
    /**
     * The unit used for weight.
     */
    massUnit: WeightUnitEnum;
    /**
     * Weight of the parcel. Up to six digits in front and four digits after the decimal separator are accepted.
     */
    weight: string;
    /**
     * If template is passed, `length`, `width`, `height`, and `distance_unit` are not required
     */
    template: ParcelTemplateEnumSet;
};
/** @internal */
export declare const ParcelCreateFromTemplateRequest$inboundSchema: z.ZodType<ParcelCreateFromTemplateRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type ParcelCreateFromTemplateRequest$Outbound = {
    extra?: ParcelExtra$Outbound | undefined;
    metadata?: string | undefined;
    mass_unit: string;
    weight: string;
    template: ParcelTemplateEnumSet$Outbound;
};
/** @internal */
export declare const ParcelCreateFromTemplateRequest$outboundSchema: z.ZodType<ParcelCreateFromTemplateRequest$Outbound, z.ZodTypeDef, ParcelCreateFromTemplateRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ParcelCreateFromTemplateRequest$ {
    /** @deprecated use `ParcelCreateFromTemplateRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ParcelCreateFromTemplateRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `ParcelCreateFromTemplateRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ParcelCreateFromTemplateRequest$Outbound, z.ZodTypeDef, ParcelCreateFromTemplateRequest>;
    /** @deprecated use `ParcelCreateFromTemplateRequest$Outbound` instead. */
    type Outbound = ParcelCreateFromTemplateRequest$Outbound;
}
export declare function parcelCreateFromTemplateRequestToJSON(parcelCreateFromTemplateRequest: ParcelCreateFromTemplateRequest): string;
export declare function parcelCreateFromTemplateRequestFromJSON(jsonString: string): SafeParseResult<ParcelCreateFromTemplateRequest, SDKValidationError>;
//# sourceMappingURL=parcelcreatefromtemplaterequest.d.ts.map