"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.connectExistingOwnAccountRequestFromJSON = exports.connectExistingOwnAccountRequestToJSON = exports.ConnectExistingOwnAccountRequest$ = exports.ConnectExistingOwnAccountRequest$outboundSchema = exports.ConnectExistingOwnAccountRequest$inboundSchema = exports.connectExistingOwnAccountRequestParametersFromJSON = exports.connectExistingOwnAccountRequestParametersToJSON = exports.ConnectExistingOwnAccountRequestParameters$ = exports.ConnectExistingOwnAccountRequestParameters$outboundSchema = exports.ConnectExistingOwnAccountRequestParameters$inboundSchema = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const schemas_js_1 = require("../../lib/schemas.js");
const fedexconnectexistingownaccountparameters_js_1 = require("./fedexconnectexistingownaccountparameters.js");
const upsconnectexistingownaccountparameters_js_1 = require("./upsconnectexistingownaccountparameters.js");
/** @internal */
exports.ConnectExistingOwnAccountRequestParameters$inboundSchema = z.union([
    fedexconnectexistingownaccountparameters_js_1.FedExConnectExistingOwnAccountParameters$inboundSchema,
    upsconnectexistingownaccountparameters_js_1.UPSConnectExistingOwnAccountParameters$inboundSchema,
    z.record(z.any()),
]);
/** @internal */
exports.ConnectExistingOwnAccountRequestParameters$outboundSchema = z.union([
    fedexconnectexistingownaccountparameters_js_1.FedExConnectExistingOwnAccountParameters$outboundSchema,
    upsconnectexistingownaccountparameters_js_1.UPSConnectExistingOwnAccountParameters$outboundSchema,
    z.record(z.any()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var ConnectExistingOwnAccountRequestParameters$;
(function (ConnectExistingOwnAccountRequestParameters$) {
    /** @deprecated use `ConnectExistingOwnAccountRequestParameters$inboundSchema` instead. */
    ConnectExistingOwnAccountRequestParameters$.inboundSchema = exports.ConnectExistingOwnAccountRequestParameters$inboundSchema;
    /** @deprecated use `ConnectExistingOwnAccountRequestParameters$outboundSchema` instead. */
    ConnectExistingOwnAccountRequestParameters$.outboundSchema = exports.ConnectExistingOwnAccountRequestParameters$outboundSchema;
})(ConnectExistingOwnAccountRequestParameters$ || (exports.ConnectExistingOwnAccountRequestParameters$ = ConnectExistingOwnAccountRequestParameters$ = {}));
function connectExistingOwnAccountRequestParametersToJSON(connectExistingOwnAccountRequestParameters) {
    return JSON.stringify(exports.ConnectExistingOwnAccountRequestParameters$outboundSchema.parse(connectExistingOwnAccountRequestParameters));
}
exports.connectExistingOwnAccountRequestParametersToJSON = connectExistingOwnAccountRequestParametersToJSON;
function connectExistingOwnAccountRequestParametersFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.ConnectExistingOwnAccountRequestParameters$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ConnectExistingOwnAccountRequestParameters' from JSON`);
}
exports.connectExistingOwnAccountRequestParametersFromJSON = connectExistingOwnAccountRequestParametersFromJSON;
/** @internal */
exports.ConnectExistingOwnAccountRequest$inboundSchema = z.object({
    account_id: z.string(),
    active: z.boolean().optional(),
    carrier: z.string(),
    metadata: z.string().optional(),
    parameters: z.union([
        fedexconnectexistingownaccountparameters_js_1.FedExConnectExistingOwnAccountParameters$inboundSchema,
        upsconnectexistingownaccountparameters_js_1.UPSConnectExistingOwnAccountParameters$inboundSchema,
        z.record(z.any()),
    ]),
    test: z.boolean().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "account_id": "accountId",
    });
});
/** @internal */
exports.ConnectExistingOwnAccountRequest$outboundSchema = z.object({
    accountId: z.string(),
    active: z.boolean().optional(),
    carrier: z.string(),
    metadata: z.string().optional(),
    parameters: z.union([
        fedexconnectexistingownaccountparameters_js_1.FedExConnectExistingOwnAccountParameters$outboundSchema,
        upsconnectexistingownaccountparameters_js_1.UPSConnectExistingOwnAccountParameters$outboundSchema,
        z.record(z.any()),
    ]),
    test: z.boolean().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        accountId: "account_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var ConnectExistingOwnAccountRequest$;
(function (ConnectExistingOwnAccountRequest$) {
    /** @deprecated use `ConnectExistingOwnAccountRequest$inboundSchema` instead. */
    ConnectExistingOwnAccountRequest$.inboundSchema = exports.ConnectExistingOwnAccountRequest$inboundSchema;
    /** @deprecated use `ConnectExistingOwnAccountRequest$outboundSchema` instead. */
    ConnectExistingOwnAccountRequest$.outboundSchema = exports.ConnectExistingOwnAccountRequest$outboundSchema;
})(ConnectExistingOwnAccountRequest$ || (exports.ConnectExistingOwnAccountRequest$ = ConnectExistingOwnAccountRequest$ = {}));
function connectExistingOwnAccountRequestToJSON(connectExistingOwnAccountRequest) {
    return JSON.stringify(exports.ConnectExistingOwnAccountRequest$outboundSchema.parse(connectExistingOwnAccountRequest));
}
exports.connectExistingOwnAccountRequestToJSON = connectExistingOwnAccountRequestToJSON;
function connectExistingOwnAccountRequestFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.ConnectExistingOwnAccountRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ConnectExistingOwnAccountRequest' from JSON`);
}
exports.connectExistingOwnAccountRequestFromJSON = connectExistingOwnAccountRequestFromJSON;
//# sourceMappingURL=connectexistingownaccountrequest.js.map