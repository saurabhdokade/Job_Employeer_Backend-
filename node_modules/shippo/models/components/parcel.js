"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.parcelFromJSON = exports.parcelToJSON = exports.Parcel$ = exports.Parcel$outboundSchema = exports.Parcel$inboundSchema = exports.ObjectState$ = exports.ObjectState$outboundSchema = exports.ObjectState$inboundSchema = exports.ObjectState = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const schemas_js_1 = require("../../lib/schemas.js");
const distanceunitenum_js_1 = require("./distanceunitenum.js");
const parcelextra_js_1 = require("./parcelextra.js");
const parceltemplateenumset_js_1 = require("./parceltemplateenumset.js");
const weightunitenum_js_1 = require("./weightunitenum.js");
/**
 * A Parcel will only be valid when all required values have been sent and validated successfully.
 */
exports.ObjectState = {
    Valid: "VALID",
};
/** @internal */
exports.ObjectState$inboundSchema = z
    .nativeEnum(exports.ObjectState);
/** @internal */
exports.ObjectState$outboundSchema = exports.ObjectState$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var ObjectState$;
(function (ObjectState$) {
    /** @deprecated use `ObjectState$inboundSchema` instead. */
    ObjectState$.inboundSchema = exports.ObjectState$inboundSchema;
    /** @deprecated use `ObjectState$outboundSchema` instead. */
    ObjectState$.outboundSchema = exports.ObjectState$outboundSchema;
})(ObjectState$ || (exports.ObjectState$ = ObjectState$ = {}));
/** @internal */
exports.Parcel$inboundSchema = z
    .object({
    extra: parcelextra_js_1.ParcelExtra$inboundSchema.optional(),
    metadata: z.string().optional(),
    mass_unit: weightunitenum_js_1.WeightUnitEnum$inboundSchema,
    weight: z.string(),
    distance_unit: distanceunitenum_js_1.DistanceUnitEnum$inboundSchema,
    height: z.string(),
    length: z.string(),
    width: z.string(),
    object_created: z.string().datetime({ offset: true }).transform(v => new Date(v)).optional(),
    object_id: z.string().optional(),
    object_owner: z.string().optional(),
    object_state: exports.ObjectState$inboundSchema.optional(),
    object_updated: z.string().datetime({ offset: true }).transform(v => new Date(v)).optional(),
    template: parceltemplateenumset_js_1.ParcelTemplateEnumSet$inboundSchema.optional(),
    test: z.boolean().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "mass_unit": "massUnit",
        "distance_unit": "distanceUnit",
        "object_created": "objectCreated",
        "object_id": "objectId",
        "object_owner": "objectOwner",
        "object_state": "objectState",
        "object_updated": "objectUpdated",
    });
});
/** @internal */
exports.Parcel$outboundSchema = z.object({
    extra: parcelextra_js_1.ParcelExtra$outboundSchema.optional(),
    metadata: z.string().optional(),
    massUnit: weightunitenum_js_1.WeightUnitEnum$outboundSchema,
    weight: z.string(),
    distanceUnit: distanceunitenum_js_1.DistanceUnitEnum$outboundSchema,
    height: z.string(),
    length: z.string(),
    width: z.string(),
    objectCreated: z.date().transform(v => v.toISOString()).optional(),
    objectId: z.string().optional(),
    objectOwner: z.string().optional(),
    objectState: exports.ObjectState$outboundSchema.optional(),
    objectUpdated: z.date().transform(v => v.toISOString()).optional(),
    template: parceltemplateenumset_js_1.ParcelTemplateEnumSet$outboundSchema.optional(),
    test: z.boolean().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        massUnit: "mass_unit",
        distanceUnit: "distance_unit",
        objectCreated: "object_created",
        objectId: "object_id",
        objectOwner: "object_owner",
        objectState: "object_state",
        objectUpdated: "object_updated",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var Parcel$;
(function (Parcel$) {
    /** @deprecated use `Parcel$inboundSchema` instead. */
    Parcel$.inboundSchema = exports.Parcel$inboundSchema;
    /** @deprecated use `Parcel$outboundSchema` instead. */
    Parcel$.outboundSchema = exports.Parcel$outboundSchema;
})(Parcel$ || (exports.Parcel$ = Parcel$ = {}));
function parcelToJSON(parcel) {
    return JSON.stringify(exports.Parcel$outboundSchema.parse(parcel));
}
exports.parcelToJSON = parcelToJSON;
function parcelFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.Parcel$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'Parcel' from JSON`);
}
exports.parcelFromJSON = parcelFromJSON;
//# sourceMappingURL=parcel.js.map