import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
/**
 * Container for specifying the presence of lithium batteries.
 */
export type DangerousGoodsLithiumBatteries = {
    /**
     * Indicates if the shipment contains lithium batteries.
     */
    contains?: boolean | undefined;
};
/** @internal */
export declare const DangerousGoodsLithiumBatteries$inboundSchema: z.ZodType<DangerousGoodsLithiumBatteries, z.ZodTypeDef, unknown>;
/** @internal */
export type DangerousGoodsLithiumBatteries$Outbound = {
    contains?: boolean | undefined;
};
/** @internal */
export declare const DangerousGoodsLithiumBatteries$outboundSchema: z.ZodType<DangerousGoodsLithiumBatteries$Outbound, z.ZodTypeDef, DangerousGoodsLithiumBatteries>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace DangerousGoodsLithiumBatteries$ {
    /** @deprecated use `DangerousGoodsLithiumBatteries$inboundSchema` instead. */
    const inboundSchema: z.ZodType<DangerousGoodsLithiumBatteries, z.ZodTypeDef, unknown>;
    /** @deprecated use `DangerousGoodsLithiumBatteries$outboundSchema` instead. */
    const outboundSchema: z.ZodType<DangerousGoodsLithiumBatteries$Outbound, z.ZodTypeDef, DangerousGoodsLithiumBatteries>;
    /** @deprecated use `DangerousGoodsLithiumBatteries$Outbound` instead. */
    type Outbound = DangerousGoodsLithiumBatteries$Outbound;
}
export declare function dangerousGoodsLithiumBatteriesToJSON(dangerousGoodsLithiumBatteries: DangerousGoodsLithiumBatteries): string;
export declare function dangerousGoodsLithiumBatteriesFromJSON(jsonString: string): SafeParseResult<DangerousGoodsLithiumBatteries, SDKValidationError>;
//# sourceMappingURL=dangerousgoodslithiumbatteries.d.ts.map