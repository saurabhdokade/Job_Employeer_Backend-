import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
/**
 * B13A Option details are obtained by filing a B13A Canada Export Declaration via the Canadian Export Reporting System (CERS).
 *
 * @remarks
 * <a href="https://www.cbsa-asfc.gc.ca/services/export/guide-eng.html" target="_blank" rel="noopener noreferrer"> More information on reporting commercial exports from Canada. </a>
 * Allowed values available <a href="#tag/Customs-Declaration-B13A-Filing-Option">here</a>
 */
export declare const CustomsDeclarationB13AFilingOptionEnum: {
    readonly FiledElectronically: "FILED_ELECTRONICALLY";
    readonly SummaryReporting: "SUMMARY_REPORTING";
    readonly NotRequired: "NOT_REQUIRED";
};
/**
 * B13A Option details are obtained by filing a B13A Canada Export Declaration via the Canadian Export Reporting System (CERS).
 *
 * @remarks
 * <a href="https://www.cbsa-asfc.gc.ca/services/export/guide-eng.html" target="_blank" rel="noopener noreferrer"> More information on reporting commercial exports from Canada. </a>
 * Allowed values available <a href="#tag/Customs-Declaration-B13A-Filing-Option">here</a>
 */
export type CustomsDeclarationB13AFilingOptionEnum = ClosedEnum<typeof CustomsDeclarationB13AFilingOptionEnum>;
/** @internal */
export declare const CustomsDeclarationB13AFilingOptionEnum$inboundSchema: z.ZodNativeEnum<typeof CustomsDeclarationB13AFilingOptionEnum>;
/** @internal */
export declare const CustomsDeclarationB13AFilingOptionEnum$outboundSchema: z.ZodNativeEnum<typeof CustomsDeclarationB13AFilingOptionEnum>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CustomsDeclarationB13AFilingOptionEnum$ {
    /** @deprecated use `CustomsDeclarationB13AFilingOptionEnum$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly FiledElectronically: "FILED_ELECTRONICALLY";
        readonly SummaryReporting: "SUMMARY_REPORTING";
        readonly NotRequired: "NOT_REQUIRED";
    }>;
    /** @deprecated use `CustomsDeclarationB13AFilingOptionEnum$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly FiledElectronically: "FILED_ELECTRONICALLY";
        readonly SummaryReporting: "SUMMARY_REPORTING";
        readonly NotRequired: "NOT_REQUIRED";
    }>;
}
//# sourceMappingURL=customsdeclarationb13afilingoptionenum.d.ts.map