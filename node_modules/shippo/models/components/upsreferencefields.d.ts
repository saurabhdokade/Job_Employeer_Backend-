import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type UPSReferenceFields = {
    /**
     * Custom prefix text.
     */
    prefix?: string | undefined;
    /**
     * Label reference text. 35 character limit.
     */
    value?: string | undefined;
    /**
     * Order UPS reference fields are printed on ZPL labels. For UPS shipments, if you choose to set `ref_sort` for one reference, you must set `ref_sort` for all other supported UPS references using unique integers.
     */
    refSort?: number | undefined;
};
/** @internal */
export declare const UPSReferenceFields$inboundSchema: z.ZodType<UPSReferenceFields, z.ZodTypeDef, unknown>;
/** @internal */
export type UPSReferenceFields$Outbound = {
    prefix?: string | undefined;
    value?: string | undefined;
    ref_sort?: number | undefined;
};
/** @internal */
export declare const UPSReferenceFields$outboundSchema: z.ZodType<UPSReferenceFields$Outbound, z.ZodTypeDef, UPSReferenceFields>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UPSReferenceFields$ {
    /** @deprecated use `UPSReferenceFields$inboundSchema` instead. */
    const inboundSchema: z.ZodType<UPSReferenceFields, z.ZodTypeDef, unknown>;
    /** @deprecated use `UPSReferenceFields$outboundSchema` instead. */
    const outboundSchema: z.ZodType<UPSReferenceFields$Outbound, z.ZodTypeDef, UPSReferenceFields>;
    /** @deprecated use `UPSReferenceFields$Outbound` instead. */
    type Outbound = UPSReferenceFields$Outbound;
}
export declare function upsReferenceFieldsToJSON(upsReferenceFields: UPSReferenceFields): string;
export declare function upsReferenceFieldsFromJSON(jsonString: string): SafeParseResult<UPSReferenceFields, SDKValidationError>;
//# sourceMappingURL=upsreferencefields.d.ts.map