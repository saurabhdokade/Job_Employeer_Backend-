"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.lineItemFromJSON = exports.lineItemToJSON = exports.LineItem$ = exports.LineItem$outboundSchema = exports.LineItem$inboundSchema = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const schemas_js_1 = require("../../lib/schemas.js");
const weightunitenum_js_1 = require("./weightunitenum.js");
/** @internal */
exports.LineItem$inboundSchema = z.object({
    currency: z.string().optional(),
    manufacture_country: z.string().optional(),
    max_delivery_time: z.string().datetime({ offset: true }).transform(v => new Date(v)).optional(),
    max_ship_time: z.string().datetime({ offset: true }).transform(v => new Date(v)).optional(),
    quantity: z.number().int().optional(),
    sku: z.string().optional(),
    title: z.string().optional(),
    total_price: z.string().optional(),
    variant_title: z.string().optional(),
    weight: z.string().optional(),
    weight_unit: weightunitenum_js_1.WeightUnitEnum$inboundSchema.optional(),
    object_id: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "manufacture_country": "manufactureCountry",
        "max_delivery_time": "maxDeliveryTime",
        "max_ship_time": "maxShipTime",
        "total_price": "totalPrice",
        "variant_title": "variantTitle",
        "weight_unit": "weightUnit",
        "object_id": "objectId",
    });
});
/** @internal */
exports.LineItem$outboundSchema = z.object({
    currency: z.string().optional(),
    manufactureCountry: z.string().optional(),
    maxDeliveryTime: z.date().transform(v => v.toISOString()).optional(),
    maxShipTime: z.date().transform(v => v.toISOString()).optional(),
    quantity: z.number().int().optional(),
    sku: z.string().optional(),
    title: z.string().optional(),
    totalPrice: z.string().optional(),
    variantTitle: z.string().optional(),
    weight: z.string().optional(),
    weightUnit: weightunitenum_js_1.WeightUnitEnum$outboundSchema.optional(),
    objectId: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        manufactureCountry: "manufacture_country",
        maxDeliveryTime: "max_delivery_time",
        maxShipTime: "max_ship_time",
        totalPrice: "total_price",
        variantTitle: "variant_title",
        weightUnit: "weight_unit",
        objectId: "object_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var LineItem$;
(function (LineItem$) {
    /** @deprecated use `LineItem$inboundSchema` instead. */
    LineItem$.inboundSchema = exports.LineItem$inboundSchema;
    /** @deprecated use `LineItem$outboundSchema` instead. */
    LineItem$.outboundSchema = exports.LineItem$outboundSchema;
})(LineItem$ || (exports.LineItem$ = LineItem$ = {}));
function lineItemToJSON(lineItem) {
    return JSON.stringify(exports.LineItem$outboundSchema.parse(lineItem));
}
exports.lineItemToJSON = lineItemToJSON;
function lineItemFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.LineItem$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'LineItem' from JSON`);
}
exports.lineItemFromJSON = lineItemFromJSON;
//# sourceMappingURL=lineitem.js.map