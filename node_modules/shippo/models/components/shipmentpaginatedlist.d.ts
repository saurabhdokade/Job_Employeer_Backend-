import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { Shipment, Shipment$Outbound } from "./shipment.js";
export type ShipmentPaginatedList = {
    next?: string | undefined;
    previous?: string | undefined;
    results?: Array<Shipment> | undefined;
};
/** @internal */
export declare const ShipmentPaginatedList$inboundSchema: z.ZodType<ShipmentPaginatedList, z.ZodTypeDef, unknown>;
/** @internal */
export type ShipmentPaginatedList$Outbound = {
    next?: string | undefined;
    previous?: string | undefined;
    results?: Array<Shipment$Outbound> | undefined;
};
/** @internal */
export declare const ShipmentPaginatedList$outboundSchema: z.ZodType<ShipmentPaginatedList$Outbound, z.ZodTypeDef, ShipmentPaginatedList>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ShipmentPaginatedList$ {
    /** @deprecated use `ShipmentPaginatedList$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ShipmentPaginatedList, z.ZodTypeDef, unknown>;
    /** @deprecated use `ShipmentPaginatedList$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ShipmentPaginatedList$Outbound, z.ZodTypeDef, ShipmentPaginatedList>;
    /** @deprecated use `ShipmentPaginatedList$Outbound` instead. */
    type Outbound = ShipmentPaginatedList$Outbound;
}
export declare function shipmentPaginatedListToJSON(shipmentPaginatedList: ShipmentPaginatedList): string;
export declare function shipmentPaginatedListFromJSON(jsonString: string): SafeParseResult<ShipmentPaginatedList, SDKValidationError>;
//# sourceMappingURL=shipmentpaginatedlist.d.ts.map