"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.serviceGroupUpdateRequestFromJSON = exports.serviceGroupUpdateRequestToJSON = exports.ServiceGroupUpdateRequest$ = exports.ServiceGroupUpdateRequest$outboundSchema = exports.ServiceGroupUpdateRequest$inboundSchema = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const schemas_js_1 = require("../../lib/schemas.js");
const servicegroupaccountandservicelevel_js_1 = require("./servicegroupaccountandservicelevel.js");
const servicegrouptypeenum_js_1 = require("./servicegrouptypeenum.js");
/** @internal */
exports.ServiceGroupUpdateRequest$inboundSchema = z.object({
    description: z.string(),
    flat_rate: z.string().optional(),
    flat_rate_currency: z.string().optional(),
    free_shipping_threshold_currency: z.string().optional(),
    free_shipping_threshold_min: z.string().optional(),
    name: z.string(),
    rate_adjustment: z.number().int().optional(),
    type: servicegrouptypeenum_js_1.ServiceGroupTypeEnum$inboundSchema,
    object_id: z.string(),
    is_active: z.boolean(),
    service_levels: z.array(servicegroupaccountandservicelevel_js_1.ServiceGroupAccountAndServiceLevel$inboundSchema),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "flat_rate": "flatRate",
        "flat_rate_currency": "flatRateCurrency",
        "free_shipping_threshold_currency": "freeShippingThresholdCurrency",
        "free_shipping_threshold_min": "freeShippingThresholdMin",
        "rate_adjustment": "rateAdjustment",
        "object_id": "objectId",
        "is_active": "isActive",
        "service_levels": "serviceLevels",
    });
});
/** @internal */
exports.ServiceGroupUpdateRequest$outboundSchema = z.object({
    description: z.string(),
    flatRate: z.string().optional(),
    flatRateCurrency: z.string().optional(),
    freeShippingThresholdCurrency: z.string().optional(),
    freeShippingThresholdMin: z.string().optional(),
    name: z.string(),
    rateAdjustment: z.number().int().optional(),
    type: servicegrouptypeenum_js_1.ServiceGroupTypeEnum$outboundSchema,
    objectId: z.string(),
    isActive: z.boolean(),
    serviceLevels: z.array(servicegroupaccountandservicelevel_js_1.ServiceGroupAccountAndServiceLevel$outboundSchema),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        flatRate: "flat_rate",
        flatRateCurrency: "flat_rate_currency",
        freeShippingThresholdCurrency: "free_shipping_threshold_currency",
        freeShippingThresholdMin: "free_shipping_threshold_min",
        rateAdjustment: "rate_adjustment",
        objectId: "object_id",
        isActive: "is_active",
        serviceLevels: "service_levels",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var ServiceGroupUpdateRequest$;
(function (ServiceGroupUpdateRequest$) {
    /** @deprecated use `ServiceGroupUpdateRequest$inboundSchema` instead. */
    ServiceGroupUpdateRequest$.inboundSchema = exports.ServiceGroupUpdateRequest$inboundSchema;
    /** @deprecated use `ServiceGroupUpdateRequest$outboundSchema` instead. */
    ServiceGroupUpdateRequest$.outboundSchema = exports.ServiceGroupUpdateRequest$outboundSchema;
})(ServiceGroupUpdateRequest$ || (exports.ServiceGroupUpdateRequest$ = ServiceGroupUpdateRequest$ = {}));
function serviceGroupUpdateRequestToJSON(serviceGroupUpdateRequest) {
    return JSON.stringify(exports.ServiceGroupUpdateRequest$outboundSchema.parse(serviceGroupUpdateRequest));
}
exports.serviceGroupUpdateRequestToJSON = serviceGroupUpdateRequestToJSON;
function serviceGroupUpdateRequestFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.ServiceGroupUpdateRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ServiceGroupUpdateRequest' from JSON`);
}
exports.serviceGroupUpdateRequestFromJSON = serviceGroupUpdateRequestFromJSON;
//# sourceMappingURL=servicegroupupdaterequest.js.map