import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { LiveRate, LiveRate$Outbound } from "./liverate.js";
export type LiveRatePaginatedList = {
    next?: string | undefined;
    previous?: string | undefined;
    count?: number | undefined;
    results?: Array<LiveRate> | undefined;
};
/** @internal */
export declare const LiveRatePaginatedList$inboundSchema: z.ZodType<LiveRatePaginatedList, z.ZodTypeDef, unknown>;
/** @internal */
export type LiveRatePaginatedList$Outbound = {
    next?: string | undefined;
    previous?: string | undefined;
    count?: number | undefined;
    results?: Array<LiveRate$Outbound> | undefined;
};
/** @internal */
export declare const LiveRatePaginatedList$outboundSchema: z.ZodType<LiveRatePaginatedList$Outbound, z.ZodTypeDef, LiveRatePaginatedList>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace LiveRatePaginatedList$ {
    /** @deprecated use `LiveRatePaginatedList$inboundSchema` instead. */
    const inboundSchema: z.ZodType<LiveRatePaginatedList, z.ZodTypeDef, unknown>;
    /** @deprecated use `LiveRatePaginatedList$outboundSchema` instead. */
    const outboundSchema: z.ZodType<LiveRatePaginatedList$Outbound, z.ZodTypeDef, LiveRatePaginatedList>;
    /** @deprecated use `LiveRatePaginatedList$Outbound` instead. */
    type Outbound = LiveRatePaginatedList$Outbound;
}
export declare function liveRatePaginatedListToJSON(liveRatePaginatedList: LiveRatePaginatedList): string;
export declare function liveRatePaginatedListFromJSON(jsonString: string): SafeParseResult<LiveRatePaginatedList, SDKValidationError>;
//# sourceMappingURL=liveratepaginatedlist.d.ts.map