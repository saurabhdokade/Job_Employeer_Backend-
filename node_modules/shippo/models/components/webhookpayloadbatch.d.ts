import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { WebhookEventTypeEnum } from "./webhookeventtypeenum.js";
/**
 * Content of the webhook posted to the external URL
 */
export type WebhookPayloadBatch = {
    /**
     * Type of event that triggered the webhook.
     */
    event?: WebhookEventTypeEnum | undefined;
    /**
     * Determines whether the webhook is a test webhook or not.
     */
    test?: boolean | undefined;
    /**
     * A string containing the batch object ID, of the form 'batch {batchId} (created|processing complete)'.
     */
    data?: string | undefined;
};
/** @internal */
export declare const WebhookPayloadBatch$inboundSchema: z.ZodType<WebhookPayloadBatch, z.ZodTypeDef, unknown>;
/** @internal */
export type WebhookPayloadBatch$Outbound = {
    event?: string | undefined;
    test?: boolean | undefined;
    data?: string | undefined;
};
/** @internal */
export declare const WebhookPayloadBatch$outboundSchema: z.ZodType<WebhookPayloadBatch$Outbound, z.ZodTypeDef, WebhookPayloadBatch>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace WebhookPayloadBatch$ {
    /** @deprecated use `WebhookPayloadBatch$inboundSchema` instead. */
    const inboundSchema: z.ZodType<WebhookPayloadBatch, z.ZodTypeDef, unknown>;
    /** @deprecated use `WebhookPayloadBatch$outboundSchema` instead. */
    const outboundSchema: z.ZodType<WebhookPayloadBatch$Outbound, z.ZodTypeDef, WebhookPayloadBatch>;
    /** @deprecated use `WebhookPayloadBatch$Outbound` instead. */
    type Outbound = WebhookPayloadBatch$Outbound;
}
export declare function webhookPayloadBatchToJSON(webhookPayloadBatch: WebhookPayloadBatch): string;
export declare function webhookPayloadBatchFromJSON(jsonString: string): SafeParseResult<WebhookPayloadBatch, SDKValidationError>;
//# sourceMappingURL=webhookpayloadbatch.d.ts.map