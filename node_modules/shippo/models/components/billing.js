"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.billingFromJSON = exports.billingToJSON = exports.Billing$ = exports.Billing$outboundSchema = exports.Billing$inboundSchema = exports.Type$ = exports.Type$outboundSchema = exports.Type$inboundSchema = exports.Type = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const schemas_js_1 = require("../../lib/schemas.js");
/**
 * Party to be billed. (Leave blank for DHL Germany.)
 */
exports.Type = {
    Sender: "SENDER",
    Recipient: "RECIPIENT",
    ThirdParty: "THIRD_PARTY",
    ThirdPartyConsignee: "THIRD_PARTY_CONSIGNEE",
    Collect: "COLLECT",
};
/** @internal */
exports.Type$inboundSchema = z.nativeEnum(exports.Type);
/** @internal */
exports.Type$outboundSchema = exports.Type$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var Type$;
(function (Type$) {
    /** @deprecated use `Type$inboundSchema` instead. */
    Type$.inboundSchema = exports.Type$inboundSchema;
    /** @deprecated use `Type$outboundSchema` instead. */
    Type$.outboundSchema = exports.Type$outboundSchema;
})(Type$ || (exports.Type$ = Type$ = {}));
/** @internal */
exports.Billing$inboundSchema = z.object({
    account: z.string().optional(),
    country: z.string().optional(),
    participation_code: z.string().optional(),
    type: exports.Type$inboundSchema.optional(),
    zip: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "participation_code": "participationCode",
    });
});
/** @internal */
exports.Billing$outboundSchema = z.object({
    account: z.string().optional(),
    country: z.string().optional(),
    participationCode: z.string().optional(),
    type: exports.Type$outboundSchema.optional(),
    zip: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        participationCode: "participation_code",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var Billing$;
(function (Billing$) {
    /** @deprecated use `Billing$inboundSchema` instead. */
    Billing$.inboundSchema = exports.Billing$inboundSchema;
    /** @deprecated use `Billing$outboundSchema` instead. */
    Billing$.outboundSchema = exports.Billing$outboundSchema;
})(Billing$ || (exports.Billing$ = Billing$ = {}));
function billingToJSON(billing) {
    return JSON.stringify(exports.Billing$outboundSchema.parse(billing));
}
exports.billingToJSON = billingToJSON;
function billingFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.Billing$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'Billing' from JSON`);
}
exports.billingFromJSON = billingFromJSON;
//# sourceMappingURL=billing.js.map