import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { CustomsDeclaration, CustomsDeclaration$Outbound } from "./customsdeclaration.js";
export type CustomsDeclarationPaginatedList = {
    next?: string | undefined;
    previous?: string | undefined;
    results?: Array<CustomsDeclaration> | undefined;
};
/** @internal */
export declare const CustomsDeclarationPaginatedList$inboundSchema: z.ZodType<CustomsDeclarationPaginatedList, z.ZodTypeDef, unknown>;
/** @internal */
export type CustomsDeclarationPaginatedList$Outbound = {
    next?: string | undefined;
    previous?: string | undefined;
    results?: Array<CustomsDeclaration$Outbound> | undefined;
};
/** @internal */
export declare const CustomsDeclarationPaginatedList$outboundSchema: z.ZodType<CustomsDeclarationPaginatedList$Outbound, z.ZodTypeDef, CustomsDeclarationPaginatedList>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CustomsDeclarationPaginatedList$ {
    /** @deprecated use `CustomsDeclarationPaginatedList$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CustomsDeclarationPaginatedList, z.ZodTypeDef, unknown>;
    /** @deprecated use `CustomsDeclarationPaginatedList$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CustomsDeclarationPaginatedList$Outbound, z.ZodTypeDef, CustomsDeclarationPaginatedList>;
    /** @deprecated use `CustomsDeclarationPaginatedList$Outbound` instead. */
    type Outbound = CustomsDeclarationPaginatedList$Outbound;
}
export declare function customsDeclarationPaginatedListToJSON(customsDeclarationPaginatedList: CustomsDeclarationPaginatedList): string;
export declare function customsDeclarationPaginatedListFromJSON(jsonString: string): SafeParseResult<CustomsDeclarationPaginatedList, SDKValidationError>;
//# sourceMappingURL=customsdeclarationpaginatedlist.d.ts.map