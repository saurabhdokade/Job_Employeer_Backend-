"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AddressValidationResultsMessageCodeEnum$ = exports.AddressValidationResultsMessageCodeEnum$outboundSchema = exports.AddressValidationResultsMessageCodeEnum$inboundSchema = exports.AddressValidationResultsMessageCodeEnum = void 0;
const z = __importStar(require("zod"));
exports.AddressValidationResultsMessageCodeEnum = {
    VerificationError: "verification_error",
    UnknownStreetLower: "unknown_street",
    ComponentMismatchError: "component_mismatch_error",
    MultipleMatch: "multiple_match",
    SubPremiseNumberInvalid: "sub_premise_number_invalid",
    SubPremiseNumberMissing: "sub_premise_number_missing",
    PremiseNumberInvalid: "premise_number_invalid",
    PremiseNumberMissing: "premise_number_missing",
    BoxNumberInvalid: "box_number_invalid",
    BoxNumberMissing: "box_number_missing",
    PmbNumberMissing: "pmb_number_missing",
    PostalCodeChange: "postal_code_change",
    AdministrativeAreaChange: "administrative_area_change",
    LocalityChange: "locality_change",
    DependentLocalityChange: "dependent_locality_change",
    StreetNameChange: "street_name_change",
    StreetTypeChange: "street_type_change",
    StreetDirectionalChange: "street_directional_change",
    SubPremiseTypeChange: "sub_premise_type_change",
    SubPremiseNumberChange: "sub_premise_number_change",
    DoubleDependentLocalityChange: "double_dependent_locality_change",
    SubadministrativeAreaChange: "subadministrative_area_change",
    SubnationalAreaChange: "subnational_area_change",
    PoBoxChange: "po_box_change",
    PremiseTypeChange: "premise_type_change",
    HouseNumberChange: "house_number_change",
    OrganizationChange: "organization_change",
    ExtraneousInformation: "extraneous_information",
    UspsDoorInaccessible: "usps_door_inaccessible",
    AdministrativeAreaPartial: "administrative_area_partial",
    CityPartial: "city_partial",
    StreetPartial: "street_partial",
    BuildingPartial: "building_partial",
    SubpremisePartial: "subpremise_partial",
    AdministrativeAreaFull: "administrative_area_full",
    CityFull: "city_full",
    ThoroughfareFull: "thoroughfare_full",
    PremisesFull: "premises_full",
    SubpremiseFull: "subpremise_full",
    GeocodedStreet: "geocoded_street",
    GeocodedNeighborhood: "geocoded_neighborhood",
    GeocodedCommunity: "geocoded_community",
    GeocodedState: "geocoded_state",
    GeocodedRooftop: "geocoded_rooftop",
    GeocodedInterpolatedRooftop: "geocoded_interpolated_rooftop",
    InvalidPostalCode: "invalid_postal_code",
    PostalCodeNotFound: "postal_code_not_found",
    EmptyRequest: "empty_request",
    ServiceError: "service_error",
    StreetDetailMissing: "street_detail_missing",
    InvalidCityStateZip: "Invalid City/State/Zip",
    DefaultMatch: "Default Match",
    UnknownStreetMixed: "Unknown Street",
    AddressNotFound: "Address Not Found",
    NonDeliverableZip4: "Non-Deliverable ZIP4",
    MultipleResponses: "Multiple Responses",
    InvalidDualAddress: "Invalid Dual Address",
    InvalidState: "Invalid State",
    InvalidCity: "Invalid City",
    AmbiguousAddress: "Ambiguous Address",
};
/** @internal */
exports.AddressValidationResultsMessageCodeEnum$inboundSchema = z
    .nativeEnum(exports.AddressValidationResultsMessageCodeEnum);
/** @internal */
exports.AddressValidationResultsMessageCodeEnum$outboundSchema = exports.AddressValidationResultsMessageCodeEnum$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var AddressValidationResultsMessageCodeEnum$;
(function (AddressValidationResultsMessageCodeEnum$) {
    /** @deprecated use `AddressValidationResultsMessageCodeEnum$inboundSchema` instead. */
    AddressValidationResultsMessageCodeEnum$.inboundSchema = exports.AddressValidationResultsMessageCodeEnum$inboundSchema;
    /** @deprecated use `AddressValidationResultsMessageCodeEnum$outboundSchema` instead. */
    AddressValidationResultsMessageCodeEnum$.outboundSchema = exports.AddressValidationResultsMessageCodeEnum$outboundSchema;
})(AddressValidationResultsMessageCodeEnum$ || (exports.AddressValidationResultsMessageCodeEnum$ = AddressValidationResultsMessageCodeEnum$ = {}));
//# sourceMappingURL=addressvalidationresultsmessagecodeenum.js.map