import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
/**
 * Container for specifying the presence of biological material.
 */
export type DangerousGoodsBiologicalMaterial = {
    /**
     * Indicates if the shipment contains biological material.
     */
    contains?: boolean | undefined;
};
/** @internal */
export declare const DangerousGoodsBiologicalMaterial$inboundSchema: z.ZodType<DangerousGoodsBiologicalMaterial, z.ZodTypeDef, unknown>;
/** @internal */
export type DangerousGoodsBiologicalMaterial$Outbound = {
    contains?: boolean | undefined;
};
/** @internal */
export declare const DangerousGoodsBiologicalMaterial$outboundSchema: z.ZodType<DangerousGoodsBiologicalMaterial$Outbound, z.ZodTypeDef, DangerousGoodsBiologicalMaterial>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace DangerousGoodsBiologicalMaterial$ {
    /** @deprecated use `DangerousGoodsBiologicalMaterial$inboundSchema` instead. */
    const inboundSchema: z.ZodType<DangerousGoodsBiologicalMaterial, z.ZodTypeDef, unknown>;
    /** @deprecated use `DangerousGoodsBiologicalMaterial$outboundSchema` instead. */
    const outboundSchema: z.ZodType<DangerousGoodsBiologicalMaterial$Outbound, z.ZodTypeDef, DangerousGoodsBiologicalMaterial>;
    /** @deprecated use `DangerousGoodsBiologicalMaterial$Outbound` instead. */
    type Outbound = DangerousGoodsBiologicalMaterial$Outbound;
}
export declare function dangerousGoodsBiologicalMaterialToJSON(dangerousGoodsBiologicalMaterial: DangerousGoodsBiologicalMaterial): string;
export declare function dangerousGoodsBiologicalMaterialFromJSON(jsonString: string): SafeParseResult<DangerousGoodsBiologicalMaterial, SDKValidationError>;
//# sourceMappingURL=dangerousgoodsbiologicalmaterial.d.ts.map