import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
/**
 * Indicates how the carrier should proceed in case the shipment can't be delivered.
 *
 * @remarks
 * Allowed values available <a href="#tag/Customs-Declaration-Non-Delivery-Option">here</a>
 */
export declare const CustomsDeclarationNonDeliveryOptionEnum: {
    readonly Abandon: "ABANDON";
    readonly Return: "RETURN";
};
/**
 * Indicates how the carrier should proceed in case the shipment can't be delivered.
 *
 * @remarks
 * Allowed values available <a href="#tag/Customs-Declaration-Non-Delivery-Option">here</a>
 */
export type CustomsDeclarationNonDeliveryOptionEnum = ClosedEnum<typeof CustomsDeclarationNonDeliveryOptionEnum>;
/** @internal */
export declare const CustomsDeclarationNonDeliveryOptionEnum$inboundSchema: z.ZodNativeEnum<typeof CustomsDeclarationNonDeliveryOptionEnum>;
/** @internal */
export declare const CustomsDeclarationNonDeliveryOptionEnum$outboundSchema: z.ZodNativeEnum<typeof CustomsDeclarationNonDeliveryOptionEnum>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CustomsDeclarationNonDeliveryOptionEnum$ {
    /** @deprecated use `CustomsDeclarationNonDeliveryOptionEnum$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Abandon: "ABANDON";
        readonly Return: "RETURN";
    }>;
    /** @deprecated use `CustomsDeclarationNonDeliveryOptionEnum$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Abandon: "ABANDON";
        readonly Return: "RETURN";
    }>;
}
//# sourceMappingURL=customsdeclarationnondeliveryoptionenum.d.ts.map