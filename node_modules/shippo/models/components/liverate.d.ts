import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type LiveRate = {
    /**
     * Final Rate price, expressed in the currency used in the sender's country.
     */
    amount?: string | undefined;
    /**
     * Final Rate price, expressed in the currency used in the recipient's country.
     */
    amountLocal?: string | undefined;
    /**
     * Currency used in the sender's country, refers to `amount`.
     *
     * @remarks
     * The <a href="http://www.xe.com/iso4217.php">official ISO 4217</a> currency codes are used, e.g. `USD` or `EUR`.
     */
    currency?: string | undefined;
    /**
     * Currency used in the recipient's country, refers to `amount_local`.
     *
     * @remarks
     * The <a href="http://www.xe.com/iso4217.php">official ISO 4217</a> currency codes are used, e.g. `USD` or "EUR".
     */
    currencyLocal?: string | undefined;
    /**
     * The estimated days in transit of the rate that powers the shipping option, if available.
     */
    estimatedDays?: number | undefined;
    /**
     * The name of the service group being returned
     */
    title?: string | undefined;
};
/** @internal */
export declare const LiveRate$inboundSchema: z.ZodType<LiveRate, z.ZodTypeDef, unknown>;
/** @internal */
export type LiveRate$Outbound = {
    amount?: string | undefined;
    amount_local?: string | undefined;
    currency?: string | undefined;
    currency_local?: string | undefined;
    estimated_days?: number | undefined;
    title?: string | undefined;
};
/** @internal */
export declare const LiveRate$outboundSchema: z.ZodType<LiveRate$Outbound, z.ZodTypeDef, LiveRate>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace LiveRate$ {
    /** @deprecated use `LiveRate$inboundSchema` instead. */
    const inboundSchema: z.ZodType<LiveRate, z.ZodTypeDef, unknown>;
    /** @deprecated use `LiveRate$outboundSchema` instead. */
    const outboundSchema: z.ZodType<LiveRate$Outbound, z.ZodTypeDef, LiveRate>;
    /** @deprecated use `LiveRate$Outbound` instead. */
    type Outbound = LiveRate$Outbound;
}
export declare function liveRateToJSON(liveRate: LiveRate): string;
export declare function liveRateFromJSON(jsonString: string): SafeParseResult<LiveRate, SDKValidationError>;
//# sourceMappingURL=liverate.d.ts.map