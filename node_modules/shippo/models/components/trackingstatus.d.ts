import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { TrackingStatusEnum } from "./trackingstatusenum.js";
import { TrackingStatusLocationBase, TrackingStatusLocationBase$Outbound } from "./trackingstatuslocationbase.js";
import { TrackingStatusSubstatus, TrackingStatusSubstatus$Outbound } from "./trackingstatussubstatus.js";
/**
 * The latest tracking information of this shipment.
 */
export type TrackingStatus = {
    /**
     * An object containing zip, city, state and country information of the tracking event.
     */
    location?: TrackingStatusLocationBase | undefined;
    objectCreated: Date;
    objectId: string;
    objectUpdated: Date;
    /**
     * Indicates the high level status of the shipment.
     */
    status: TrackingStatusEnum;
    /**
     * A finer-grained classification of the tracking event.
     */
    substatus?: TrackingStatusSubstatus | undefined;
    /**
     * Date and time when the carrier scanned this tracking event. This is displayed in UTC.
     */
    statusDate?: Date | undefined;
    /**
     * The human-readable description of the status.
     */
    statusDetails: string;
};
/** @internal */
export declare const TrackingStatus$inboundSchema: z.ZodType<TrackingStatus, z.ZodTypeDef, unknown>;
/** @internal */
export type TrackingStatus$Outbound = {
    location?: TrackingStatusLocationBase$Outbound | undefined;
    object_created: string;
    object_id: string;
    object_updated: string;
    status: string;
    substatus?: TrackingStatusSubstatus$Outbound | undefined;
    status_date?: string | undefined;
    status_details: string;
};
/** @internal */
export declare const TrackingStatus$outboundSchema: z.ZodType<TrackingStatus$Outbound, z.ZodTypeDef, TrackingStatus>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace TrackingStatus$ {
    /** @deprecated use `TrackingStatus$inboundSchema` instead. */
    const inboundSchema: z.ZodType<TrackingStatus, z.ZodTypeDef, unknown>;
    /** @deprecated use `TrackingStatus$outboundSchema` instead. */
    const outboundSchema: z.ZodType<TrackingStatus$Outbound, z.ZodTypeDef, TrackingStatus>;
    /** @deprecated use `TrackingStatus$Outbound` instead. */
    type Outbound = TrackingStatus$Outbound;
}
export declare function trackingStatusToJSON(trackingStatus: TrackingStatus): string;
export declare function trackingStatusFromJSON(jsonString: string): SafeParseResult<TrackingStatus, SDKValidationError>;
//# sourceMappingURL=trackingstatus.d.ts.map