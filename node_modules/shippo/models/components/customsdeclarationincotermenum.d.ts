import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
/**
 * The incoterm reference of the shipment. FCA is available for DHL Express and FedEx only.
 *
 * @remarks
 * eDAP is available for DPD UK only. DAP is available for DHL Express and DPD UK.
 * If expecting DAP for other carriers, please use DDU.
 * Allowed values available <a href="#tag/Customs-Declaration-Incoterm">here</a>
 */
export declare const CustomsDeclarationIncotermEnum: {
    readonly Ddp: "DDP";
    readonly Ddu: "DDU";
    readonly Fca: "FCA";
    readonly Dap: "DAP";
    readonly EDAP: "eDAP";
};
/**
 * The incoterm reference of the shipment. FCA is available for DHL Express and FedEx only.
 *
 * @remarks
 * eDAP is available for DPD UK only. DAP is available for DHL Express and DPD UK.
 * If expecting DAP for other carriers, please use DDU.
 * Allowed values available <a href="#tag/Customs-Declaration-Incoterm">here</a>
 */
export type CustomsDeclarationIncotermEnum = ClosedEnum<typeof CustomsDeclarationIncotermEnum>;
/** @internal */
export declare const CustomsDeclarationIncotermEnum$inboundSchema: z.ZodNativeEnum<typeof CustomsDeclarationIncotermEnum>;
/** @internal */
export declare const CustomsDeclarationIncotermEnum$outboundSchema: z.ZodNativeEnum<typeof CustomsDeclarationIncotermEnum>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CustomsDeclarationIncotermEnum$ {
    /** @deprecated use `CustomsDeclarationIncotermEnum$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Ddp: "DDP";
        readonly Ddu: "DDU";
        readonly Fca: "FCA";
        readonly Dap: "DAP";
        readonly EDAP: "eDAP";
    }>;
    /** @deprecated use `CustomsDeclarationIncotermEnum$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Ddp: "DDP";
        readonly Ddu: "DDU";
        readonly Fca: "FCA";
        readonly Dap: "DAP";
        readonly EDAP: "eDAP";
    }>;
}
//# sourceMappingURL=customsdeclarationincotermenum.d.ts.map