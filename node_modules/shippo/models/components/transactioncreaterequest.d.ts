import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { LabelFileTypeEnum } from "./labelfiletypeenum.js";
export type TransactionCreateRequest = {
    async?: boolean | undefined;
    /**
     * Print format of the <a href="https://docs.goshippo.com/docs/shipments/shippinglabelsizes/">label</a>. If empty, will use the default format set from
     *
     * @remarks
     * <a href="https://apps.goshippo.com/settings/labels">the Shippo dashboard.</a>
     */
    labelFileType?: LabelFileTypeEnum | undefined;
    metadata?: string | undefined;
    rate: string;
    order?: string | undefined;
};
/** @internal */
export declare const TransactionCreateRequest$inboundSchema: z.ZodType<TransactionCreateRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type TransactionCreateRequest$Outbound = {
    async: boolean;
    label_file_type?: string | undefined;
    metadata?: string | undefined;
    rate: string;
    order?: string | undefined;
};
/** @internal */
export declare const TransactionCreateRequest$outboundSchema: z.ZodType<TransactionCreateRequest$Outbound, z.ZodTypeDef, TransactionCreateRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace TransactionCreateRequest$ {
    /** @deprecated use `TransactionCreateRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<TransactionCreateRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `TransactionCreateRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<TransactionCreateRequest$Outbound, z.ZodTypeDef, TransactionCreateRequest>;
    /** @deprecated use `TransactionCreateRequest$Outbound` instead. */
    type Outbound = TransactionCreateRequest$Outbound;
}
export declare function transactionCreateRequestToJSON(transactionCreateRequest: TransactionCreateRequest): string;
export declare function transactionCreateRequestFromJSON(jsonString: string): SafeParseResult<TransactionCreateRequest, SDKValidationError>;
//# sourceMappingURL=transactioncreaterequest.d.ts.map