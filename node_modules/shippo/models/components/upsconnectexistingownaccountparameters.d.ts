import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
/**
 * An array of additional parameters for the account, such as e.g. password or token.
 *
 * @remarks
 * Please check the <a href="https://docs.goshippo.com/docs/carriers/carrieraccounts/">carrier accounts tutorial</a> page for the parameters per carrier.<br>
 * To protect account information, this field will be masked in any API response.
 */
export type UPSConnectExistingOwnAccountParameters = {
    /**
     * The UPS account number
     */
    accountNumber: string;
    /**
     * Only required if has_invoice is true. Country associated with the account that issued the invoice
     */
    aiaCountryIso2?: string | undefined;
    billingAddressCity: string;
    billingAddressCountryIso2: string;
    billingAddressState: string;
    billingAddressStreet1: string;
    /**
     * Empty string acceptable for billing_address_street2
     */
    billingAddressStreet2?: string | undefined;
    billingAddressZip: string;
    collecCountryIso2: string;
    /**
     * Zip code of the collection/pickup address
     */
    collecZip: string;
    /**
     * Company name. Full name is acceptable in this field if the user has no company name
     */
    company: string;
    /**
     * Only required if has_invoice is true. 3-letter currency code associated with invoice_value
     */
    currencyCode?: string | undefined;
    email: string;
    fullName: string;
    /**
     * true if user has been issued a UPS invoice within the past 90 days for the US or Canada; and 45 days for any other countries. User can use data from any of the last 3 invoices
     */
    hasInvoice: boolean;
    /**
     * Only required if aia_country_iso2 is US and has_invoice is true.
     */
    invoiceControlid?: string | undefined;
    /**
     * Only required if has_invoice is true. Date the invoice was issued. yyyymmdd format
     */
    invoiceDate?: string | undefined;
    invoiceNumber?: string | undefined;
    /**
     * Only required if has_invoice is true. Max 16 digits before decimal and 2 digits after decimal
     */
    invoiceValue?: string | undefined;
    phone: string;
    /**
     * User's title, e.g. including but not limited to Manager, Doctor, Artist, Engineer, Mr, Ms, Mrs, Mx
     */
    title: string;
    /**
     * Whether the user agrees to the UPS terms and conditions or not. Error 400 will be returned if passed in as false
     */
    upsAgreements: boolean;
};
/** @internal */
export declare const UPSConnectExistingOwnAccountParameters$inboundSchema: z.ZodType<UPSConnectExistingOwnAccountParameters, z.ZodTypeDef, unknown>;
/** @internal */
export type UPSConnectExistingOwnAccountParameters$Outbound = {
    account_number: string;
    aia_country_iso2?: string | undefined;
    billing_address_city: string;
    billing_address_country_iso2: string;
    billing_address_state: string;
    billing_address_street1: string;
    billing_address_street2?: string | undefined;
    billing_address_zip: string;
    collec_country_iso2: string;
    collec_zip: string;
    company: string;
    currency_code?: string | undefined;
    email: string;
    full_name: string;
    has_invoice: boolean;
    invoice_controlid?: string | undefined;
    invoice_date?: string | undefined;
    invoice_number?: string | undefined;
    invoice_value?: string | undefined;
    phone: string;
    title: string;
    ups_agreements: boolean;
};
/** @internal */
export declare const UPSConnectExistingOwnAccountParameters$outboundSchema: z.ZodType<UPSConnectExistingOwnAccountParameters$Outbound, z.ZodTypeDef, UPSConnectExistingOwnAccountParameters>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UPSConnectExistingOwnAccountParameters$ {
    /** @deprecated use `UPSConnectExistingOwnAccountParameters$inboundSchema` instead. */
    const inboundSchema: z.ZodType<UPSConnectExistingOwnAccountParameters, z.ZodTypeDef, unknown>;
    /** @deprecated use `UPSConnectExistingOwnAccountParameters$outboundSchema` instead. */
    const outboundSchema: z.ZodType<UPSConnectExistingOwnAccountParameters$Outbound, z.ZodTypeDef, UPSConnectExistingOwnAccountParameters>;
    /** @deprecated use `UPSConnectExistingOwnAccountParameters$Outbound` instead. */
    type Outbound = UPSConnectExistingOwnAccountParameters$Outbound;
}
export declare function upsConnectExistingOwnAccountParametersToJSON(upsConnectExistingOwnAccountParameters: UPSConnectExistingOwnAccountParameters): string;
export declare function upsConnectExistingOwnAccountParametersFromJSON(jsonString: string): SafeParseResult<UPSConnectExistingOwnAccountParameters, SDKValidationError>;
//# sourceMappingURL=upsconnectexistingownaccountparameters.d.ts.map