import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type ShippoAccountUpdateRequest = {
    email: string;
    firstName: string;
    lastName: string;
    companyName: string;
};
/** @internal */
export declare const ShippoAccountUpdateRequest$inboundSchema: z.ZodType<ShippoAccountUpdateRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type ShippoAccountUpdateRequest$Outbound = {
    email: string;
    first_name: string;
    last_name: string;
    company_name: string;
};
/** @internal */
export declare const ShippoAccountUpdateRequest$outboundSchema: z.ZodType<ShippoAccountUpdateRequest$Outbound, z.ZodTypeDef, ShippoAccountUpdateRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ShippoAccountUpdateRequest$ {
    /** @deprecated use `ShippoAccountUpdateRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ShippoAccountUpdateRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `ShippoAccountUpdateRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ShippoAccountUpdateRequest$Outbound, z.ZodTypeDef, ShippoAccountUpdateRequest>;
    /** @deprecated use `ShippoAccountUpdateRequest$Outbound` instead. */
    type Outbound = ShippoAccountUpdateRequest$Outbound;
}
export declare function shippoAccountUpdateRequestToJSON(shippoAccountUpdateRequest: ShippoAccountUpdateRequest): string;
export declare function shippoAccountUpdateRequestFromJSON(jsonString: string): SafeParseResult<ShippoAccountUpdateRequest, SDKValidationError>;
//# sourceMappingURL=shippoaccountupdaterequest.d.ts.map