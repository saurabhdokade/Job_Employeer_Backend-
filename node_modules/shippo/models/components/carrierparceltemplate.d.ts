import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { DistanceUnitEnum } from "./distanceunitenum.js";
export type CarrierParcelTemplate = {
    /**
     * The name of the carrier that provides this parcel template
     */
    carrier?: string | undefined;
    /**
     * The measure unit used for length, width and height.
     */
    distanceUnit?: DistanceUnitEnum | undefined;
    /**
     * The height of the package, in units specified by the distance_unit attribute
     */
    height?: string | undefined;
    /**
     * True if the carrier parcel template allows custom dimensions, such as USPS Softpack.
     */
    isVariableDimensions?: boolean | undefined;
    /**
     * The length of the package, in units specified by the distance_unit attribute
     */
    length?: string | undefined;
    /**
     * The name of the carrier parcel template
     */
    name?: string | undefined;
    /**
     * The unique string representation of the carrier parcel template
     */
    token?: string | undefined;
    /**
     * The width of the package, in units specified by the distance_unit attribute
     */
    width?: string | undefined;
};
/** @internal */
export declare const CarrierParcelTemplate$inboundSchema: z.ZodType<CarrierParcelTemplate, z.ZodTypeDef, unknown>;
/** @internal */
export type CarrierParcelTemplate$Outbound = {
    carrier?: string | undefined;
    distance_unit?: string | undefined;
    height?: string | undefined;
    is_variable_dimensions?: boolean | undefined;
    length?: string | undefined;
    name?: string | undefined;
    token?: string | undefined;
    width?: string | undefined;
};
/** @internal */
export declare const CarrierParcelTemplate$outboundSchema: z.ZodType<CarrierParcelTemplate$Outbound, z.ZodTypeDef, CarrierParcelTemplate>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CarrierParcelTemplate$ {
    /** @deprecated use `CarrierParcelTemplate$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CarrierParcelTemplate, z.ZodTypeDef, unknown>;
    /** @deprecated use `CarrierParcelTemplate$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CarrierParcelTemplate$Outbound, z.ZodTypeDef, CarrierParcelTemplate>;
    /** @deprecated use `CarrierParcelTemplate$Outbound` instead. */
    type Outbound = CarrierParcelTemplate$Outbound;
}
export declare function carrierParcelTemplateToJSON(carrierParcelTemplate: CarrierParcelTemplate): string;
export declare function carrierParcelTemplateFromJSON(jsonString: string): SafeParseResult<CarrierParcelTemplate, SDKValidationError>;
//# sourceMappingURL=carrierparceltemplate.d.ts.map