import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { FedExConnectExistingOwnAccountParameters, FedExConnectExistingOwnAccountParameters$Outbound } from "./fedexconnectexistingownaccountparameters.js";
import { UPSConnectExistingOwnAccountParameters, UPSConnectExistingOwnAccountParameters$Outbound } from "./upsconnectexistingownaccountparameters.js";
export type CarrierAccountBaseParameters = FedExConnectExistingOwnAccountParameters | UPSConnectExistingOwnAccountParameters | {
    [k: string]: any;
};
export type CarrierAccountBase = {
    /**
     * Unique identifier of the account. Please check the <a href="https://docs.goshippo.com/docs/carriers/carrieraccounts/">carrier accounts tutorial</a>
     *
     * @remarks
     * page for the `account_id` per carrier.<br>
     * To protect account information, this field will be masked in any API response.
     */
    accountId: string;
    /**
     * Determines whether the account is active. When creating a shipment, if no `carrier_accounts` are explicitly
     *
     * @remarks
     * passed Shippo will query all carrier accounts that have this field set. By default, this is set to True.
     */
    active?: boolean | undefined;
    /**
     * Carrier token, see <a href="#tag/Carriers">Carriers</a><br>
     *
     * @remarks
     * Please check the <a href="https://docs.goshippo.com/docs/carriers/carrieraccounts/">carrier accounts tutorial</a> page for all supported carriers.
     */
    carrier: string;
    parameters?: FedExConnectExistingOwnAccountParameters | UPSConnectExistingOwnAccountParameters | {
        [k: string]: any;
    } | undefined;
};
/** @internal */
export declare const CarrierAccountBaseParameters$inboundSchema: z.ZodType<CarrierAccountBaseParameters, z.ZodTypeDef, unknown>;
/** @internal */
export type CarrierAccountBaseParameters$Outbound = FedExConnectExistingOwnAccountParameters$Outbound | UPSConnectExistingOwnAccountParameters$Outbound | {
    [k: string]: any;
};
/** @internal */
export declare const CarrierAccountBaseParameters$outboundSchema: z.ZodType<CarrierAccountBaseParameters$Outbound, z.ZodTypeDef, CarrierAccountBaseParameters>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CarrierAccountBaseParameters$ {
    /** @deprecated use `CarrierAccountBaseParameters$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CarrierAccountBaseParameters, z.ZodTypeDef, unknown>;
    /** @deprecated use `CarrierAccountBaseParameters$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CarrierAccountBaseParameters$Outbound, z.ZodTypeDef, CarrierAccountBaseParameters>;
    /** @deprecated use `CarrierAccountBaseParameters$Outbound` instead. */
    type Outbound = CarrierAccountBaseParameters$Outbound;
}
export declare function carrierAccountBaseParametersToJSON(carrierAccountBaseParameters: CarrierAccountBaseParameters): string;
export declare function carrierAccountBaseParametersFromJSON(jsonString: string): SafeParseResult<CarrierAccountBaseParameters, SDKValidationError>;
/** @internal */
export declare const CarrierAccountBase$inboundSchema: z.ZodType<CarrierAccountBase, z.ZodTypeDef, unknown>;
/** @internal */
export type CarrierAccountBase$Outbound = {
    account_id: string;
    active?: boolean | undefined;
    carrier: string;
    parameters?: FedExConnectExistingOwnAccountParameters$Outbound | UPSConnectExistingOwnAccountParameters$Outbound | {
        [k: string]: any;
    } | undefined;
};
/** @internal */
export declare const CarrierAccountBase$outboundSchema: z.ZodType<CarrierAccountBase$Outbound, z.ZodTypeDef, CarrierAccountBase>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CarrierAccountBase$ {
    /** @deprecated use `CarrierAccountBase$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CarrierAccountBase, z.ZodTypeDef, unknown>;
    /** @deprecated use `CarrierAccountBase$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CarrierAccountBase$Outbound, z.ZodTypeDef, CarrierAccountBase>;
    /** @deprecated use `CarrierAccountBase$Outbound` instead. */
    type Outbound = CarrierAccountBase$Outbound;
}
export declare function carrierAccountBaseToJSON(carrierAccountBase: CarrierAccountBase): string;
export declare function carrierAccountBaseFromJSON(jsonString: string): SafeParseResult<CarrierAccountBase, SDKValidationError>;
//# sourceMappingURL=carrieraccountbase.d.ts.map