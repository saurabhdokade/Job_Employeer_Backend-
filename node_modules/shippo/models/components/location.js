"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.locationFromJSON = exports.locationToJSON = exports.Location$ = exports.Location$outboundSchema = exports.Location$inboundSchema = exports.BuildingType$ = exports.BuildingType$outboundSchema = exports.BuildingType$inboundSchema = exports.BuildingLocationType$ = exports.BuildingLocationType$outboundSchema = exports.BuildingLocationType$inboundSchema = exports.BuildingType = exports.BuildingLocationType = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const schemas_js_1 = require("../../lib/schemas.js");
const addresscompletecreaterequest_js_1 = require("./addresscompletecreaterequest.js");
/**
 * Where your parcels will be available for pickup. "Security Deck" and "Shipping Dock" are only
 *
 * @remarks
 * supported for DHL Express.
 */
exports.BuildingLocationType = {
    BackDoor: "Back Door",
    RingBell: "Ring Bell",
    SecurityDeck: "Security Deck",
    ShippingDock: "Shipping Dock",
    FrontDoor: "Front Door",
    KnockOnDoor: "Knock on Door",
    InAtMailbox: "In/At Mailbox",
    MailRoom: "Mail Room",
    Office: "Office",
    Other: "Other",
    Reception: "Reception",
    SideDoor: "Side Door",
};
/**
 * The type of building where the pickup is located.
 */
exports.BuildingType = {
    Apartment: "apartment",
    Building: "building",
    Department: "department",
    Floor: "floor",
    Room: "room",
    Suite: "suite",
};
/** @internal */
exports.BuildingLocationType$inboundSchema = z.nativeEnum(exports.BuildingLocationType);
/** @internal */
exports.BuildingLocationType$outboundSchema = exports.BuildingLocationType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var BuildingLocationType$;
(function (BuildingLocationType$) {
    /** @deprecated use `BuildingLocationType$inboundSchema` instead. */
    BuildingLocationType$.inboundSchema = exports.BuildingLocationType$inboundSchema;
    /** @deprecated use `BuildingLocationType$outboundSchema` instead. */
    BuildingLocationType$.outboundSchema = exports.BuildingLocationType$outboundSchema;
})(BuildingLocationType$ || (exports.BuildingLocationType$ = BuildingLocationType$ = {}));
/** @internal */
exports.BuildingType$inboundSchema = z.nativeEnum(exports.BuildingType);
/** @internal */
exports.BuildingType$outboundSchema = exports.BuildingType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var BuildingType$;
(function (BuildingType$) {
    /** @deprecated use `BuildingType$inboundSchema` instead. */
    BuildingType$.inboundSchema = exports.BuildingType$inboundSchema;
    /** @deprecated use `BuildingType$outboundSchema` instead. */
    BuildingType$.outboundSchema = exports.BuildingType$outboundSchema;
})(BuildingType$ || (exports.BuildingType$ = BuildingType$ = {}));
/** @internal */
exports.Location$inboundSchema = z.object({
    address: addresscompletecreaterequest_js_1.AddressCompleteCreateRequest$inboundSchema,
    building_location_type: exports.BuildingLocationType$inboundSchema,
    building_type: exports.BuildingType$inboundSchema.optional(),
    instructions: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "building_location_type": "buildingLocationType",
        "building_type": "buildingType",
    });
});
/** @internal */
exports.Location$outboundSchema = z.object({
    address: addresscompletecreaterequest_js_1.AddressCompleteCreateRequest$outboundSchema,
    buildingLocationType: exports.BuildingLocationType$outboundSchema,
    buildingType: exports.BuildingType$outboundSchema.optional(),
    instructions: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        buildingLocationType: "building_location_type",
        buildingType: "building_type",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var Location$;
(function (Location$) {
    /** @deprecated use `Location$inboundSchema` instead. */
    Location$.inboundSchema = exports.Location$inboundSchema;
    /** @deprecated use `Location$outboundSchema` instead. */
    Location$.outboundSchema = exports.Location$outboundSchema;
})(Location$ || (exports.Location$ = Location$ = {}));
function locationToJSON(location) {
    return JSON.stringify(exports.Location$outboundSchema.parse(location));
}
exports.locationToJSON = locationToJSON;
function locationFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.Location$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'Location' from JSON`);
}
exports.locationFromJSON = locationFromJSON;
//# sourceMappingURL=location.js.map