import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
/**
 * Additional invoiced charges to be shown on the Customs Declaration Commercial Invoice.
 */
export type CustomsInvoicedCharges = {
    /**
     * Currency for the invoiced charges amounts incurred on the end consumer.
     */
    currency: string;
    /**
     * Total shipping paid by the buyer.
     */
    totalShipping?: string | undefined;
    /**
     * Total taxes paid by the buyer.
     */
    totalTaxes?: string | undefined;
    /**
     * Total duties paid by the buyer.
     */
    totalDuties?: string | undefined;
    /**
     * Other fees paid by the buyer.
     */
    otherFees?: string | undefined;
};
/** @internal */
export declare const CustomsInvoicedCharges$inboundSchema: z.ZodType<CustomsInvoicedCharges, z.ZodTypeDef, unknown>;
/** @internal */
export type CustomsInvoicedCharges$Outbound = {
    currency: string;
    total_shipping?: string | undefined;
    total_taxes?: string | undefined;
    total_duties?: string | undefined;
    other_fees?: string | undefined;
};
/** @internal */
export declare const CustomsInvoicedCharges$outboundSchema: z.ZodType<CustomsInvoicedCharges$Outbound, z.ZodTypeDef, CustomsInvoicedCharges>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CustomsInvoicedCharges$ {
    /** @deprecated use `CustomsInvoicedCharges$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CustomsInvoicedCharges, z.ZodTypeDef, unknown>;
    /** @deprecated use `CustomsInvoicedCharges$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CustomsInvoicedCharges$Outbound, z.ZodTypeDef, CustomsInvoicedCharges>;
    /** @deprecated use `CustomsInvoicedCharges$Outbound` instead. */
    type Outbound = CustomsInvoicedCharges$Outbound;
}
export declare function customsInvoicedChargesToJSON(customsInvoicedCharges: CustomsInvoicedCharges): string;
export declare function customsInvoicedChargesFromJSON(jsonString: string): SafeParseResult<CustomsInvoicedCharges, SDKValidationError>;
//# sourceMappingURL=customsinvoicedcharges.d.ts.map