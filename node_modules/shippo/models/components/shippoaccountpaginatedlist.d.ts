import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { ShippoAccount, ShippoAccount$Outbound } from "./shippoaccount.js";
export type ShippoAccountPaginatedList = {
    next?: string | undefined;
    previous?: string | undefined;
    results?: Array<ShippoAccount> | undefined;
};
/** @internal */
export declare const ShippoAccountPaginatedList$inboundSchema: z.ZodType<ShippoAccountPaginatedList, z.ZodTypeDef, unknown>;
/** @internal */
export type ShippoAccountPaginatedList$Outbound = {
    next?: string | undefined;
    previous?: string | undefined;
    results?: Array<ShippoAccount$Outbound> | undefined;
};
/** @internal */
export declare const ShippoAccountPaginatedList$outboundSchema: z.ZodType<ShippoAccountPaginatedList$Outbound, z.ZodTypeDef, ShippoAccountPaginatedList>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ShippoAccountPaginatedList$ {
    /** @deprecated use `ShippoAccountPaginatedList$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ShippoAccountPaginatedList, z.ZodTypeDef, unknown>;
    /** @deprecated use `ShippoAccountPaginatedList$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ShippoAccountPaginatedList$Outbound, z.ZodTypeDef, ShippoAccountPaginatedList>;
    /** @deprecated use `ShippoAccountPaginatedList$Outbound` instead. */
    type Outbound = ShippoAccountPaginatedList$Outbound;
}
export declare function shippoAccountPaginatedListToJSON(shippoAccountPaginatedList: ShippoAccountPaginatedList): string;
export declare function shippoAccountPaginatedListFromJSON(jsonString: string): SafeParseResult<ShippoAccountPaginatedList, SDKValidationError>;
//# sourceMappingURL=shippoaccountpaginatedlist.d.ts.map