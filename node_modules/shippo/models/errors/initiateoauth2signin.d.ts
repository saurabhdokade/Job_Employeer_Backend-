import * as z from "zod";
/**
 * Invalid carrier account provided by the user
 */
export type InitiateOauth2SigninCarrierAccountsResponseResponseBodyData = {
    title?: string | undefined;
    detail?: string | undefined;
};
/**
 * Invalid carrier account provided by the user
 */
export declare class InitiateOauth2SigninCarrierAccountsResponseResponseBody extends Error {
    title?: string | undefined;
    detail?: string | undefined;
    /** The original data that was passed to this error instance. */
    data$: InitiateOauth2SigninCarrierAccountsResponseResponseBodyData;
    constructor(err: InitiateOauth2SigninCarrierAccountsResponseResponseBodyData);
}
/**
 * Invalid ShippoToken or unsupported carrier account provided by the user
 */
export type InitiateOauth2SigninCarrierAccountsResponseBodyData = {
    title?: string | undefined;
    detail?: string | undefined;
};
/**
 * Invalid ShippoToken or unsupported carrier account provided by the user
 */
export declare class InitiateOauth2SigninCarrierAccountsResponseBody extends Error {
    title?: string | undefined;
    detail?: string | undefined;
    /** The original data that was passed to this error instance. */
    data$: InitiateOauth2SigninCarrierAccountsResponseBodyData;
    constructor(err: InitiateOauth2SigninCarrierAccountsResponseBodyData);
}
/**
 * Invalid parameters provided by the user
 */
export type InitiateOauth2SigninResponseBodyData = {
    title?: string | undefined;
    detail?: string | undefined;
};
/**
 * Invalid parameters provided by the user
 */
export declare class InitiateOauth2SigninResponseBody extends Error {
    title?: string | undefined;
    detail?: string | undefined;
    /** The original data that was passed to this error instance. */
    data$: InitiateOauth2SigninResponseBodyData;
    constructor(err: InitiateOauth2SigninResponseBodyData);
}
/** @internal */
export declare const InitiateOauth2SigninCarrierAccountsResponseResponseBody$inboundSchema: z.ZodType<InitiateOauth2SigninCarrierAccountsResponseResponseBody, z.ZodTypeDef, unknown>;
/** @internal */
export type InitiateOauth2SigninCarrierAccountsResponseResponseBody$Outbound = {
    title?: string | undefined;
    detail?: string | undefined;
};
/** @internal */
export declare const InitiateOauth2SigninCarrierAccountsResponseResponseBody$outboundSchema: z.ZodType<InitiateOauth2SigninCarrierAccountsResponseResponseBody$Outbound, z.ZodTypeDef, InitiateOauth2SigninCarrierAccountsResponseResponseBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace InitiateOauth2SigninCarrierAccountsResponseResponseBody$ {
    /** @deprecated use `InitiateOauth2SigninCarrierAccountsResponseResponseBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<InitiateOauth2SigninCarrierAccountsResponseResponseBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `InitiateOauth2SigninCarrierAccountsResponseResponseBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<InitiateOauth2SigninCarrierAccountsResponseResponseBody$Outbound, z.ZodTypeDef, InitiateOauth2SigninCarrierAccountsResponseResponseBody>;
    /** @deprecated use `InitiateOauth2SigninCarrierAccountsResponseResponseBody$Outbound` instead. */
    type Outbound = InitiateOauth2SigninCarrierAccountsResponseResponseBody$Outbound;
}
/** @internal */
export declare const InitiateOauth2SigninCarrierAccountsResponseBody$inboundSchema: z.ZodType<InitiateOauth2SigninCarrierAccountsResponseBody, z.ZodTypeDef, unknown>;
/** @internal */
export type InitiateOauth2SigninCarrierAccountsResponseBody$Outbound = {
    title?: string | undefined;
    detail?: string | undefined;
};
/** @internal */
export declare const InitiateOauth2SigninCarrierAccountsResponseBody$outboundSchema: z.ZodType<InitiateOauth2SigninCarrierAccountsResponseBody$Outbound, z.ZodTypeDef, InitiateOauth2SigninCarrierAccountsResponseBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace InitiateOauth2SigninCarrierAccountsResponseBody$ {
    /** @deprecated use `InitiateOauth2SigninCarrierAccountsResponseBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<InitiateOauth2SigninCarrierAccountsResponseBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `InitiateOauth2SigninCarrierAccountsResponseBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<InitiateOauth2SigninCarrierAccountsResponseBody$Outbound, z.ZodTypeDef, InitiateOauth2SigninCarrierAccountsResponseBody>;
    /** @deprecated use `InitiateOauth2SigninCarrierAccountsResponseBody$Outbound` instead. */
    type Outbound = InitiateOauth2SigninCarrierAccountsResponseBody$Outbound;
}
/** @internal */
export declare const InitiateOauth2SigninResponseBody$inboundSchema: z.ZodType<InitiateOauth2SigninResponseBody, z.ZodTypeDef, unknown>;
/** @internal */
export type InitiateOauth2SigninResponseBody$Outbound = {
    title?: string | undefined;
    detail?: string | undefined;
};
/** @internal */
export declare const InitiateOauth2SigninResponseBody$outboundSchema: z.ZodType<InitiateOauth2SigninResponseBody$Outbound, z.ZodTypeDef, InitiateOauth2SigninResponseBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace InitiateOauth2SigninResponseBody$ {
    /** @deprecated use `InitiateOauth2SigninResponseBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<InitiateOauth2SigninResponseBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `InitiateOauth2SigninResponseBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<InitiateOauth2SigninResponseBody$Outbound, z.ZodTypeDef, InitiateOauth2SigninResponseBody>;
    /** @deprecated use `InitiateOauth2SigninResponseBody$Outbound` instead. */
    type Outbound = InitiateOauth2SigninResponseBody$Outbound;
}
//# sourceMappingURL=initiateoauth2signin.d.ts.map