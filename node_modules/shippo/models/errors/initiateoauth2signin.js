"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.InitiateOauth2SigninResponseBody$ = exports.InitiateOauth2SigninResponseBody$outboundSchema = exports.InitiateOauth2SigninResponseBody$inboundSchema = exports.InitiateOauth2SigninCarrierAccountsResponseBody$ = exports.InitiateOauth2SigninCarrierAccountsResponseBody$outboundSchema = exports.InitiateOauth2SigninCarrierAccountsResponseBody$inboundSchema = exports.InitiateOauth2SigninCarrierAccountsResponseResponseBody$ = exports.InitiateOauth2SigninCarrierAccountsResponseResponseBody$outboundSchema = exports.InitiateOauth2SigninCarrierAccountsResponseResponseBody$inboundSchema = exports.InitiateOauth2SigninResponseBody = exports.InitiateOauth2SigninCarrierAccountsResponseBody = exports.InitiateOauth2SigninCarrierAccountsResponseResponseBody = void 0;
const z = __importStar(require("zod"));
/**
 * Invalid carrier account provided by the user
 */
class InitiateOauth2SigninCarrierAccountsResponseResponseBody extends Error {
    constructor(err) {
        const message = "message" in err && typeof err.message === "string"
            ? err.message
            : `API error occurred: ${JSON.stringify(err)}`;
        super(message);
        this.data$ = err;
        if (err.title != null)
            this.title = err.title;
        if (err.detail != null)
            this.detail = err.detail;
        this.name = "InitiateOauth2SigninCarrierAccountsResponseResponseBody";
    }
}
exports.InitiateOauth2SigninCarrierAccountsResponseResponseBody = InitiateOauth2SigninCarrierAccountsResponseResponseBody;
/**
 * Invalid ShippoToken or unsupported carrier account provided by the user
 */
class InitiateOauth2SigninCarrierAccountsResponseBody extends Error {
    constructor(err) {
        const message = "message" in err && typeof err.message === "string"
            ? err.message
            : `API error occurred: ${JSON.stringify(err)}`;
        super(message);
        this.data$ = err;
        if (err.title != null)
            this.title = err.title;
        if (err.detail != null)
            this.detail = err.detail;
        this.name = "InitiateOauth2SigninCarrierAccountsResponseBody";
    }
}
exports.InitiateOauth2SigninCarrierAccountsResponseBody = InitiateOauth2SigninCarrierAccountsResponseBody;
/**
 * Invalid parameters provided by the user
 */
class InitiateOauth2SigninResponseBody extends Error {
    constructor(err) {
        const message = "message" in err && typeof err.message === "string"
            ? err.message
            : `API error occurred: ${JSON.stringify(err)}`;
        super(message);
        this.data$ = err;
        if (err.title != null)
            this.title = err.title;
        if (err.detail != null)
            this.detail = err.detail;
        this.name = "InitiateOauth2SigninResponseBody";
    }
}
exports.InitiateOauth2SigninResponseBody = InitiateOauth2SigninResponseBody;
/** @internal */
exports.InitiateOauth2SigninCarrierAccountsResponseResponseBody$inboundSchema = z.object({
    title: z.string().optional(),
    detail: z.string().optional(),
})
    .transform((v) => {
    return new InitiateOauth2SigninCarrierAccountsResponseResponseBody(v);
});
/** @internal */
exports.InitiateOauth2SigninCarrierAccountsResponseResponseBody$outboundSchema = z.instanceof(InitiateOauth2SigninCarrierAccountsResponseResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
    title: z.string().optional(),
    detail: z.string().optional(),
}));
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var InitiateOauth2SigninCarrierAccountsResponseResponseBody$;
(function (InitiateOauth2SigninCarrierAccountsResponseResponseBody$) {
    /** @deprecated use `InitiateOauth2SigninCarrierAccountsResponseResponseBody$inboundSchema` instead. */
    InitiateOauth2SigninCarrierAccountsResponseResponseBody$.inboundSchema = exports.InitiateOauth2SigninCarrierAccountsResponseResponseBody$inboundSchema;
    /** @deprecated use `InitiateOauth2SigninCarrierAccountsResponseResponseBody$outboundSchema` instead. */
    InitiateOauth2SigninCarrierAccountsResponseResponseBody$.outboundSchema = exports.InitiateOauth2SigninCarrierAccountsResponseResponseBody$outboundSchema;
})(InitiateOauth2SigninCarrierAccountsResponseResponseBody$ || (exports.InitiateOauth2SigninCarrierAccountsResponseResponseBody$ = InitiateOauth2SigninCarrierAccountsResponseResponseBody$ = {}));
/** @internal */
exports.InitiateOauth2SigninCarrierAccountsResponseBody$inboundSchema = z.object({
    title: z.string().optional(),
    detail: z.string().optional(),
})
    .transform((v) => {
    return new InitiateOauth2SigninCarrierAccountsResponseBody(v);
});
/** @internal */
exports.InitiateOauth2SigninCarrierAccountsResponseBody$outboundSchema = z.instanceof(InitiateOauth2SigninCarrierAccountsResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
    title: z.string().optional(),
    detail: z.string().optional(),
}));
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var InitiateOauth2SigninCarrierAccountsResponseBody$;
(function (InitiateOauth2SigninCarrierAccountsResponseBody$) {
    /** @deprecated use `InitiateOauth2SigninCarrierAccountsResponseBody$inboundSchema` instead. */
    InitiateOauth2SigninCarrierAccountsResponseBody$.inboundSchema = exports.InitiateOauth2SigninCarrierAccountsResponseBody$inboundSchema;
    /** @deprecated use `InitiateOauth2SigninCarrierAccountsResponseBody$outboundSchema` instead. */
    InitiateOauth2SigninCarrierAccountsResponseBody$.outboundSchema = exports.InitiateOauth2SigninCarrierAccountsResponseBody$outboundSchema;
})(InitiateOauth2SigninCarrierAccountsResponseBody$ || (exports.InitiateOauth2SigninCarrierAccountsResponseBody$ = InitiateOauth2SigninCarrierAccountsResponseBody$ = {}));
/** @internal */
exports.InitiateOauth2SigninResponseBody$inboundSchema = z.object({
    title: z.string().optional(),
    detail: z.string().optional(),
})
    .transform((v) => {
    return new InitiateOauth2SigninResponseBody(v);
});
/** @internal */
exports.InitiateOauth2SigninResponseBody$outboundSchema = z.instanceof(InitiateOauth2SigninResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
    title: z.string().optional(),
    detail: z.string().optional(),
}));
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var InitiateOauth2SigninResponseBody$;
(function (InitiateOauth2SigninResponseBody$) {
    /** @deprecated use `InitiateOauth2SigninResponseBody$inboundSchema` instead. */
    InitiateOauth2SigninResponseBody$.inboundSchema = exports.InitiateOauth2SigninResponseBody$inboundSchema;
    /** @deprecated use `InitiateOauth2SigninResponseBody$outboundSchema` instead. */
    InitiateOauth2SigninResponseBody$.outboundSchema = exports.InitiateOauth2SigninResponseBody$outboundSchema;
})(InitiateOauth2SigninResponseBody$ || (exports.InitiateOauth2SigninResponseBody$ = InitiateOauth2SigninResponseBody$ = {}));
//# sourceMappingURL=initiateoauth2signin.js.map