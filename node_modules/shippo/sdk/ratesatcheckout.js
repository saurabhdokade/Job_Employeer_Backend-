"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.RatesAtCheckout = void 0;
const ratesAtCheckoutCreate_js_1 = require("../funcs/ratesAtCheckoutCreate.js");
const ratesAtCheckoutDeleteDefaultParcelTemplate_js_1 = require("../funcs/ratesAtCheckoutDeleteDefaultParcelTemplate.js");
const ratesAtCheckoutGetDefaultParcelTemplate_js_1 = require("../funcs/ratesAtCheckoutGetDefaultParcelTemplate.js");
const ratesAtCheckoutUpdateDefaultParcelTemplate_js_1 = require("../funcs/ratesAtCheckoutUpdateDefaultParcelTemplate.js");
const sdks_js_1 = require("../lib/sdks.js");
const fp_js_1 = require("../types/fp.js");
class RatesAtCheckout extends sdks_js_1.ClientSDK {
    /**
     * Generate a live rates request
     *
     * @remarks
     * Initiates a live rates request. Include either the object ID for
     * an existing address record or a fully formed address object when entering
     * an address value. You can also enter the object ID of an existing user parcel
     * template or a fully formed user parcel template object as the parcel value.
     */
    async create(request, options) {
        return (0, fp_js_1.unwrapAsync)((0, ratesAtCheckoutCreate_js_1.ratesAtCheckoutCreate)(this, request, options));
    }
    /**
     * Show current default parcel template
     *
     * @remarks
     * Retrieve and display the currently configured default parcel template for live rates.
     */
    async getDefaultParcelTemplate(request, options) {
        return (0, fp_js_1.unwrapAsync)((0, ratesAtCheckoutGetDefaultParcelTemplate_js_1.ratesAtCheckoutGetDefaultParcelTemplate)(this, request, options));
    }
    /**
     * Update default parcel template
     *
     * @remarks
     * Update the currently configured default parcel template for live rates. The object_id in the request payload should identify the user parcel template to be the new default.
     */
    async updateDefaultParcelTemplate(request, options) {
        return (0, fp_js_1.unwrapAsync)((0, ratesAtCheckoutUpdateDefaultParcelTemplate_js_1.ratesAtCheckoutUpdateDefaultParcelTemplate)(this, request, options));
    }
    /**
     * Clear current default parcel template
     *
     * @remarks
     * Clears the currently configured default parcel template for live rates.
     */
    async deleteDefaultParcelTemplate(request, options) {
        return (0, fp_js_1.unwrapAsync)((0, ratesAtCheckoutDeleteDefaultParcelTemplate_js_1.ratesAtCheckoutDeleteDefaultParcelTemplate)(this, request, options));
    }
}
exports.RatesAtCheckout = RatesAtCheckout;
//# sourceMappingURL=ratesatcheckout.js.map