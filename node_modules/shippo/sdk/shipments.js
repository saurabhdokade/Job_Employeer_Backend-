"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.Shipments = void 0;
const shipmentsCreate_js_1 = require("../funcs/shipmentsCreate.js");
const shipmentsGet_js_1 = require("../funcs/shipmentsGet.js");
const shipmentsList_js_1 = require("../funcs/shipmentsList.js");
const sdks_js_1 = require("../lib/sdks.js");
const fp_js_1 = require("../types/fp.js");
class Shipments extends sdks_js_1.ClientSDK {
    /**
     * List all shipments
     *
     * @remarks
     * Returns a list of all shipment objects.<br><br>
     * In order to filter results, you must use the below path parameters.
     * A maximum date range of 90 days is permitted.
     * Provided dates should be ISO 8601 UTC dates (timezone offsets are currently not supported).<br><br>
     *
     * Optional path parameters:<br>
     *   `object_created_gt`- object(s) created greater than a provided date time<br>
     *   `object_created_gte` - object(s) created greater than or equal to a provided date time<br>
     *   `object_created_lt` - object(s) created less than a provided date time<br>
     *   `object_created_lte` - object(s) created less than or equal to a provided date time<br>
     *
     *   Date format examples:<br>
     *     `2017-01-01`<br>
     *     `2017-01-01T03:30:30` or `2017-01-01T03:30:30.5`<br>
     *     `2017-01-01T03:30:30Z`<br><br>
     *
     *   Example URL:<br>
     *     `https://api.goshippo.com/shipments/?object_created_gte=2017-01-01T00:00:30&object_created_lt=2017-04-01T00:00:30`
     */
    async list(request, options) {
        return (0, fp_js_1.unwrapAsync)((0, shipmentsList_js_1.shipmentsList)(this, request, options));
    }
    /**
     * Create a new shipment
     *
     * @remarks
     * Creates a new shipment object.
     */
    async create(request, options) {
        return (0, fp_js_1.unwrapAsync)((0, shipmentsCreate_js_1.shipmentsCreate)(this, request, options));
    }
    /**
     * Retrieve a shipment
     *
     * @remarks
     * Returns an existing shipment using an object ID
     */
    async get(shipmentId, options) {
        return (0, fp_js_1.unwrapAsync)((0, shipmentsGet_js_1.shipmentsGet)(this, shipmentId, options));
    }
}
exports.Shipments = Shipments;
//# sourceMappingURL=shipments.js.map