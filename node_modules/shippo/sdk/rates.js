"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.Rates = void 0;
const ratesGet_js_1 = require("../funcs/ratesGet.js");
const ratesListShipmentRates_js_1 = require("../funcs/ratesListShipmentRates.js");
const ratesListShipmentRatesByCurrencyCode_js_1 = require("../funcs/ratesListShipmentRatesByCurrencyCode.js");
const sdks_js_1 = require("../lib/sdks.js");
const fp_js_1 = require("../types/fp.js");
class Rates extends sdks_js_1.ClientSDK {
    /**
     * Retrieve a rate
     *
     * @remarks
     * Returns an existing rate using a rate object ID.
     */
    async get(rateId, options) {
        return (0, fp_js_1.unwrapAsync)((0, ratesGet_js_1.ratesGet)(this, rateId, options));
    }
    /**
     * Retrieve shipment rates
     *
     * @remarks
     * Returns a paginated list of rates associated with a shipment
     */
    async listShipmentRates(shipmentId, page, results, options) {
        return (0, fp_js_1.unwrapAsync)((0, ratesListShipmentRates_js_1.ratesListShipmentRates)(this, shipmentId, page, results, options));
    }
    /**
     * Retrieve shipment rates in currency
     *
     * @remarks
     * Returns all available shipping rates for a shipment object.
     *
     * When you create a new valid shipment object, Shippo automatically calculates all available rates. Depending on your shipment data, there may be none, one or multiple rates.
     *
     * By default, the calculated rates will return the price in two currencies under the `amount` and `amount_local` keys, respectively. The `amount` key will contain the price of a rate expressed in the currency that is used in the country from where the parcel originates, and the `amount_local` key will contain the price expressed in the currency that is used in the country the parcel is shipped to. You can request rates with prices expressed in a different currency by adding the currency code to the end of the resource URL. The full list of supported currencies along with their codes can be viewed on <a href="http://openexchangerates.org/api/currencies.json">open exchange rates</a>.
     *
     * Note: re-requesting the rates with a different currency code will re-queue the shipment (i.e. set the Shipment's `status` to `QUEUED`) and the converted currency rates will only be available when the Shipment's `status` is set to `SUCCESS`.
     */
    async listShipmentRatesByCurrencyCode(request, options) {
        return (0, fp_js_1.unwrapAsync)((0, ratesListShipmentRatesByCurrencyCode_js_1.ratesListShipmentRatesByCurrencyCode)(this, request, options));
    }
}
exports.Rates = Rates;
//# sourceMappingURL=rates.js.map