"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.Addresses = void 0;
const addressesCreate_js_1 = require("../funcs/addressesCreate.js");
const addressesGet_js_1 = require("../funcs/addressesGet.js");
const addressesList_js_1 = require("../funcs/addressesList.js");
const addressesValidate_js_1 = require("../funcs/addressesValidate.js");
const sdks_js_1 = require("../lib/sdks.js");
const fp_js_1 = require("../types/fp.js");
class Addresses extends sdks_js_1.ClientSDK {
    /**
     * List all addresses
     *
     * @remarks
     * Returns a list of all address objects that have been created in this account.
     */
    async list(page, results, options) {
        return (0, fp_js_1.unwrapAsync)((0, addressesList_js_1.addressesList)(this, page, results, options));
    }
    /**
     * Create a new address
     *
     * @remarks
     * Creates a new address object. You can use address objects to create new shipments, calculate rates, and to create orders.
     */
    async create(request, options) {
        return (0, fp_js_1.unwrapAsync)((0, addressesCreate_js_1.addressesCreate)(this, request, options));
    }
    /**
     * Retrieve an address
     *
     * @remarks
     * Returns an existing address using an object ID.
     */
    async get(addressId, options) {
        return (0, fp_js_1.unwrapAsync)((0, addressesGet_js_1.addressesGet)(this, addressId, options));
    }
    /**
     * Validate an address
     *
     * @remarks
     * Validates an existing address using an object ID
     */
    async validate(addressId, options) {
        return (0, fp_js_1.unwrapAsync)((0, addressesValidate_js_1.addressesValidate)(this, addressId, options));
    }
}
exports.Addresses = Addresses;
//# sourceMappingURL=addresses.js.map