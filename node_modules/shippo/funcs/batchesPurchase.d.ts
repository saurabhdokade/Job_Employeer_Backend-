import { ShippoCore } from "../core.js";
import { RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import { ConnectionError, InvalidRequestError, RequestAbortedError, RequestTimeoutError, UnexpectedClientError } from "../models/errors/httpclienterrors.js";
import { SDKError } from "../models/errors/sdkerror.js";
import { SDKValidationError } from "../models/errors/sdkvalidationerror.js";
import { Result } from "../types/fp.js";
/**
 * Purchase a batch
 *
 * @remarks
 * Purchases an existing batch with a status of `VALID`.
 * Once you send a POST request to the purchase endpoint the batch status will change to `PURCHASING`.
 * When all the shipments are purchased, the status will change to `PURCHASED` and you will receive a
 * `batch_purchased` webhook indicating that the batch has been purchased
 */
export declare function batchesPurchase(client: ShippoCore, batchId: string, options?: RequestOptions): Promise<Result<components.Batch, SDKError | SDKValidationError | UnexpectedClientError | InvalidRequestError | RequestAbortedError | RequestTimeoutError | ConnectionError>>;
//# sourceMappingURL=batchesPurchase.d.ts.map