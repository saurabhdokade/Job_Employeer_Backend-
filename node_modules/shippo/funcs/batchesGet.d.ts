import { ShippoCore } from "../core.js";
import { RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import { ConnectionError, InvalidRequestError, RequestAbortedError, RequestTimeoutError, UnexpectedClientError } from "../models/errors/httpclienterrors.js";
import { SDKError } from "../models/errors/sdkerror.js";
import { SDKValidationError } from "../models/errors/sdkvalidationerror.js";
import { Result } from "../types/fp.js";
/**
 * Retrieve a batch
 *
 * @remarks
 * Returns a batch using an object ID. <br> Batch shipments are displayed 100 at a time.  You can iterate
 * through each `page` using the `?page= query` parameter.  You can also filter based on batch shipment
 * status, for example, by passing a query param like `?object_results=creation_failed`. <br>
 * For more details on filtering results, see our guide on <a href="https://docs.goshippo.com/docs/api_concepts/filtering/" target="blank"> filtering</a>.
 */
export declare function batchesGet(client: ShippoCore, batchId: string, page?: number | undefined, results?: number | undefined, options?: RequestOptions): Promise<Result<components.Batch, SDKError | SDKValidationError | UnexpectedClientError | InvalidRequestError | RequestAbortedError | RequestTimeoutError | ConnectionError>>;
//# sourceMappingURL=batchesGet.d.ts.map