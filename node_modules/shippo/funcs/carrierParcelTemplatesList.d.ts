import { ShippoCore } from "../core.js";
import { RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import { ConnectionError, InvalidRequestError, RequestAbortedError, RequestTimeoutError, UnexpectedClientError } from "../models/errors/httpclienterrors.js";
import { SDKError } from "../models/errors/sdkerror.js";
import { SDKValidationError } from "../models/errors/sdkvalidationerror.js";
import * as operations from "../models/operations/index.js";
import { Result } from "../types/fp.js";
/**
 * List all carrier parcel templates
 *
 * @remarks
 * List all carrier parcel template objects. <br> Use the following query string params to filter the results as needed. <br>
 * <ul>
 * <li>`include=all` (the default). Includes templates from all carriers </li>
 * <li>`include=user`. Includes templates only from carriers which the user has added (whether or not they're currently enabled) </li>
 * <li>`include=enabled`. includes templates only for carriers which the user has added and enabled </li>
 * <li>`carrier=*token*`. filter by specific carrier, e.g. fedex, usps </li>
 * </ul>
 */
export declare function carrierParcelTemplatesList(client: ShippoCore, include?: operations.Include | undefined, carrier?: string | undefined, options?: RequestOptions): Promise<Result<components.CarrierParcelTemplateList, SDKError | SDKValidationError | UnexpectedClientError | InvalidRequestError | RequestAbortedError | RequestTimeoutError | ConnectionError>>;
//# sourceMappingURL=carrierParcelTemplatesList.d.ts.map